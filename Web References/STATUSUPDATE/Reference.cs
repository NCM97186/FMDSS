//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace FMDSS.STATUSUPDATE {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="STATUSUPDATESoap", Namespace="http://tempuri.org/")]
    public partial class STATUSUPDATE : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback statusupdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback RSPCBREGNUMUPDATEOperationCompleted;
        
        private System.Threading.SendOrPostCallback AppIdUpdateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public STATUSUPDATE() {
            this.Url = global::FMDSS.Properties.Settings.Default.FMDSS_STATUSUPDATE_STATUSUPDATE;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event statusupdateCompletedEventHandler statusupdateCompleted;
        
        /// <remarks/>
        public event RSPCBREGNUMUPDATECompletedEventHandler RSPCBREGNUMUPDATECompleted;
        
        /// <remarks/>
        public event AppIdUpdateCompletedEventHandler AppIdUpdateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/statusupdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string statusupdate(int appcode, int appsvrcode, string regno, int statuscode, string remarks, string actiondetails, string actionurl, string activitytype) {
            object[] results = this.Invoke("statusupdate", new object[] {
                        appcode,
                        appsvrcode,
                        regno,
                        statuscode,
                        remarks,
                        actiondetails,
                        actionurl,
                        activitytype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void statusupdateAsync(int appcode, int appsvrcode, string regno, int statuscode, string remarks, string actiondetails, string actionurl, string activitytype) {
            this.statusupdateAsync(appcode, appsvrcode, regno, statuscode, remarks, actiondetails, actionurl, activitytype, null);
        }
        
        /// <remarks/>
        public void statusupdateAsync(int appcode, int appsvrcode, string regno, int statuscode, string remarks, string actiondetails, string actionurl, string activitytype, object userState) {
            if ((this.statusupdateOperationCompleted == null)) {
                this.statusupdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstatusupdateOperationCompleted);
            }
            this.InvokeAsync("statusupdate", new object[] {
                        appcode,
                        appsvrcode,
                        regno,
                        statuscode,
                        remarks,
                        actiondetails,
                        actionurl,
                        activitytype}, this.statusupdateOperationCompleted, userState);
        }
        
        private void OnstatusupdateOperationCompleted(object arg) {
            if ((this.statusupdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.statusupdateCompleted(this, new statusupdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RSPCBREGNUMUPDATE", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string RSPCBREGNUMUPDATE(int SWSID, string regno, int statuscode) {
            object[] results = this.Invoke("RSPCBREGNUMUPDATE", new object[] {
                        SWSID,
                        regno,
                        statuscode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RSPCBREGNUMUPDATEAsync(int SWSID, string regno, int statuscode) {
            this.RSPCBREGNUMUPDATEAsync(SWSID, regno, statuscode, null);
        }
        
        /// <remarks/>
        public void RSPCBREGNUMUPDATEAsync(int SWSID, string regno, int statuscode, object userState) {
            if ((this.RSPCBREGNUMUPDATEOperationCompleted == null)) {
                this.RSPCBREGNUMUPDATEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRSPCBREGNUMUPDATEOperationCompleted);
            }
            this.InvokeAsync("RSPCBREGNUMUPDATE", new object[] {
                        SWSID,
                        regno,
                        statuscode}, this.RSPCBREGNUMUPDATEOperationCompleted, userState);
        }
        
        private void OnRSPCBREGNUMUPDATEOperationCompleted(object arg) {
            if ((this.RSPCBREGNUMUPDATECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RSPCBREGNUMUPDATECompleted(this, new RSPCBREGNUMUPDATECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AppIdUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AppIdUpdate(int SWSID, string regno, int statuscode) {
            object[] results = this.Invoke("AppIdUpdate", new object[] {
                        SWSID,
                        regno,
                        statuscode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AppIdUpdateAsync(int SWSID, string regno, int statuscode) {
            this.AppIdUpdateAsync(SWSID, regno, statuscode, null);
        }
        
        /// <remarks/>
        public void AppIdUpdateAsync(int SWSID, string regno, int statuscode, object userState) {
            if ((this.AppIdUpdateOperationCompleted == null)) {
                this.AppIdUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppIdUpdateOperationCompleted);
            }
            this.InvokeAsync("AppIdUpdate", new object[] {
                        SWSID,
                        regno,
                        statuscode}, this.AppIdUpdateOperationCompleted, userState);
        }
        
        private void OnAppIdUpdateOperationCompleted(object arg) {
            if ((this.AppIdUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppIdUpdateCompleted(this, new AppIdUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void statusupdateCompletedEventHandler(object sender, statusupdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class statusupdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal statusupdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void RSPCBREGNUMUPDATECompletedEventHandler(object sender, RSPCBREGNUMUPDATECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RSPCBREGNUMUPDATECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RSPCBREGNUMUPDATECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void AppIdUpdateCompletedEventHandler(object sender, AppIdUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppIdUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AppIdUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591