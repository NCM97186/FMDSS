@model FMDSS.Models.ReconciliationModel
@{
    ViewBag.Title = "Get Reconciliation List";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>

<script type="text/javascript">
    var $ = jQuery.noConflict();

    function GetRefundTranDetails(ticketID, RequestID, TokenNo, ServiceID) {
        $("#FromDateServer").val($("#FromDate").val());
        $("#ToDateServer").val($("#ToDate").val());
        $("#RequestID").val(RequestID);
        $("#TicketID").val(ticketID);
        $("#TokenNO").val(TokenNo);
        $("#ServiceID").val(ServiceID);
        $("#modal-window").modal("show");
    }

    $(function () {
        $("#modal-window").on("click", "#btn-close", function () {
            $("#modal-window").modal("hide");
        });
    });



    $(document).ready(function () {

        $('#submit1').click(function (e) {
            if ($('#FromDate').val() == '') {
                $("#errFromDate").css("display", "block");
                $('#errFromDate').focus();
                return false;
            }
            else {
                $("#errFromDate").css("display", "none");
            }

            if ($('#ToDate').val() == '') {
                $("#errToDate").css("display", "block");
                $('#errToDate').focus();
                return false;
            }
            else {
                $("#errToDate").css("display", "none");
            }
            if ($("#Service option:Selected").val() == "" || $("#Service option:Selected").val() == "0")
            {
                $("#errService").css("display", "block");
                $('#errService').focus();
                return false;
            }
            else {
                $("#errService").css("display", "none");
            }

        });
        // date validation ========================================================================
        var currentYear = (new Date).getFullYear();

        var Range = '2008:' + (currentYear + 1)

        $("#FromDate,#ToDate").datepicker({ maxDate: new Date(), yearRange: Range, dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
        var currentDate = new Date();
        //$("#txt_fromdate").datepicker("setDate", currentDate);
        //$("#txt_todate").datepicker("setDate", currentDate);

        $("#FromDate").change(function () {
            $("#ToDate").val('');
        });

        $(document).on('keypress', '#FromDate,#ToDate', function (event) {

            event.preventDefault();
            return false;

        });

        $('#FromDate,#ToDate').keydown(function (event)
        { return cancelBackspace(event) });
        function cancelBackspace(event) {
            if (event.keyCode == 8 || event.keyCode == 46) {
                return false;
            }
        }

        $("#ToDate").change(function () {
            var str1 = $("#FromDate").val();
            var str2 = $("#ToDate").val();

            var L = 3, d1 = $("#FromDate").val().split('/'), d2 = $("#ToDate").val().split('/');
            d1 = new Date(+d1[2], parseInt(d1[1], 10) - 1, parseInt(d1[0], 10));
            d2 = new Date(+d2[2], parseInt(d2[1], 10) - 1, parseInt(d2[0], 10));

            if (new Date(d1) <= new Date(d2)) {
                // parseDate(str1, str2);
            }
            else {
                $("#ToDate").val('');
                alert('Date Must be GreaterThen From Date');
            }
        });

        // date validation ========================================================================
    });
</script>

@using (Html.BeginForm("Index", "Reconciliation", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
{
    <div id="modal-window" style="display:none;" title="Transation" class="modal fade">
        <div class="modal-dialog" style="width: 50%;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Are you sure you want to rollback transation ?</h4>
                </div>
                <div class="modal-body">
                    @Html.HiddenFor(model => model.FromDate, new { @id = "FromDateServer" })
                    @Html.HiddenFor(model => model.ToDate, new { @id = "ToDateServer" })
                    @Html.HiddenFor(model => model.RefundModel.RequestID, new { @id = "RequestID" })
                    @Html.HiddenFor(model => model.RefundModel.TicketID, new { @id = "TicketID" })
                    @Html.HiddenFor(model => model.RefundModel.TokenNO, new { @id = "TokenNO" })
                    @Html.HiddenFor(model => model.RefundModel.ServiceID, new { @id = "ServiceID",@name= "ServiceID" })
                    @Html.TextAreaFor(model => model.RefundModel.RefundComment, new { @class = "form-control", @Placeholder = "Comments", @maxlength = 500 })
                    @Html.ValidationMessageFor(model => model.RefundModel.RefundComment, "", new { @style = "color:red" })
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Submit</button>
                    <button type="button" id="btn-close" class="btn btn-danger">Close</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
}

<div class="panel-heading"> <span>@Html.Raw(TempData["Message"]) </span> </div>
<div class="col-lg-9 pad">
    <h1 class="page-header">Reconciliation List</h1>

</div>
<div class="row">

    <div class="col-md-9">
        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm("GetReconciliationList", "Reconciliation", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
                {
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>From Date:<span class="mandatory">*</span></label>
                            @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control common ", id = "FromDate" })
                            <span id="errFromDate" style="display: none" class="alert-danger1">From Date is Required.</span>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>To Date:<span class="mandatory">*</span></label>
                            @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control common ", id = "ToDate" })
                            <span id="errToDate" style="display: none" class="alert-danger1">To Date is Required.</span>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Service Name:<span class="mandatory">*</span></label>
                            @Html.DropDownListFor(model => model.ServiceID, (IEnumerable<SelectListItem>)ViewBag.ServiceList, "--Select--", new { @class = "form-control common ", id = "Service" })
                            <span id="errService" style="display: none" class="alert-danger1">Service Name is Required.</span>
                        </div>
                    </div>

                    <div id="btn" class="col-lg-12">

                        <button type="submit" class="btn btn-success" value="Save" id="submit1">
                            <i class="fa fa-check"></i> Submit
                        </button>
                        <button type="reset" class="btn btn-warning" id="btn_reset">
                            <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                        </button>

                        <button class="btn btn-info pull-right" onclick="tablesToExcel(['dataTablesMatch', 'dataTablesUnMatch', 'dataTablesFromEmitra'], ['dataTablesMatch', 'dataTablesUnMatch', 'dataTablesFromEmitra'], 'Reconciliation', 'Excel')">Export to Excel</button>
                    </div>

                }
            </div>
        </div>

        <div class="panel with-nav-tabs panel-default">

            <div class="panel-heading">
                <ul class="nav nav-tabs" id="myTab">
                    <li class=""><a href="#tab2default" data-toggle="tab"><i class="fa fa-user fa-fw"></i>Match Requests</a></li>
                    <li class=""><a href="#tab3default " data-toggle="tab"><i class="fa fa-comment fa-fw"></i>Un Match Requests</a></li>
                    <li class="active"><a href="#tab4default " data-toggle="tab"><i class="fa fa-comment fa-fw"></i>Request for Emitra</a></li>
                </ul>

            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade  in tbl-scroll" id="tab2default">
                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <input type="text" class="form-control" placeholder="Search" id="searchval" onblur="searchs();">
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover table-responsive" id="dataTablesMatch">
                                        <thead>
                                            <tr>

                                                <th>
                                                    Request ID
                                                </th>
                                                <th>
                                                    Token NO
                                                </th>
                                                <th>
                                                    Receipt No
                                                </th>
                                                <th>
                                                    Emitra Status
                                                </th>
                                                <th>
                                                    FMDSS Status
                                                </th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.ReconciliationMatch)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestID)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.TokenNO)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.ReceiptNo)
                                                    </td>
                                                    <td>
                                                        @item.Emitra_Status
                                                    </td>
                                                    <td>
                                                        @item.Fmdss_Status
                                                    </td>


                                                </tr>
                                            }


                                        </tbody>

                                    </table>


                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>

                    </div>


                    <div class="tab-pane fade in tbl-scroll " id="tab3default">

                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <input type="text" class="form-control" placeholder="Search" id="searchval1" onblur="searchs1();">
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover table-responsive" id="dataTablesUnMatch">
                                        <thead>
                                            <tr>

                                                <th>
                                                    Request ID
                                                </th>
                                                <th>
                                                    Token NO
                                                </th>
                                                <th>
                                                    Receipt No
                                                </th>
                                                <th>
                                                    Emitra Status
                                                </th>
                                                <th>
                                                    FMDSS Status
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.ReconciliationDiffrent)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestID)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.TokenNO)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.ReceiptNo)
                                                    </td>
                                                    <td>
                                                        @item.Emitra_Status
                                                    </td>
                                                    <td>
                                                        @item.Fmdss_Status
                                                    </td>

                                                    <td>
                                                        <input type="button" id="RefundStatus" value="Refund Transation" class="btn btn-info" onclick=GetRefundTranDetails('@item.TicketID','@item.RequestID','@item.TokenNO','@item.ServiceID')>
                                                    </td>

                                                </tr>
                                            }


                                        </tbody>

                                    </table>

                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>
                    </div>

                    <div class="tab-pane fade in tbl-scroll active" id="tab4default">

                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group">
                                    <input type="text" class="form-control" placeholder="Search" id="searchval3" onblur="searchs3();">
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover table-responsive" id="dataTablesFromEmitra">
                                        <thead>
                                            <tr>

                                                <th>
                                                    Request ID
                                                </th>
                                                <th>
                                                    Token NO
                                                </th>
                                                <th>
                                                    Receipt No
                                                </th>
                                                <th>
                                                    Amount
                                                </th>
                                                <th>
                                                    Comments
                                                </th>

                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.EmritaListStatus)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.RequestID)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.TokenNO)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(modelItem => item.ReceiptNo)
                                                    </td>
                                                    <td>
                                                        @item.Total_Amount
                                                    </td>
                                                    <td>
                                                        @item.RefundComment
                                                    </td>

                                                </tr>
                                            }


                                        </tbody>

                                    </table>

                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>
                    </div>
                    <!-- /.Tab3 -->
                </div>
            </div>
        </div>
    </div>
    <!-- /.Tab1 -->




</div>


<script type="text/javascript">
    $.noConflict(true);
    var tablesToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
        , tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
          + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'
          + '<Styles>'
          + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
          + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
          + '</Styles>'
          + '{worksheets}</Workbook>'
        , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
        , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
        , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
        , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (tables, wsnames, wbname, appname) {
            var ctx = "";
            var workbookXML = "";
            var worksheetsXML = "";
            var rowsXML = "";
            var getFilterFromDate = document.getElementById('FromDate').value;
            var getFilterToDate = document.getElementById('ToDate').value;
            wbname = wbname + "FromDate:-" + getFilterFromDate + "- ToDate:-" + getFilterToDate + '.xls';
            for (var i = 0; i < tables.length; i++) {
                if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);
                for (var j = 0; j < tables[i].rows.length; j++) {
                    rowsXML += '<Row>'
                    for (var k = 0; k < tables[i].rows[j].cells.length; k++) {
                        var dataType = tables[i].rows[j].cells[k].getAttribute("data-type");
                        var dataStyle = tables[i].rows[j].cells[k].getAttribute("data-style");
                        var dataValue = tables[i].rows[j].cells[k].getAttribute("data-value");
                        dataValue = (dataValue) ? dataValue : tables[i].rows[j].cells[k].innerHTML.trim();
                        if (dataValue.indexOf('button') == -1) {
                            var dataFormula = tables[i].rows[j].cells[k].getAttribute("data-formula");
                            dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                            ctx = {
                                attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date') ? ' ss:StyleID="' + dataStyle + '"' : ''
                                   , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                                   , data: (dataFormula) ? '' : dataValue
                                   , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : ''
                            };
                            rowsXML += format(tmplCellXML.trim(), ctx);
                        }
                    }
                    rowsXML += '</Row>'

                }
                ctx = { rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i };
                worksheetsXML += format(tmplWorksheetXML, ctx);
                rowsXML = "";
            }

            ctx = { created: (new Date()).getTime(), worksheets: worksheetsXML };
            workbookXML = format(tmplWorkbookXML, ctx);

            console.log(workbookXML);

            var link = document.createElement("A");
            link.href = uri + base64(workbookXML);
            link.download = wbname || 'Reconciliation.xls';
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    })();
</script>
<script type="text/javascript">

    function searchs() {
        var val = $("#searchval").val();
        $('#dataTablesMatch tbody tr').each(function (i) {
            if ($(this).find('td').text().toLowerCase().trim().indexOf(val) > -1) {
                $(this).show();
            }
            else {
                $(this).hide();
            }
            if (val == '') {
                $(this).show();
            }
        });
    }

    function searchs1() {
        var val = $("#searchval1").val();
        $('#dataTablesUnMatch tbody tr').each(function (i) {
            if ($(this).find('td').text().toLowerCase().trim().indexOf(val) > -1) {
                $(this).show();
            }
            else {
                $(this).hide();
            }
            if (val == '') {
                $(this).show();
            }
        });
    }

    function searchs3() {
        var val = $("#searchval3").val();
        $('#dataTablesFromEmitra tbody tr').each(function (i) {
            if ($(this).find('td').text().toLowerCase().trim().indexOf(val) > -1) {
                $(this).show();
            }
            else {
                $(this).hide();
            }
            if (val == '') {
                $(this).show();
            }
        });
    }
</script>
<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

