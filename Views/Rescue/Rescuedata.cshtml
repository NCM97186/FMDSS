@{
    ViewBag.Title = "Rescuedata";
    //Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString());
}
@model FMDSS.Models.Rescue.RescueData

@using (Html.BeginForm("SubmitRescue", "Rescue", FormMethod.Post, new { enctype = "multipart/form-data", id = "main" }))
{
    @Html.HiddenFor(t => t.RescueId)


    <div id="page-wrapper-inn">
        <div class="col-lg-12 pad">
            <h1 class="page-header">Rescue Data</h1>
        </div>
        <!-- /.col-lg-12 -->
        <!-- Row -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">

                    <div class="panel-body">

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Date Time: <span class="mandatory">*</span></label>
                                @Html.TextBoxFor(model => model.RescueDateTime, "{0:dd/MM/yyyy HH:mm}", new { @class = "form-control datepicker", autocomplete = "off", id = "RescueDateTime" })
                                <div class="alert-danger1">@Html.ValidationMessageFor(x => x.RescueDateTime)</div>
                                <input type="hidden" name="ReportingTime" value="@DateTime.Now.ToString("dd/MM/yyyy HH:mm")" />
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Animal Name: </label>
                                @Html.TextBoxFor(model => model.AnimalName, new { @class = "form-control", @id = "AnimalName" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>District Name: <span class="mandatory">*</span></label>
                                @Html.DropDownListFor(model => model.DistrictId, (IEnumerable<SelectListItem>)ViewBag.Districts, "--Select--", new { @class = "form-control common", @id = "DistrictId" })
                                <div class="alert-danger1">@Html.ValidationMessageFor(x => x.DistrictId)</div>
                            </div>

                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Village Name.:</label>
                                @Html.DropDownListFor(model => model.VillageId, (IEnumerable<SelectListItem>)ViewBag.Village, "--Select--", new { @id = "VillageId", @name = "VillageId", @class = "form-control" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Latitude:</label>
                                @Html.TextBoxFor(model => model.Lat, new { @class = "form-control", @id = "txt_Lat" })

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Longitude:</label>
                                @Html.TextBoxFor(model => model.Long, new { @class = "form-control", @id = "txt_Long" })

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Status:</label>
                                @Html.DropDownListFor(m => m.Status,
new SelectList(new List<SelectListItem> {
             new SelectListItem { Text = "Dead", Value = "1"},
             new SelectListItem { Text = "Rescue", Value = "2"}}, "Value", "Text", Model.Status), "--Select--", new { @class = "form-control required", @id = "ddlstatus" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Processing:</label>
                                @Html.DropDownListFor(m => m.Processing,
new SelectList(new List<SelectListItem> {
             new SelectListItem { Text = "Post mortem done", Value = "1"},
             new SelectListItem { Text = "Released", Value = "2"},
new SelectListItem { Text = "Retained Captivity", Value = "3"}}, "Value", "Text", Model.Processing), "--Select--", new { @class = "form-control required", @id = "ddlprocessing" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Upload Factual Report</label>
                                <input type="file" multiple="" class="form-control common" name="ImageUploadFactualReport" id="ImageUploadFactualReport" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Upload Post Mortem Report</label>
                                <input type="file" multiple="" class="form-control common" name="ImageUploadPostMortemReport" id="ImageUploadPostMortemReport" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Remarks:</label>
                                @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control", @id = "txt_Remarks", @style = "height:50px!important;" })

                            </div>
                        </div>
                        <div class="col-lg-12"></div>

                        <!-- Btn Groping -->
                        <div class="btn-padd">
                            <div id="btn" class="col-lg-12">
                                <button type="submit" class="btn btn-success" name="Command" value="Save" id="btn_Save">
                                    <i class="fa fa-check"></i> Save
                                </button>
                                <button type="button" class="btn btn-warning" id="btn_reset">
                                    <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                                </button>
                                <button type="button" value="Cancel" class="btn btn-danger" onclick="reload(); return false;">
                                    <i class="fa fa-times fa-fw"></i> Cancel
                                </button>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
<script src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/Controller/Common.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.min.css" rel="stylesheet" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-datetimepicker/2.5.20/jquery.datetimepicker.full.js"></script>
<script>
    var RootUrl = '@Url.Content("~/")';
    $('#DistrictId').change(function (e) {
        var DistrictId = $("#DistrictId option:selected").val();
        $("#VillageId").empty();

        $.ajax({
            type: 'POST',
            url: RootUrl + 'Rescue/GetVillage',
            dataType: 'json',
            data: { "DistrictId": DistrictId },
            success: function (response) {
                $.each(response, function (i, items) {
                    $("#VillageId").append('<option value="' + items.Value + '">  ' + items.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
    });
</script>
<script>
    $('#RescueDateTime').datetimepicker({
        gotoCurrent: true
    });
</script>
<script>
    $("#ImageUploadFactualReport").change(function () {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp', 'pdf'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only " + fileExtension.join(', ') + " formats are allowed : ");
            $("#ImageUploadFactualReport").val('');
        }
    });
    $("#ImageUploadPostMortemReport").change(function () {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp', 'pdf'];
        if ($.inArray($(this).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only " + fileExtension.join(', ') + " formats are allowed : ");
            $("#ImageUploadPostMortemReport").val('');
        }
    });
</script>
<script type="text/javascript">
    var RootUrl = '@Url.Content("~/")';
    function reload() {
        var r = confirm("Do you want to leave page!");
        if (r) {
            window.location = RootUrl + "Rescue/Rescuedatalist";
        }
        else {
            //do nothing
        }
    }



</script>
<script>
    $("#btn_reset").click(function () {
        $('#AnimalName').val('');
        $('#txt_Lat').val('');
        $('#txt_Long').val('');
        $('#txt_Remarks').val('');
        $('#DistrictId').prop('selectedIndex', 0);
        $('#ddlstatus').prop('selectedIndex', 0);
        $('#ddlprocessing').prop('selectedIndex', 0);
        $('#RescueDateTime').datepicker('setDate', new Date());
    });
</script>