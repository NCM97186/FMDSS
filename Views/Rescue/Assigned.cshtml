@model FMDSS.Models.Rescue.RescueModel

@{
    ViewBag.Title = "Assigned";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("Assigned", "Rescue", FormMethod.Post, new { enctype = "multipart/form-data", @id = "main" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

     <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="checkCWLWRequest">
                        @*<div class="col-lg-4 Institutional">
            <label>Applicant Details:</label>
            <div class="divider"></div>
        </div>*@

                        <div class="col-lg-4 un-bold">
                            <div class="form-group">
                                <label>Citizen Name</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                    @*@Html.HiddenFor(model => model.RegistrationID)*@
                                    @Html.TextBoxFor(model => model.CitizenName, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 un-bold">
                            <div class="form-group">
                                <label>Citizen EmailID</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                    @Html.TextBoxFor(model => model.CitizenEmailID, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 un-bold">
                            <div class="form-group">
                                <label>Citizen Mobile</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                    @Html.TextBoxFor(model => model.CitizenMobileNo, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12 Institutional">
                            <label>Animal Details:</label>
                            <div class="divider"></div>
                        </div>

                        <div class="col-lg-6 un-bold">
                            <div class="form-group">
                                <label>Address Type</label>
                                <div class="radio">
                                    <span class=""></span>
                                    <label>
                                        @Html.RadioButtonFor(model => model.Rural, true, new { id = "rbRural", @disabled = "disabled", @readonly = "readonly" })  Rural
                                    </label>
                                    <label>
                                        @Html.RadioButtonFor(model => model.Rural, false, new { id = "rbUrban", @disabled = "disabled", @readonly = "readonly" }) Urban
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6 un-bold">
                            <div class="form-group">
                                <label>District</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                    @Html.DropDownListFor(model => model.DistrictID, (IEnumerable<SelectListItem>)ViewBag.Districts, "--Select--", new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 Institutional">
                            <div class="divider"></div>
                        </div>

                        <div id="divUrban">
                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>City</label>
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.DropDownListFor(model => model.CityID, (IEnumerable<SelectListItem>)ViewBag.City, new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Ward</label>
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.DropDownListFor(model => model.WardID, (IEnumerable<SelectListItem>)ViewBag.Ward, new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div id="divRural">
                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Block</label>
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.DropDownListFor(model => model.BlockID, (IEnumerable<SelectListItem>)ViewBag.Blocks, new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                    </div>
                                </div>
                                </div>
                                <div class="col-lg-6 un-bold">
                                    <div class="form-group">
                                        <label>Gram Panchayat</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                            @Html.DropDownListFor(model => model.GPID, (IEnumerable<SelectListItem>)ViewBag.GPs, new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-lg-6 un-bold">
                                    <div class="form-group">
                                        <label>Village</label>
                                        <div class="input-group">
                                            <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                            @Html.DropDownListFor(model => model.VillageID, (IEnumerable<SelectListItem>)ViewBag.Villages, new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Location</label>
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Animal Name</label>
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.DropDownListFor(model => model.AnimalID, (IEnumerable<SelectListItem>)ViewBag.Animals, new { @class = "form-control common", @disabled = "disabled", @readonly = "readonly" })
                                    </div>
                                </div>
                            </div>

                            <div id="divChildAnimal" class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Child Animals</label>
                                    @Html.DropDownListFor(model => model.ChildAnimalId, new List<SelectListItem>
{ new SelectListItem{Text="--Select--", Value="True",Selected=true}
}, new { @class = "form-control common required" })
                                </div>
                            </div>

                            @if (Convert.ToString(ViewBag.RoleName) != "CITIZEN")
    {
                        <div class="col-lg-6 un-bold">
                            <div class="form-group">
                                <label>Mode of Communication</label>

                                @Html.DropDownListFor(model => model.ModeOfCommunication, new List<SelectListItem> {
new SelectListItem { Text="Telephone",Value="Telephone"},
new SelectListItem { Text="SMS",Value="SMS"},
new SelectListItem { Text="Email",Value="Email"},
new SelectListItem { Text="In-Person",Value="InPerson"},
}, "--Select--", new { @class = "form-control" })



                            </div>
                        </div>
                        <div class="col-lg-6 un-bold">
                            <div class="form-group">
                                <label>Description</label>
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                    @Html.TextAreaFor(model => model.RegistrationDescription, new { @class = "form-control", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>
}
else
{
                        <input type="hidden" name="ModeOfCommunication" value="Online" />
}

                            <div class="col-lg-4 forestOfficerDesignation">
                                <div class="form-group">
                                    <label>Assign TO:<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(d => d.SendToNGOOrSelf, (IEnumerable<SelectListItem>)ViewBag.OfficerDesignation, "--Select--", new { @class = "form-control", id = "dropDesignation" })
                                    <div id="errdropDesignation" style="display:none" class="alert-danger1">Designation is Required.</div>
                                    @*new SelectList(string.Empty, "Value", "Text")*@
                                </div>
                            </div>

                            <div id="divNGO" class="col-lg-4 forestOfficer">
                                <div class="form-group">
                                    <label>NGO List:<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(d => d.SendToOfficerSSOID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { id = "dropForester", @class = "form-control" })
                                    <div id="errdropForester" style="display:none" class="alert-danger1">Forest Officers is Required.</div>
                                </div>
                            </div>

                            <div id="divForestStaff" class="col-lg-4 un-bold forestOfficerDesignation">
                                <div class="form-group">
                                    <label>Forest Staff SSO ID</label>
                                    <div class="input-group">
                                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                                        @Html.TextBoxFor(model => model.ForestStaffSSOID, new { @class = "form-control" })
                                    </div>

                                </div>
                            </div>
                            <div class="col-lg-4 forestOfficer">
                                <div class="form-group">
                                    <label>Special Remarks:<span class="mandatory">*</span></label>
                                    @Html.TextAreaFor(d => d.RescueRemarks, new { @class = "form-control" })
                                    <div id="errdropForester" style="display:none" class="alert-danger1">Forest Officers is Required.</div>
                                </div>
                            </div>

                            <div class="col-lg-6 un-bold">
                                <label></label>
                                <div class="input-group">
                                    <div class="form-group">
                                        <input type="submit" class="btn btn-success" value="Submit" name="buttonType" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div></div></div>
}
<script type="text/javascript">
    $('#dropDesignation').change(function (e) {
        //alert($("#dropDesignation").val());
        if ($("#dropDesignation").val() == "-1") {
            //$(".forestStaff").css("display", "block");
            $("#divNGO").css("display", "none");
            //$(".submitbtnSendToNGO").css("display", "none");
        }
        else if ($("#dropDesignation").val() == "26"){
            
            $("#divForestStaff").css("display", "none");
            $("#divNGO").css("display", "block");
            GetNgoDetails();
        }
        else {
            $("#divForestStaff").css("display", "block");
            $("#divNGO").css("display", "block");
            $("#dropForester").empty();
            $("#dropForester").append('<option value="-1">--Select--</option>');
            GetNgoDetails();
        }
    });

    function GetNgoDetails() {
        $.ajax({
            type: 'POST',
            url: 'GetNgoDetail', // we are calling json method
            dataType: 'json',
            data: { designation: $("#dropDesignation").val() },
            success: function (states) {
                $.each(states, function (i, block) {
                    $("#dropForester").append('<option value="' + block.Value + '">' + block.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
    }
</script>


