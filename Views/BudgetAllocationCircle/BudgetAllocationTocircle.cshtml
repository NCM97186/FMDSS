@model FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.View_BudgetAllocation_Circle

@{
    ViewBag.Title = "BudgetAllocationTocircle";
    Layout = "~/Views/Shared/Forestlayout.cshtml";
}

<style>
    .hide {
        display: none;
    }

    .center {
        margin-top: 50%;
    }
</style>
<script src="~/js/jquery.min.js"></script>

<div id="page-wrapper-inn">

    @if (TempData["Message"] != null)
    {

        <script type="text/javascript" language="javascript">
            alert('@TempData["Message"]');
        </script>
    }
    @Html.Partial("_PartialBudgetLink")
    <div class="col-lg-12 pad">
        <div class="col-lg-10">
            <h1 class="page-header">Budget Allocation (@Session["User"].ToString())</h1>
        </div>
        <div class="col-lg-2">
            <button type="button" class="btn btn-success confirm-toggle" name="Command" value="0" id="AddMaster">
                <i class="fa fa-check"></i> Show Master
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <!--<div class="panel-heading">Processing Fees</div>-->
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <!--Add New Btn-->
                    <div class="col-lg-3 rgt pull-right">
                        <button type="button" class="btn btn-success pull-right btn_pp" data-toggle="modal" id="btnAddActivity" data-target="#myActivity" title="Add Activity" data-backdrop="static" data-keyboard="false">
                            <i class="fa fa-plus"></i> Budget-Allocation
                        </button>
                    </div>
                    <div class="dataTable_wrapper table-responsive scroll-x simplebar horizontal">

                        <table class="table table-striped table-bordered table-hover gridtable" id="dataTables-example">
                            <thead>
                                <tr>
                                    <th>
                                        Budget Master Grouping ID
                                    </th>
                                    <th>
                                        Scheme
                                    </th>
                                    <th>
                                        Budget/Sub Budget Head
                                    </th>
                                    <th>
                                        Activity/Sub Activity
                                    </th>

                                    <th>
                                        Circle/Division
                                    </th>
                                    <th>
                                        Total Amount (lakh)
                                    </th>
                                    <th>
                                        Allocated Amount (lakh)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in ViewData["BudgetAllocationCircleList"] as IEnumerable<FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.View_BudgetAllocation_Circle>)
                                {

                                    <tr>
                                        <td>
                                            BUDGETALLOCATION-@item.BudgetHeadAllocationID
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.SchemeName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.BudgetHead)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.ActivityName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.CIRCLE_NAME)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.TotalAmount)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.AllocatedAmount)
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>

                    </div>

                    <!--./Add New Btn-->
                    <!--Table-->
                    <!-- /.panel -->

                </div>

                <div class="modal fade" id="myActivity" role="dialog">
                    <div class="modal-dialog modal-lg">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">
                                    &times;
                                </button>
                                <h4 class="modal-title" id="activityLabel">Budget Allocation</h4>
                            </div>
                            <div class="modal-body">
                                <div role="form">
                                    @using (Html.BeginForm("Submit", "BudgetAllocationCircle", FormMethod.Post, new { data_behavior = "confirm", enctype = "multipart/form-data", id = "IdFor" }))
                                    {
                                        <div class="panel-body">
                                            @Html.HiddenFor(x => x.BudgetHeadAllocationID, new { @id = "BudgetHeadAllocationID", name = "BudgetHeadAllocationID" })
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Financial Year: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.FY_ID, (IEnumerable<SelectListItem>)ViewBag.FinancialYear, "--Select--", new { @class = "form-control", @id = "FY_ID", name = "FY_ID" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.FY_ID)</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Scheme: <span class="mandatory">*</span></label>

                                                    @Html.DropDownListFor(x => x.SchemeID, (IEnumerable<SelectListItem>)ViewBag.Scheme, "--Select--", new { @class = "form-control", @id = "SchemeID", name = "SchemeID" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.SchemeID)</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Budget Head: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.BudgetHeadID, (IEnumerable<SelectListItem>)ViewBag.BudgetHead, "--Select--", new { @class = "form-control", @id = "BudgetHeadID", name = "BudgetHeadID" })
                                                    @*<div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetHeadID)</div>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Budget Sub Head: <span class="mandatory"></span></label>
                                                    @Html.DropDownListFor(x => x.SubBudgetHeadID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "SubBudgetHeadID", name = "SubBudgetHeadID" })
                                                    @*<div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.SubBudgetHeadID)</div>*@
                                                </div>
                                            </div>

                                            <div class="col-lg-12">
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Site Name: <span class="mandatory"></span></label>
                                                        @Html.TextBoxFor(x => x.SiteName, new { @class = "form-control", @id = "SiteName", name = "SiteName" })
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label><span class="mandatory"></span></label><br />
                                                        @Html.RadioButtonFor(s => s.IsRecurring, "0", new { @class = "IsRecurring", @checked = "checked" }) Recurring
                                                        @Html.RadioButtonFor(s => s.IsRecurring, "1", new { @class = "IsRecurring" }) Non–Recurring

                                                    </div>
                                                </div>
                                            </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Activity : <span class="mandatory">*</span></label>
                                                        @Html.DropDownListFor(x => x.ActivityID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "ActivityID", name = "ActivityID" })
                                                        <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.ActivityID)</div>
                                                    </div>
                                                </div>

                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Sub Activity: <span class="mandatory">*</span></label>
                                                        @Html.DropDownListFor(x => x.SubActivityID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "SubActivityID", name = "SubActivityID" })
                                                        <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.SubActivityID)</div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Select Any option <span class="mandatory"></span></label><br />
                                                        @Html.RadioButtonFor(s => s.ISCircleDivision, "Circle", new { @class = "ISCircleDivision", @checked = "checked" }) Circle
                                                        @Html.RadioButtonFor(s => s.ISCircleDivision, "Division", new { @class = "ISCircleDivision" }) Division
                                                        @Html.RadioButtonFor(s => s.ISCircleDivision, "HQ", new { @class = "ISCircleDivision" }) HQ
                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Office: <span class="mandatory">*</span></label>
                                                        @Html.DropDownListFor(x => x.CIRCLE_CODE, (IEnumerable<SelectListItem>)ViewBag.Circle, "--Select--", new { @class = "form-control", @id = "CIRCLE_CODE", name = "CIRCLE_NAME" })

                                                        @Html.DropDownListFor(model => model.CIRCLE_CODE, new List<SelectListItem> {
                                                   new SelectListItem{Text="HQ",Value="HQ"}}, new { @class = "form-control hide", @id = "CircleHQ" })
                                                        @*<div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetHeadID)</div>*@
                                                    </div>
                                                </div>

                                                <div class="col-lg-6" id="divisions" style="display:none">
                                                    <div class="form-group">
                                                        <label>Division: <span class="mandatory">*</span></label>
                                                        @Html.DropDownListFor(x => x.Division, (IEnumerable<SelectListItem>)ViewBag.Division, "--Select--", new { @class = "form-control ", @id = "Division", name = "DIV_CODE" })
                                                        <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Division)</div>
                                                    </div>
                                                </div>

                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Available Amount: (lakh)<span class="mandatory">*</span></label>
                                                        @Html.TextBoxFor(x => x.TotalAmount, new { @class = "form-control", @id = "AvailableAmount", name = "AvailableAmount", @readonly = "@readonly" })
                                                        <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.TotalAmount)</div>

                                                    </div>
                                                </div>
                                                <div class="col-lg-6">
                                                    <div class="form-group">
                                                        <label>Remaning Amount: (lakh)<span class="mandatory">*</span></label>
                                                        @Html.TextBoxFor(x => x.RemaningAmount, new { @class = "form-control", @id = "RemaningAmount", name = "RemaningAmount", @readonly = "@readonly" })
                                                        <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.RemaningAmount)</div>
                                                    </div>
                                                </div>

                                                <div class="col-lg-4">
                                                    <div class="form-group">
                                                        <label>Allocated Amount: (lakh)<span class="mandatory">*</span></label>
                                                        @Html.TextBoxFor(x => x.AllocatedAmount, new { @class = "form-control", @id = "AllocatedAmount", name = "AllocatedAmount" })
                                                        <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.AllocatedAmount)</div>
                                                    </div>
                                                </div>
                                                <label>Get Details:</label><br>
                                                <button type="button" class="btn btn-success" title="Save" name="Command" value="Submit" id="btnDetails" style="width:auto">
                                                    <i class="fa fa-plus"></i> Add
                                                </button>
                                                <div class="dataTable_wrapper table-responsive scroll-x simplebar horizontal">
                                                    <table class="table table-striped table-bordered table-hover" id="table1">
                                                        <thead>
                                                            <tr>
                                                                <th>
                                                                    Budget Master Grouping ID
                                                                </th>
                                                                <th>
                                                                    Circle/Division
                                                                </th>
                                                                <th>
                                                                    Scheme
                                                                </th>
                                                                <th>
                                                                    Activity/Sub Activity
                                                                </th>
                                                                <th>
                                                                    Budget/Sub Budget Head
                                                                </th>
                                                                <th>
                                                                    Allocated Amount (lakh)
                                                                </th>
                                                                <th>
                                                                    Action
                                                                </th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="tblDetails"></tbody>
                                                    </table>
                                                    <table style="display:none" class="table table-striped table-bordered table-hover" id="table2">
                                                        <thead>
                                                            <tr>
                                                                <th>
                                                                    Circle/Division
                                                                </th>
                                                                <th>
                                                                    Scheme
                                                                </th>
                                                                <th>
                                                                    Activity
                                                                </th>
                                                                <th>
                                                                    Budget/Sub Budget Head
                                                                </th>
                                                                <th>
                                                                    Allocated Amount (lakh)
                                                                </th>
                                                                <th>
                                                                    Action
                                                                </th>
                                                            </tr>
                                                        </thead>
                                                        <tbody id="tblDetailsAdd"></tbody>
                                                    </table>
                                                </div>
                                                <div id="BudgetCir"></div>
                                                <div class="btn-padd">
                                                    <div id="btn" class="col-lg-12">
                                                        <button type="button" class="btn btn-success confirm-toggle" name="Command" value="submit" id="Savepermission">
                                                            <i class="fa fa-check"></i> Submit
                                                        </button>

                                                        <button type="reset" class="btn btn-warning" onclick="reload(); return false;">
                                                            <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                                                        </button>
                                                        <button type="submit" name="Command" value="Cancel" class="btn btn-danger" onclick="reload(); return false;">
                                                            <i class="fa fa-times fa-fw"></i> Cancel
                                                        </button>

                                                    </div>
                                                </div>
                                            </div>



                                    }
                                </div>
                                <!-- /.panel -->
                                <!-- Trigger the modal with a button -->
                            
                         

                            </div>
                            <!-- /.col-lg-12 -->
                        </div>
                    </div>
                    <!-- /.Row -->
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    var RootURl = '@Url.Content("~/")';
</script>
<script>

    $(function () {
        $('.gridtable').DataTable({
            responsive: true,
            "bSort": false
        });

        $("#AllocatedAmount").keypress(function (event) {

            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                if ((event.which != 46 || $(this).val().indexOf('.') != -1)) {
                    alert('Multiple Decimals are not allowed');
                }
                event.preventDefault();
            }
            if (this.value.indexOf(".") > -1 && (this.value.split('.')[1].length > 1)) {
                alert('Two numbers only allowed after decimal point');
                event.preventDefault();
            }

        });
        $("#AllocatedAmount").blur(function () {
            if ($(this).val() != '') {
                $("#AllocatedAmount").val(parseFloat($(this).val()).toFixed(2));
            }
        });


        TableList();

        $("#Savepermission").click(function () {
            var cirlist = new Array();
            $("#table1 tr:not(:first)").each(function () {
                var tds = $(this).find("td");
                var SStudent = { ID: $(tds[0]).html(), ISCircleDivision: $(tds[1]).html() }
                cirlist.push(SStudent);
            });
            $.ajax({
                url: '@Url.Action("AjaxSubmit", "BudgetAllocationCircle")',
                dataType: "html",
                data: JSON.stringify(cirlist),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    if (result > 0) {
                        alert('Data inserted sucessfully');
                        reload();
                    }
                    else {
                        alert('Data not inserted please contact your system administration!!!');
                    }
                },
                error: function (xhr) {
                    alert("error");
                }
            });
        });


        var BudgetHeadID;
        $("#BudgetHeadID").bind("click", function (e) {

            if ($('#BudgetHeadID').val() != 0 || $('#BudgetHeadID').val() != '') {
                BudgetHeadID = $('#BudgetHeadID').val();
            }
        }).bind("change", function (e) {
            var budgetHead = $('#BudgetHeadID').val();
            if (budgetHead != '') {
                  if (FilterTable() == true) {
                      $("#SubBudgetHeadID").empty();
                      var option = $("<option />");
                      option.attr("value", '0').text('--Select--');
                      $('#SubBudgetHeadID').append(option);

                      $.ajax({
                          type: 'POST',
                          url: RootURl + 'BudgetAllocationCircle/GetBudgetSubHead',
                          dataType: 'json',
                          data: { budgetHead: budgetHead },
                          success: function (data) {
                              $.each(data, function (i, items) {

                                  $("#SubBudgetHeadID").append('<option value="' + items.Value + '">' +
                                      items.Text + '</option>');
                              });
                              $("#SubBudgetHeadID option").each(function () {
                                  if ($(this).text().trim().toLowerCase() == 'none') {
                                      $(this).attr("selected", "selected");
                                  }
                              });
                          },
                      });
                  }
                  else {

                      $('#BudgetHeadID').val(BudgetHeadID);
                  }
              }

        });




        var SubBudgetHeadID;
        $("#SubBudgetHeadID").bind("click", function (e) {
            if ($('#SubBudgetHeadID').val() != 0) {
                SubBudgetHeadID = $('#SubBudgetHeadID').val();
            }
        }).bind("change", function (e) {
            var SubBudgetHeadId = $('#SubBudgetHeadID').val();
            if (SubBudgetHeadId != '') {

                if (FilterTable() == true) {

                }
                else {

                    $('#SubBudgetHeadID').val(SubBudgetHeadID);
                }
            }

        });


        var SchemeID;
        $("#SchemeID").bind("click", function (e) {
            if ($('#SchemeID').val() != 0) {
                SchemeID = $('#SchemeID').val();
            }
        }).bind("change", function (e) {


            if ($('#SchemeID').val() != '') {
                if (FilterTable() == true) {
                    $("#ActivityID").empty();
                    var option = $("<option />");
                    option.attr("value", '0').text('--Select--');
                    $('#ActivityID').append(option);
                    $.ajax({
                        type: 'POST',
                        url: RootURl + "BudgetAllocationCircle/GetMasterActivity",
                        dataType: 'json',
                        data: { Action: 'Activity', ID: '0' },
                        success: function (data) {
                            $.each(data, function (i, items) {

                                $("#ActivityID").append('<option value="' + items.Value + '">' +
                                 items.Text + '</option>');
                            });
                        },
                    });
                }
                else {
                    $('#SchemeID').val(SchemeID);

                }
            }

        });



        var ActivityId;
        $("#ActivityID").bind("click", function (e) {

            if ($('#ActivityID').val() != 0) {
                ActivityId = $('#ActivityID').val();
            }
          }).bind("change", function (e) {

            var ActivityID = $('#ActivityID').val();
            if (FilterTable() == true) {
                $("#SubActivityID").empty();
                if (ActivityID != '') {
                    var option = $("<option />");
                    option.attr("value", '0').text('--Select--');
                    $('#SubActivityID').append(option);
                    $.ajax({
                        type: 'POST',
                        url: RootURl + "BudgetAllocationCircle/GetMasterActivity",
                        dataType: 'json',
                        data: { Action: 'SubActivity', ID: ActivityID },
                        success: function (data) {
                            $.each(data, function (i, items) {

                                $("#SubActivityID").append('<option value="' + items.Value + '">' +
                                 items.Text + '</option>');

                            });
                            $("#SubActivityID option").each(function () {
                                if ($(this).text().trim().toLowerCase() == 'none') {
                                    $(this).attr("selected", "selected");
                                }
                            });
                        },

                    });
                }
            }
            else {
                $('#ActivityID').val(ActivityId);

            }

        });




        var SubActivityID;
        $("#SubActivityID").bind("click", function (e) {
            if ($('#SubActivityID').val() != 0) {
                SubActivityID = $('#SubActivityID').val();
            }
        }).bind("change", function (e) {
            var SubActivityId = $('#SubActivityID').val();
            if (SubActivityId != '') {

                if (FilterTable() == true) {

                    AvaliableAmount();
                }
                else {

                    $('#SubActivityID').val(SubActivityID);
                }
            }

        });



        $('#btnDetails').click(function () {

            if ($('#FY_ID').val() == '') {
                $('#FY_ID').focus();
                return false;
            }
            if ($('#SchemeID').val() == '') {

                $('#SchemeID').focus();
                return false;
            }
            if ($('#ActivityID').val() == 0 || $('#ActivityID').val() == '') {
                $('#ActivityID').focus();
                return false;
            }
            //if ($('#SubActivityID').val() == 0 || $('#SubActivityID').val() == '') {

            //    $('#SubActivityID').focus();
            //    return false;
            //}
            if ($('#BudgetHeadID').val() == '' || $('#BudgetHeadID').val() == 0) {

                $('#BudgetHeadID').focus();
                return false;
            }

            //if ($('#CIRCLE_CODE').val() == '' || $('#CIRCLE_CODE').val() == 'undefined') {
            //    $('#CIRCLE_CODE').focus();
            //    return false;
            //}

            if ($(".ISCircleDivision:checked").val() == "Circle") {
                if ($('#CIRCLE_CODE').val() == '' || $('#CIRCLE_CODE').val() == 'undefined') {
                    $('#CIRCLE_CODE').focus();
                    return false;
                }
            }
            else if ($(".ISCircleDivision:checked").val() == "Division") {
                if ($('#Division').val() == '' || $('#Division').val() == '0' || $('#Division').val() == 'undefined') {
                    $('#Division').focus();
                    return false;
                }
            }
            else if ($(".ISCircleDivision:checked").val() == "HQ") {
                if ($('#CircleHQ').val() == '' || $('#CircleHQ').val() == 'undefined') {
                    $('#CircleHQ').focus();
                    return false;
                }
            }

            if ($('#AllocatedAmount').val() == '' || parseFloat($('#AllocatedAmount').val()) == 0) {

                $('#AllocatedAmount').focus();
                return false;
            }
            if (parseInt($('#AllocatedAmount').val()) > parseFloat($('#RemaningAmount').val())) {
                alert('Allocated amount cannot be exceed than remaning amount!!!');
                $('#AllocatedAmount').focus();
                return false;
            }
            else {
                if (parseFloat($("#AllocatedAmount").val()) <= parseFloat($("#RemaningAmount").val())) {
                    //$("#RemaningAmount").val(parseFloat($("#RemaningAmount").val()) - parseFloat($("#AllocatedAmount").val()));
                }
                else {
                    alert('Allocated amount cannot be exceed than remaning amount!!!');
                    $('#AllocatedAmount').focus();
                    return false;
                }
                var Division = '0';
                if ($("#divisions").attr("style") == 'display:block' && $(".ISCircleDivision:checked").val() == "Division") {
                    if ($('#Division').val() != '' && $('#Division').val() != '0' && $('#Division').val() != 'undefined') {
                        Division = $('#Division').val();
                        Circles = $("#CIRCLE_CODE").val();
                    }
                    else {
                        $('#Division').focus();
                        return false;
                    }
                }
                if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                    Circles = $("#CIRCLE_CODE").val();
                }
                if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                    Circles = $("#CircleHQ").val();
                }
               
                

                var values = {
                    SchemeID: $('#SchemeID').val(),
                    SchemeName: $('#SchemeID option:selected').text(),
                    ActivityID: $('#ActivityID').val(),
                    ActivityName: $('#ActivityID option:selected').text(),
                    SubActivityID: $('#SubActivityID').val(),
                    SubActivityName: $('#SubActivityID option:selected').text(),
                    AllocatedAmount: $('#AllocatedAmount').val(),
                    FY_ID: $('#FY_ID').val(),
                    BudgetHeadID: $('#BudgetHeadID').val(),
                    SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                    CIRCLE_CODE: Circles,
                    ISCircleDivision: $('.ISCircleDivision:checked').val(),
                    Division: Division,
                    BudgetHeadAllocationID: $('#BudgetHeadAllocationID').val(),
                    IsRecurring: $('#IsRecurring:checked').val(),
                    SiteName: $('#SiteName').val()
                };
                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetAllocationCircle/AdddCircleDetails',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    success: function (data) {

                        if (data.rowid != "D") {
                            var id = "'" + data.rowid + "'";
                            var BudgetHead = $("#BudgetHeadID option:selected").text();
                            var SubBudgetHead = "None";
                            if ($("#SubBudgetHeadID option:selected").val() != "0") {
                                SubBudgetHead = $("#SubBudgetHeadID option:selected").text();
                            }
                            var Circle = "None";
                            var Division = "None";
                            if ($(".ISCircleDivision:checked").val() == "Division" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Division = $("#Division option:selected").text();
                            }
                            else if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Circle = $("#CIRCLE_CODE option:selected").text();
                            }
                            else if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                                Circle = $("#CircleHQ option:selected").text();
                            }

                            var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td style=display:none;>" + data.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' +data.BudgetHeadAllocationID + "</td><td>" + Circle + " / " + Division + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName + "/" + data.SubActivityName + "</td><td>" + BudgetHead + " / " + SubBudgetHead + "</td><td>" + parseFloat(data.AllocatedAmount).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer><i class='fa fa-times'></i></button>" + "</td></tr>";

                            $("#tblDetails").append(rowdata);
                            $('#tblDetailsAdd').append(rowdata);
                            var remaningAmount = (parseFloat($('#RemaningAmount').val()) - parseFloat($('#AllocatedAmount').val()))
                            $('#RemaningAmount').val(parseFloat(remaningAmount).toFixed(2));
                            $('#AllocatedAmount').val('');

                        }
                        else {

                            alert("Records already added!!");
                        }
                    }
                });
            }
        });
    });





    function TableList() {

        $.ajax({
            type: 'POST',
            url: RootURl + "BudgetAllocationCircle/BudgetAllocationCircleList",
            dataType: 'json',
            data: {},
            success: function (data) {

                $.each(data, function (i, item) {

                    var id = "'" + item.rowid + "'";
                    var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + item.BudgetHeadAllocationID + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                    $("#tblDetails").append(rowdata);
                });
            },

        });
    }


    function AvaliableAmount() {

        var values = {
            FY_ID: $('#FY_ID').val(),
            BudgetHeadID: $('#BudgetHeadID').val(),
            SubBudgetHeadID: $('#SubBudgetHeadID').val(),

            SchemeID: $('#SchemeID').val(),
            ActivityID: $('#ActivityID').val(),
            SubActivityID: $('#SubActivityID').val()

        }
        $.ajax({
            type: 'POST',
            url: RootURl + 'BudgetAllocationCircle/GetAllocatedAmtDetails',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            success: function (data) {

                $('#AvailableAmount').val(parseFloat(data.AvaliableAmount).toFixed(2));
                $('#RemaningAmount').val(parseFloat(data.RemaningAmount).toFixed(2));
                $('#BudgetHeadAllocationID').val(data.BudgetAllocationHeadId);

            },

        });

    }



    $(document).on('click', '.btndelete', function () {

        if (confirm("Are you sure you want to delete this?")) {

            var $item = $(this).closest("tr").find('td');
            var i = 0;
            var ID;
            var ISCircleDivision;
            $.each($item, function (key, value) {
                if (i == 0) {
                    ID = $(value).text();
                }
                if (i == 1) {
                    ISCircleDivision = $(value).text();
                    $(this).closest('tr').remove();
                }
                i++;
            });

            $.ajax({
                type: 'POST',
                url: RootURl + 'BudgetAllocationCircle/DeleteCircle',
                dataType: 'json',
                data: { Id: ID, ISCircleDivision: ISCircleDivision },
                success: function (data) {

                    if (data == '1') {

                        alert('Data deleted from table');


                    }
                    else {
                        alert('Data not deleted from table please check!!!!');
                    }
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });

        }
        else {

            return false;
        }


    });


    function reload() {
        location.reload(true);
    }


    function FilterTable(e) {
        var cirlist = new Array();
        $("#table2 tr:not(:first)").each(function () {
            var tds = $(this).find("td");
            var SStudent = { ID: $(tds[0]).html(), ISCircleDivision: $(tds[1]).html() }
            cirlist.push(SStudent);
        });
        if (cirlist.length > 0) {

            if (confirm('Added data will be lost do you want to proceed?')) {

                $("#tblDetails").empty();
                $('#tblDetailsAdd').empty();
                var values = {
                    FY_ID: $('#FY_ID').val(),
                    BudgetHeadID: $('#BudgetHeadID').val(),
                    SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                    SchemeID: $('#SchemeID').val(),
                    ActivityID: $('#ActivityID').val(),
                    SubActivityID: $('#SubActivityID').val()

                }
                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetAllocationCircle/BudgetAllocationFilterCircleList',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    success: function (data) {

                        $.each(data, function (i, item) {
                            var id = "'" + item.rowid + "'";
                            var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + item.BudgetHeadAllocationID + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer><i class='fa fa-times'></i></button>" + "</td></tr>";
                            $("#tblDetails").append(rowdata);
                        });

                    },
                });
                return true;
            }
            else {

                return false;
            }

        }
        else {

            $("#tblDetails").empty();
            $('#tblDetailsAdd').empty();
            var values = {
                FY_ID: $('#FY_ID').val(),
                BudgetHeadID: $('#BudgetHeadID').val(),
                SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                SchemeID: $('#SchemeID').val(),
                ActivityID: $('#ActivityID').val(),
                SubActivityID: $('#SubActivityID').val()

            }
            $.ajax({
                type: 'POST',
                url: RootURl + 'BudgetAllocationCircle/BudgetAllocationFilterCircleList',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(values),
                success: function (data) {

                    $.each(data, function (i, item) {

                        var id = "'" + item.rowid + "'";
                        //var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td>" + item.CIRCLE_NAME + "/" + item.Division + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
                        //var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td>BUDGETALLOCATION-" + item.BudgetHeadAllocationID + "</td><td>" + item.SchemeName + "</td><td>" + item.BudgetHead + "</td><td>" + item.ActivityName + "</td><td>" + item.CIRCLE_NAME + "/" + item.Division + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
                        var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + item.BudgetHeadAllocationID + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer><i class='fa fa-times'></i></button>" + "</td></tr>";
                        $("#tblDetails").append(rowdata);
                    });

                },

            });
            return true;
        }
    }


    $(".ISCircleDivision").change(function () {
        $("#CIRCLE_CODE").val('');
        if ($(".ISCircleDivision:checked").val() == "HQ") {

            $("#divisions").attr("style", "display:none");
            $("#CIRCLE_CODE").addClass('hide');
            $("#CircleHQ").removeClass('hide');

        }
        else if ($(".ISCircleDivision:checked").val() == "Division") {
            $("#divisions").attr("style", "display:block");
            $("#CircleHQ").addClass('hide');
            $("#CIRCLE_CODE").removeClass('hide');
        }
        else {
            $("#divisions").attr("style", "display:none");
            $("#CircleHQ").addClass('hide');
            $("#CIRCLE_CODE").removeClass('hide');
        }

    });
    var RootUrl = '@Url.Content("~/")';
    $('#CIRCLE_CODE').change(function (e) {
        if ($(".ISCircleDivision:checked").val() == "Division") {
            $("#Division").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/DivisionData', // we are calling json method
                dataType: 'json',
                data: { circleCode: $("#CIRCLE_CODE").val() },
                success: function (circle) {
                    $.each(circle, function (i, items) {
                        $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
            return false;
        }
    });
    $(document).ready(function () {
        $('#Division').empty();
        $('#Division').append("<option value=''>--Select--</option>")
    });



</script>
@*<script>

    $(function () {
        $('.gridtable').DataTable({
            responsive: true,
            "bSort": true
        });

        $('#AllocatedAmount').keydown(function () {
            var amount = $('#AllocatedAmount').val();
           
            $('#AllocatedAmount').val(parseFloat(amount).toFixed(2));
        });
        

        TableList();

        $("#Savepermission").click(function () {
            var cirlist = new Array();
            $("#table1 tr:not(:first)").each(function () {
                var tds = $(this).find("td");
                var SStudent = { ID: $(tds[0]).html(), ISCircleDivision: $(tds[1]).html() }
                cirlist.push(SStudent);
            });
            $.ajax({
                url: '@Url.Action("AjaxSubmit", "BudgetAllocationCircle")',
                dataType: "html",
                data: JSON.stringify(cirlist),
                type: "POST",
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    if (result > 0) {
                        alert('Data inserted sucessfully');
                        reload();
                    }
                    else {
                        alert('Data not inserted please contact your system administration!!!');
                    }
                },
                error: function (xhr) {
                    alert("error");
                }
            });
        });
      

        $('#BudgetHeadID').change(function (e) {

            $("#SubBudgetHeadID").empty();
            var option = $("<option />");
            option.attr("value", '0').text('--Select--');
            $('#SubBudgetHeadID').append(option);
            var budgetHead = $('#BudgetHeadID').val();
            $.ajax({
                type: 'POST',
                url: RootURl + 'BudgetAllocationCircle/GetBudgetSubHead',
                dataType: 'json',
                data: { budgetHead: budgetHead },
                success: function (data) {
                    $.each(data, function (i, items) {

                        $("#SubBudgetHeadID").append('<option value="' + items.Value + '">' +
                            items.Text + '</option>');
                    });
                    $("#SubBudgetHeadID option").each(function () {
                        if ($(this).text().trim().toLowerCase() == 'none') {
                            $(this).attr("selected", "selected");
                        }
                    });
                },
            });

            FilterTable();

        });

        $('#SubBudgetHeadID').change(function () {

            FilterTable();

        });


        $('#SchemeID').change(function (e) {

            $("#ActivityID").empty();
            var option = $("<option />");
            option.attr("value", '0').text('--Select--');
            $('#ActivityID').append(option);
            if ($('#SchemeID').val() != '') {
                $.ajax({
                    type: 'POST',
                    url: RootURl + "BudgetAllocationCircle/GetMasterActivity",
                    dataType: 'json',
                    data: { Action: 'Activity', ID: '0' },
                    success: function (data) {
                        $.each(data, function (i, items) {

                            $("#ActivityID").append('<option value="' + items.Value + '">' +
                             items.Text + '</option>');
                        });
                    },
                });
                FilterTable();
            }
        });

        $('#ActivityID').change(function (e) {

            $("#SubActivityID").empty();
            var ActivityID = $('#ActivityID').val();

            if (ActivityID != '') {
                var option = $("<option />");
                option.attr("value", '0').text('--Select--');
                $('#SubActivityID').append(option);
                $.ajax({
                    type: 'POST',
                    url: RootURl + "BudgetAllocationCircle/GetMasterActivity",
                    dataType: 'json',
                    data: { Action: 'SubActivity', ID: ActivityID },
                    success: function (data) {
                        $.each(data, function (i, items) {

                            $("#SubActivityID").append('<option value="' + items.Value + '">' +
                             items.Text + '</option>');

                        });
                        $("#SubActivityID option").each(function () {
                            if ($(this).text().trim().toLowerCase() == 'none') {
                                $(this).attr("selected", "selected");
                            }
                        });
                    },

                });
            }          
            FilterTable();
        });

        //$('#SchemeID').change(function (e) {

        //    $("#ActivityID").empty();
        //    var option = $("<option />");
        //    option.attr("value", '0').text('--Select--');
        //    $('#ActivityID').append(option);
        //    var SchemeID = $('#SchemeID').val();
        //    $.ajax({
        //        type: 'POST',
        //        url: RootURl + 'BudgetAllocationCircle/GetActivity',
        //        dataType: 'json',
        //        data: { SchemeID: SchemeID },
        //        success: function (data) {
        //            $.each(data, function (i, items) {

        //                $("#ActivityID").append('<option value="' + items.Value + '">' +
        //                 items.Text + '</option>');

        //            });
        //        },

        //    });

        //});

        //$('#ActivityID').change(function (e) {

        //    $("#SubActivityID").empty();
        //    var option = $("<option />");
        //    option.attr("value", '0').text('--Select--');
        //    $('#SubActivityID').append(option);

        //    var ActivityID = $('#ActivityID').val();

        //    $.ajax({
        //        type: 'POST',
        //        url: RootURl + 'BudgetAllocationCircle/GetSubActivity',
        //        dataType: 'json',
        //        data: { ActivityID: ActivityID },
        //        success: function (data) {
        //            $.each(data, function (i, items) {

        //                $("#SubActivityID").append('<option value="' + items.Value + '">' +
        //                 items.Text + '</option>');

        //            });
        //        },

        //    });

        //});
        //   $('#SubActivityID').change(function (e) {


        //var values = {
        //    FY_ID: $('#FY_ID').val(),
        //    BudgetHeadID: $('#BudgetHeadID').val(),
        //    SubBudgetHeadID: $('#SubBudgetHeadID').val(),

        //    SchemeID: $('#SchemeID').val(),
        //    ActivityID: $('#ActivityID').val(),
        //    SubActivityID: $('#SubActivityID').val()

        //}
        //$.ajax({
        //    type: 'POST',
        //    url: RootURl + 'BudgetAllocationCircle/GetAllocatedAmtDetails',
        //    contentType: 'application/json; charset=utf-8',
        //    data: JSON.stringify(values),
        //    success: function (data) {

        //        $('#AvailableAmount').val(data.totalAvaliableAmount);
        //    },

        //});

        //  });
        $('#SubActivityID').change(function (e) {
            FilterTable();
            AvaliableAmount();
        });

        $('#btnDetails').click(function () {

            if ($('#FY_ID').val() == '') {
                $('#FY_ID').focus();
                return false;
            }
            if ($('#SchemeID').val() == '') {

                $('#SchemeID').focus();
                return false;
            }
            if ($('#ActivityID').val() == 0 || $('#ActivityID').val() == '') {
                $('#ActivityID').focus();
                return false;
            }
            //if ($('#SubActivityID').val() == 0 || $('#SubActivityID').val() == '') {

            //    $('#SubActivityID').focus();
            //    return false;
            //}
            if ($('#BudgetHeadID').val() == '' || $('#BudgetHeadID').val() == 0) {

                $('#BudgetHeadID').focus();
                return false;
            }
            //if ($('#CIRCLE_CODE').val() == '' || $('#CIRCLE_CODE').val() == 'undefined') {
            //    $('#CIRCLE_CODE').focus();
            //    return false;
            //}

            if ($(".ISCircleDivision:checked").val() == "Circle") {
                if ($('#CIRCLE_CODE').val() == '' || $('#CIRCLE_CODE').val() == 'undefined') {
                    $('#CIRCLE_CODE').focus();
                    return false;
                }
            }
            else if ($(".ISCircleDivision:checked").val() == "Division") {
                if ($('#Division').val() == '' || $('#Division').val() == 'undefined') {
                    $('#Division').focus();
                    return false;
                }
            }
            else if ($(".ISCircleDivision:checked").val() == "HQ") {
                if ($('#CircleHQ').val() == '' || $('#CircleHQ').val() == 'undefined') {
                    $('#CircleHQ').focus();
                    return false;
                }
            }

            if ($('#AllocatedAmount').val() == '' || parseInt($('#AllocatedAmount').val()) == 0) {

                $('#AllocatedAmount').focus();
                return false;
            }
            if (parseInt($('#AllocatedAmount').val()) > parseInt($('#RemaningAmount').val())) {
                alert('Allocated amount cannot be exceed than remaning amount!!!');
                $('#AllocatedAmount').focus();
                return false;
            }
            else {
                if (parseFloat($("#AllocatedAmount").val()) <= parseFloat($("#RemaningAmount").val())) {
                    //$("#RemaningAmount").val(parseFloat($("#RemaningAmount").val()) - parseFloat($("#AllocatedAmount").val()));
                }
                else {
                    alert('Allocated amount cannot be exceed than remaning amount!!!');
                    $('#AllocatedAmount').focus();
                    return false;
                }
                var Division = '0';
                var Circles = '0';
                if ($("#divisions").attr("style") == 'display:block' && $(".ISCircleDivision:checked").val() == "Division") {
                    if ($('#Division').val() != '' && $('#Division').val() != '0' && $('#Division').val() != 'undefined') {
                        Division = $('#Division').val();
                        Circles = $("#CIRCLE_CODE").val();
                    }
                    else {
                        $('#Division').focus();
                        return false;
                    }
                }
                if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                    Circles = $("#CIRCLE_CODE").val();
                }
                if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                    Circles = $("#CircleHQ").val();
                }

                var values = {
                    SchemeID: $('#SchemeID').val(),
                    SchemeName: $('#SchemeID option:selected').text(),
                    ActivityID: $('#ActivityID').val(),
                    ActivityName: $('#ActivityID option:selected').text(),
                    SubActivityID: $('#SubActivityID').val(),
                    SubActivityName: $('#SubActivityID option:selected').text(),
                    AllocatedAmount: $('#AllocatedAmount').val(),
                    FY_ID: $('#FY_ID').val(),
                    BudgetHeadID: $('#BudgetHeadID').val(),
                    SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                    CIRCLE_CODE: Circles,
                    ISCircleDivision: $('.ISCircleDivision:checked').val(),
                    Division: Division,
                    BudgetHeadAllocationID: $('#BudgetHeadAllocationID').val()
                };                
                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetAllocationCircle/AdddCircleDetails',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    success: function (data) {

                        if (data.rowid != "D") {
                            var id = "'" + data.rowid + "'";
                            var BudgetHead = $("#BudgetHeadID option:selected").text();
                            var SubBudgetHead = "None";
                            if ($("#SubBudgetHeadID option:selected").val() != "0") {
                                SubBudgetHead = $("#SubBudgetHeadID option:selected").text();
                            }
                            var Circle = "None";
                            var Division = "None";
                            if ($(".ISCircleDivision:checked").val() == "Division" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Division = $("#Division option:selected").text();
                            }
                            else if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Circle = $("#CIRCLE_CODE option:selected").text();
                            }
                            else if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                                Circle = $("#CircleHQ option:selected").text();
                            }

                            var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td style=display:none;>" + data.ISCircleDivision + "</td><td>" + Circle + " / " + Division + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName+"/"+data.SubActivityName + "</td><td>" + BudgetHead + " / " + SubBudgetHead + "</td><td>" + data.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer><i class='fa fa-times'></i></button>" + "</td></tr>";
                            $("#tblDetails").append(rowdata);
                            $('#RemaningAmount').val((parseFloat($('#RemaningAmount').val()) - parseFloat($('#AllocatedAmount').val())));
                            $('#AllocatedAmount').val('');

                        }
                        else {

                            alert("Records already added!!");
                        }
                    }
                });
            }
        });
    });


   


    function TableList() {

        $.ajax({
            type: 'POST',
            url: RootURl + "BudgetAllocationCircle/BudgetAllocationCircleList",
            dataType: 'json',
            data: {},
            success: function (data) {

                $.each(data, function (i, item) {

                    var id = "'" + item.rowid + "'";
                    var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName+ "</td><td>" + item.BudgetHead + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                    $("#tblDetails").append(rowdata);
                });
            },

        });
    }
    function AvaliableAmount() {

        var values = {
            FY_ID: $('#FY_ID').val(),
            BudgetHeadID: $('#BudgetHeadID').val(),
            SubBudgetHeadID: $('#SubBudgetHeadID').val(),

            SchemeID: $('#SchemeID').val(),
            ActivityID: $('#ActivityID').val(),
            SubActivityID: $('#SubActivityID').val()

        }
        $.ajax({
            type: 'POST',
            url: RootURl + 'BudgetAllocationCircle/GetAllocatedAmtDetails',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            success: function (data) {

                $('#AvailableAmount').val(parseFloat(data.AvaliableAmount).toFixed(2));
                $('#RemaningAmount').val(parseFloat(data.RemaningAmount).toFixed(2));
                $('#BudgetHeadAllocationID').val(data.BudgetAllocationHeadId);

            },

        });

    }



    $(document).on('click', '.btndelete', function () {

        if (confirm("Are you sure you want to delete this?")) {

            var $item = $(this).closest("tr").find('td');
            var i = 0;
            var ID;
            var ISCircleDivision;
            $.each($item, function (key, value) {
                if (i == 0) {
                    ID = $(value).text();
                }
                if (i == 1) {
                    ISCircleDivision = $(value).text();
                    $(this).closest('tr').remove();
                }
                i++;
            });

            $.ajax({
                type: 'POST',
                url: RootURl + 'BudgetAllocationCircle/DeleteCircle',
                dataType: 'json',
                data: { Id: ID, ISCircleDivision: ISCircleDivision },
                success: function (data) {

                    if (data == '1') {

                        alert('Data deleted from table');


                    }
                    else {
                        alert('Data not deleted from table please check!!!!');
                    }
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });

        }
        else {

            return false;
        }
      

    });

   
    function reload() {
        location.reload(true);
    }


    function FilterTable() {
        $("#tblDetails").empty();
        var values = {
            FY_ID: $('#FY_ID').val(),
            BudgetHeadID: $('#BudgetHeadID').val(),
            SubBudgetHeadID: $('#SubBudgetHeadID').val(),
            SchemeID: $('#SchemeID').val(),
            ActivityID: $('#ActivityID').val(),
            SubActivityID: $('#SubActivityID').val()

        }
        $.ajax({
            type: 'POST',
            url: RootURl + 'BudgetAllocationCircle/BudgetAllocationFilterCircleList',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            success: function (data) {

                $.each(data, function (i, item) {

                    var id = "'" + item.rowid + "'";
                    //var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td>" + item.CIRCLE_NAME + "/" + item.Division + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
                    //var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td>BUDGETALLOCATION-" + item.BudgetHeadAllocationID + "</td><td>" + item.SchemeName + "</td><td>" + item.BudgetHead + "</td><td>" + item.ActivityName + "</td><td>" + item.CIRCLE_NAME + "/" + item.Division + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
                    var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + item.CIRCLE_NAME +  "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer><i class='fa fa-times'></i></button>" + "</td></tr>";
                    $("#tblDetails").append(rowdata);
                });

            },

        });

    }




    $(".ISCircleDivision").change(function () {
        $("#CIRCLE_CODE").val('');
        if ($(".ISCircleDivision:checked").val() == "HQ") {

            $("#divisions").attr("style", "display:none");
            $("#CIRCLE_CODE").addClass('hide');
            $("#CircleHQ").removeClass('hide');

        }
        else if ($(".ISCircleDivision:checked").val() == "Division") {
            $("#divisions").attr("style", "display:block");
            $("#CircleHQ").addClass('hide');
            $("#CIRCLE_CODE").removeClass('hide');
        }
        else {
            $("#divisions").attr("style", "display:none");
            $("#CircleHQ").addClass('hide');
            $("#CIRCLE_CODE").removeClass('hide');
        }

    });
    var RootUrl = '@Url.Content("~/")';
    $('#CIRCLE_CODE').change(function (e) {
        if ($(".ISCircleDivision:checked").val() == "Division") {
            $("#Division").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/DivisionData', // we are calling json method
                dataType: 'json',
                data: { circleCode: $("#CIRCLE_CODE").val() },
                success: function (circle) {
                    $.each(circle, function (i, items) {
                        $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
            return false;
        }
    });
    $(document).ready(function () {
        $('#Division').empty();
        $('#Division').append("<option value=''>--Select--</option>")
    });


</script>*@