@{
    ViewBag.Title = "ACFAppearance";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model FMDSS.Models.Encroachment.ViewModel.EncroachAppearanceView
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script>
    var RootURl = '@Url.Content("~/")';
</script>
<script type="text/javascript">
    $(function () {
        $('footer.foot-inn').hide();
        $('.gridtable').DataTable({
            responsive: true,
            "bSort": false
        });

        $("#AcfDecisionFiles").change(function () {
            try {
                var file = getNameFromPath($(this).val());
                if (file != null) {
                    var extension = file.substr((file.lastIndexOf('.') + 1));
                    switch (extension) {
                        case 'pdf':
                        case 'PDF':
                            flag = true;
                            break;
                        default:
                            flag = false;
                    }
                }
                if (flag == false) {
                    $("#err5").text("You can only upload only pdf extension file");
                    $("#AcfDecisionFiles").val('');
                    return false;
                }
                else {
                    var size = GetFileSize('AcfDecisionFiles');
                    if (size > 2) {
                        $("#err5").text("You can upload file up to 2 MB");
                        $("#AcfDecisionFiles").val('');
                    }
                    else {
                        $("#err5").text("");
                    }
                }
            }
            catch (err) { alert(err.message); }
        });

        $(".datefield").datepicker({ minDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });

        $.validator.addMethod('date',
         function (value, element) {
             if (this.optional(element)) {
                 return true;
             }
             var ok = true;
             try {
                 $.datepicker.parseDate('dd/mm/yy', value);
             }
             catch (err) {
                 ok = false;
             }
             return ok;
         });
        $('#Decision_Taken').change(function () { 
            if ($('#Decision_Taken').val() == 'Nextdate') {
                $('.decfileRequired').hide();
                $('.Next').show();
            } else if ($('#Decision_Taken').val() == 'Closed') {
                $('.decfileRequired').show();
                $('.Next').hide();
            }             
            else {
                $('.Next').hide();
            }
        });

        $('#btnSubmit').click(function () {
            if ($('#Decision_Taken').val() == 'Nextdate' && $('#Decision_Description').val() != '' && $('#Next_Date').val() == '') {
                $('#Next_Date').focus();
                return false;
            }

            if ($('#Decision_Taken').val() == 'Nextdate' && $('#Decision_Description').val() != '' && $('#Next_Date').val() != '' && $('#NextDecisionPlace').val() == '') {
                $('#NextDecisionPlace').focus();
                return false;
            }

            if ($('#Decision_Taken').val() == 'Closed' && $('#AcfDecisionFiles').val().length == 0) {
                $("#err5").text("Upload copy of decision in pdf format");
                $('#AcfDecisionFiles').focus();
                return false;
            }
            //if ($('#AcfDecisionFiles').val().length == 0) {

            //    $("#err5").text("Upload copy of decision in pdf format");
            //    $('#AcfDecisionFiles').focus();
            //    return false;
            //}
            //else {
            //    $("#err5").text("");
            //}
        });
    });
    function Assign(EnCode) {
        $('#tblViewDetails').empty();
        $('#EN_Code').val($.trim(EnCode));
        var EnchId = EnCode;
        $.ajax({
            type: 'POST',
            url: RootURl + 'ACFAppearance/ViewDetails', // we are calling json method
            dataType: 'json',
            data: { EnchId: EnchId },
            success: function (data) {
                $.each(data, function (i, item) {

                    var bardata = "<tr><td>Encroachment ID</td><td>" + item.EncroachmentId +
                                    "</tr><tr></td> <td>Division</td><td>" + item.DIV_CODE +
                                    "</tr><tr></td> <td>Range</td><td>" + item.RANGE_CODE +
                                    "</tr><tr></td> <td>Dispatch No.</td><td>" + item.DispatchNo +
                                    "</tr><tr></td><td>Dispatch date</td><td>" + item.Dispatch_Date +
                                    "</tr><tr></td><td>Date of Entry</td><td>" + item.DateOfEntry +
                                    "</tr><tr></td><td>ACF Status</td><td>" + item.ACF_Status +
                                    "</tr><tr></td><td>ACF Remarks</td><td>" + item.ACF_Remarks +
                                    "</tr><tr></td><td>Notice No.</td><td>" + item.NoticeNo +
                                    "</tr><tr></td><td>Notice date</td><td>" + item.Notice_Date +
                                    "</tr>";
                    $('#tblViewDetails').append(bardata);
                });

            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
    }

    function getNameFromPath(strFilepath) {
        try {
            var objRE = new RegExp(/([^\/\\]+)$/);
            var strName = objRE.exec(strFilepath);

            if (strName == null) {
                return null;
            }
            else {
                return strName[0];
            }
        }
        catch (err) { alert(err.message); }
    }
    function GetFileSize(fileid) {
        try {
            var fileSize = 0;
            fileSize = $("#" + fileid)[0].files[0].size //size in kb
            fileSize = fileSize / 1048576; //size in mb
            return fileSize;
        }
        catch (e) {
            alert("Error is :" + e);
        }
    }

    function reload() {
        location.reload(true);
    }

</script>
<style>

</style>
@using (Html.BeginForm("Submit", "ACFAppearance", FormMethod.Post, new { data_behavior = "confirm", enctype = "multipart/form-data", id = "ACFAppearance" }))
{
    <div id="page-wrapper-inn">
        @if (TempData["AppearanceMsg"] != null)
        {
            <script type="text/javascript" language="javascript">
                alert('@TempData["AppearanceMsg"]');
            </script>
        }
        <div class="col-lg-12 pad">
            <h1 class="page-header">Encroachment List</h1>
        </div>
        <div class="row">
            <!-- Tab1 -->
            @Html.HiddenFor(x => x.EN_Code, new { @id = "EN_Code", @name = "EN_Code" })
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <!--Table-->
                        <div id="tbl" class="table-responsive">
                            <table class="table table-striped table-bordered table-hover gridtable">
                                <thead>
                                    <tr>
                                        <th style="width:5%;">Encroachment Id</th>
                                        <th style="width:5%;">Division</th>
                                        <th style="width:5%;">Encroacher Name</th>
                                        <th style="width:5%;">Registration Status</th>
                                        <th style="width:5%;">Case Number</th>
                                        <th style="width:5%;">Decision taken</th>
                                        <th style="width:5%;">Decision date</th>
                                        <th style="width:5%;">Next date</th>
                                        <th style="width:5%;">Action</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in ViewData["AppearanceList"] as IEnumerable<FMDSS.Models.Encroachment.ViewModel.EncroachmentView>)
                                    {
                                        if (item.EncroachmentId != "")
                                        {
                                            <tr>
                                                <td style="width:5%;">
                                                    @Html.DisplayFor(model => item.EncroachmentId)
                                                </td>
                                                <td style="width:5%;">
                                                    @Html.DisplayFor(model => item.DIV_CODE)
                                                </td>
                                                <td style="width:5%;">
                                                    @Html.DisplayFor(model => item.Encroacher_Name)
                                                </td>
                                                <td style="width:5%;">
                                                    @Html.DisplayFor(model => item.ACF_Status)
                                                </td>
                                                <td style="width:5%;">
                                                    @Html.DisplayFor(model => item.NoticeNo)
                                                </td>
                                                <td style="width:5%;">
                                                    @Html.DisplayFor(model => item.Decision_Taken)
                                                </td>
                                                @if (item.Decision_Date != null)
                                                {
                                                    string dt = item.Decision_Date.Value.Day + "/" + item.Decision_Date.Value.Month + "/" + item.Decision_Date.Value.Year;
                                                    <td style="width:5%;">@dt</td>
                                                }
                                                else
                                                {
                                                    <td style="width:5%;"></td>
                                                }

                                                @if (item.Decision_Taken == "Nextdate")
                                                {
                                                    string dt = item.Next_Date.Value.Day + "/" + item.Next_Date.Value.Month + "/" + item.Next_Date.Value.Year;
                                                    <td style="width:5%;">@dt</td>
                                                }
                                                else
                                                {
                                                    <td style="width:5%;"></td>
                                                }
                                                <td style="width:5%;">
                                                    @if (Convert.ToString(item.Decision_Taken) == "Pending")
                                                    {
                                                        <button id="btnAppearance" type="button" class="btn btn-success" title="Edit" data-toggle="modal" onclick="Assign('@Html.DisplayFor(model => item.EncroachmentId)')" data-target="#myModalDfo">Action</button>
                                                    }
                                                    @if (Convert.ToString(item.Decision_Taken) == "Closed")
                                                    {
                                                        <button id="btnClosed" type="button" class="btn btn-default" title="Edit">Closed</button>
                                                    }
                                                    @if (Convert.ToString(item.Decision_Taken) == "Nextdate")
                                                    {
                                                        <button id="btnClosed" type="button" class="btn btn-success" title="Edit" data-toggle="modal" onclick="Assign('@Html.DisplayFor(model => item.EncroachmentId)')" data-target="#myModalDfo">Action</button>
                                                    }
                                                </td>

                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>

                        </div>
                        <!-- /.table-responsive -->
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade in" id="myModalDfo" tabindex="-1" role="dialog" aria-hidden="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                        <h4 class="modal-title" id="myModalLabel">
                            Appearance
                        </h4>
                    </div>
                    <div class="modal-body">
                        <table class="table table-striped table-bordered table-hover">
                            <tbody id="tblViewDetails"></tbody>
                        </table>
                        <!-- From URL Get -->
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Action: <span class="mandatory">*</span></label>
                                @Html.DropDownListFor(x => x.Decision_Taken, new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "--Select--", Value = ""},
                                        new SelectListItem { Text = "Closed", Value = "Closed"},
                                        new SelectListItem { Text = "Nextdate", Value = "Nextdate"},
                                    }, new { id = "Decision_Taken", name = "Decision_Taken", @class = "form-control" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Decision_Taken)</div>
                            </div>
                        </div>
                        @*<div class="col-lg-6">
                                <div class="form-group">
                                    <label>
                                        Decision Date:<span class="mandatory">*</span>
                                    </label>
                                    @Html.TextBoxFor(x => x.Decision_Date, new { @class = "form-control datefield", @id = "Decision_Date", @name = "Decision_Date" })
                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Decision_Date)</div>
                                </div>
                            </div>*@
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>
                                    Description:<span class="mandatory">*</span>
                                </label>
                                @Html.TextAreaFor(x => x.Decision_Description, new { @class = "form-control", @maxlength = 300, @id = "Decision_Description", @name = "Decision_Description" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Decision_Description)</div>
                            </div>
                        </div>
                        <div class="col-lg-6 Next" style="display:none">
                            <div class="form-group">
                                <label>
                                    Next Appearance Date:<span class="mandatory">*</span>
                                </label>
                                @Html.TextBoxFor(x => x.Next_Date, new { id = "Next_Date", name = "Next_Date", @class = "form-control datefield" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Next_Date)</div>
                            </div>
                        </div>
                        <div class="col-lg-6 Next" style="display:none">
                            <div class="form-group">
                                <label>
                                    Next Appearance Place:<span class="mandatory">*</span>
                                </label>
                                @Html.TextBoxFor(x => x.Next_Decision_Place, new { id = "Next_Decision_Place", @maxlength = 100, name = "NextDecisionPlace", @class = "form-control" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Next_Decision_Place)</div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Upload Decision(PDF): <span style="display:none;" class="mandatory decfileRequired">*</span></label>
                                @Html.TextBoxFor(x => x.AcfDecisionFiles, new { @class = "form-control", @id = "AcfDecisionFiles", name = "AcfDecisionFiles", type = "file" })
                                <div id="err5" class="alert-danger1">@Html.ValidationMessageFor(x => x.AcfDecisionFiles)</div>
                            </div>
                        </div>


                    </div>
                    <!-- /.modal-body -->
                    <div class="modal-footer" id="fot-f" style="clear:both;">
                        <div id="btn" class="col-lg-12">
                            <button id="btnSubmit" type="submit" class="btn btn-success" name="Command" value="Submit">
                                <i class="fa fa-check"></i> Submit
                            </button>

                            <button name="button" class="btn btn-danger" type="submit" value="Cancel" data-dismiss="modal" style="width: auto" onclick="reload1(); return false;">
                                <i class="fa fa-times fa-fw"></i> Close
                            </button>

                        </div>
                    </div>

                </div>
                <!-- /.modal-content -->
            </div>
            <!-- /.modal-dialog -->
        </div>
    </div>
}

