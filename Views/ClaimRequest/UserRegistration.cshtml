@{
    ViewBag.Title = "User Registration for FRA";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_SuperAdmin.cshtml";
}
@model IEnumerable<FMDSS.Entity.FRA.FRAViewModel.RegistrationVM>

<div id="page-wrapper-inn">
    <div class="row">
        <div class="col-lg-4 pull-right" id="place">
            <button type="button" class="btn btn-success" id="btnAddModel" data-target="#myModal" data-toggle="modal" onclick="return CallUserRegistrationData(0);" title="Create Place">
                <i class="fa fa-plus"></i> ADD New User
            </button>
        </div>
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    @Html.Partial("_ErrorMsg")
                    <div class="panel panel-default">
                        @using (Html.BeginForm("UserRegistrationFilterList", "ClaimRequest", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
                        {
                            <div class="panel-body">
                                <div class="col-lg-4">
                                    <div class="form-group un-bold">
                                        <label>Designation :<span class="mandatory"></span></label>
                                        @Html.DropDownList("DesignationID", (IEnumerable<SelectListItem>)ViewBag.DesignationList, "--Select--", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="form-group un-bold">
                                        <label>District:<span class="mandatory"></span></label>
                                        @Html.DropDownList("DistictId", (IEnumerable<SelectListItem>)ViewBag.DistictList, "--Select--", new { @class = "form-control" })
                                    </div>
                                </div>
                                <div id="btn" class="col-lg-4">
                                    <button type="submit" class="btn btn-success" name="Command" value="Save" id="btn_submit1">
                                        <i class="fa fa-check"></i> Submit
                                    </button>
                                    <button type="button" class="btn btn-warning" id="btn_reset">
                                        <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                                    </button>
                                </div>
                            </div>
                        }
                    </div>
                    <div class="dataTable_wrapper scrollGrid col-lg-12">
                        <div id="tbl" class="table-responsive">
                            <div class="col-lg-3 padding-bottom hide" style="float:right;"><button class="btn btn-info pull-right" onclick="tablesToExcel(['tblUserRegistration'], ['tblUserRegistration'], 'UserRegistrationReport', 'Excel')">Export to Excel</button></div>
                            <table id="tblUserRegistration" class="table table-striped table-bordered table-hover table-responsive">
                                <thead>
                                    <tr>
                                        <th style="width:8%;">SNo.</th>
                                        <th>Name</th>
                                        <th>SSOID</th>
                                        <th>Designation</th>
                                        <th>District</th>
                                        <th>Tehsil</th>
                                        <th>Block</th>
                                        <th>Gram Panchayat</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(model => item.SNo)
                                                @Html.HiddenFor(model => item.RegistrationID)
                                            </td>
                                            <td>@Html.DisplayFor(model => item.Name)</td>
                                            <td>@Html.DisplayFor(model => item.SSOID)</td>
                                            <td>@Html.DisplayFor(model => item.DesignationName)</td>
                                            <td>@Html.DisplayFor(model => item.DistrictName)</td>
                                            <td>@Html.DisplayFor(model => item.Tehsil)</td>
                                            <td>@Html.DisplayFor(model => item.Block)</td>
                                            <td>@Html.DisplayFor(model => item.GramPanchayat)</td>
                                            <td>
                                                <input onclick='return postRequest(@item.RegistrationID)' type="checkbox" id='@item.RegistrationID' disabled="disabled" value="true" @(item.ActiveStatus ? "checked=\"checked\"" : "") />
                                            </td>
                                            <td colspan="2">
                                                <button type="button" class="btn btn-warning btn-circle EditDepot" data-toggle="modal" data-target="#myModal" title="Edit" onclick="return CallUserRegistrationData(@item.RegistrationID);">
                                                    <i class="fa fa-edit"></i>
                                                </button>

                                                <a class="btn btn-danger btn-circle" onclick="return confirm('Are you sure you wish to delete this record?');" href='@Url.Action("DeletePlaces", "Master", new { id = item.RegistrationID })' style="display:none">
                                                    <i class="fa fa-times"></i>
                                                </a>
                                            </td>
                                        </tr>

                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>
                </div>
            </div>

            <div class="modal fade" id="myModal" role="dialog">
                <div class="modal-dialog modal-lg" id="modelPlace">
                    <!-- Modal content-->
                </div>
            </div>
        </div>
    </div>

</div>
@Html.Hidden("hdnRootURL", Url.Content("~/"))
<script src="~/js/jquery.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery-ui.js" type="text/javascript"></script>
<script type="text/javascript">
    var RootUrl = '@Url.Content("~/")';

        $(document).ready(function () {
            table = $('#tblUserRegistration').DataTable({
                "paging": true,
                "aLengthMenu": [[10, 25, 50, 75, 100, 500, -1], [10, 25, 50, 75, 100, 500, "All"]],
                "iDisplayLength": 10,
                "aaSorting": [],
                'aoColumnDefs': [{
                    'bSortable': false,
                    'aTargets': ['nosort']
                }]
            });
        });

        function CallUserRegistrationData(id) {
            $.ajax({
                type: 'GET',
                url: RootUrl+"ClaimRequest/GetCitizenUserProfileDetails?objectID=" + id,
                dataType: 'html',
                success: function (data) {
                    $('#modelPlace').html(data);
                },
                error: function (ex) {
                    alert(ex.error);
                }
            });

        };


        function CallSSoData() {
            var SSoId = $('#txtSsoId').val();

            $.ajax({
                type: 'GET',
                url: RootUrl +"UserManagementMaster/GetCitizenUserProfileDetailsSSOWise?SsoId=" + SSoId,
                dataType: 'html',
                success: function (data) {
                    $('#modelPlace').html(data);
                },
                error: function (ex) {
                    alert(ex.error);
                }
            });

        };
</script>
<script type="text/javascript">
        $.noConflict(true);
        var tablesToExcel = (function () {
            var uri = 'data:application/vnd.ms-excel;base64,'
                , tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
                    + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'
                    + '<Styles>'
                    + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
                    + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
                    + '</Styles>'
                    + '{worksheets}</Workbook>'
                , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
                , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
                , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
                , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
            return function (tables, wsnames, wbname, appname) {
                var ctx = "";
                var workbookXML = "";
                var worksheetsXML = "";
                var rowsXML = "";
                console.log(tables);
                var getFilterFromDate ='All';
                var getFilterToDate = 'All';
                //wbname = wbname + "UserRegistration.xls";
                wbname = wbname + "FromDate:-" + getFilterFromDate + "- ToDate:-" + getFilterToDate + '.xls';

                for (var i = 0; i < tables.length; i++) {
                    if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);
                    for (var j = 0; j < tables[i].rows.length; j++) {
                        rowsXML += '<Row>'
                        for (var k = 0; k < tables[i].rows[j].cells.length; k++) {
                            var dataType = tables[i].rows[j].cells[k].getAttribute("data-type");
                            var dataStyle = tables[i].rows[j].cells[k].getAttribute("data-style");
                            var dataValue = tables[i].rows[j].cells[k].getAttribute("data-value");
                            dataValue = (dataValue) ? dataValue : tables[i].rows[j].cells[k].innerHTML.trim();
                            if (dataValue.indexOf('button') == -1) {
                                var dataFormula = tables[i].rows[j].cells[k].getAttribute("data-formula");
                                dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                                ctx = {
                                    attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date') ? ' ss:StyleID="' + dataStyle + '"' : ''
                                    , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                                    , data: (dataFormula) ? '' : dataValue
                                    , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : ''
                                };
                                rowsXML += format(tmplCellXML.trim(), ctx);
                            }
                        }
                        rowsXML += '</Row>'

                    }
                    ctx = { rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i };
                    worksheetsXML += format(tmplWorksheetXML, ctx);
                    rowsXML = "";
                }

                ctx = { created: (new Date()).getTime(), worksheets: worksheetsXML };
                workbookXML = format(tmplWorkbookXML, ctx);

                console.log(workbookXML);

                var link = document.createElement("A");
                link.href = uri + base64(workbookXML);
                link.download = wbname || 'DODInventoryReport.xls';
                link.target = '_blank';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        })();
</script>
<style>
    .scrollGrid {
        overflow-x: auto; 
    } 
</style>
