@model FMDSS.Models.ForestDevelopment.Workorder

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Forestlayout.cshtml";
}
<style type="text/css">
    .field-validation-error {
        color: #ff0000;
    }

    .field-validation-valid {
        display: none;
    }

    .input-validation-error {
        border: 1px solid #ff0000;
        background-color: #ffeeee;
    }

    .validation-summary-errors {
        font-weight: bold;
        color: #ff0000;
    }

    .validation-summary-valid {
        display: none;
    }
</style>
<div id="page-wrapper-inn">
    <input type="hidden" id="hdQuantity" name="hdQuantity" />
    <div class="col-lg-12 pad">
        <div class="col-lg-10 pad">
            <h1 class="page-header">Work Order Progress Entry</h1>
        </div>
        <div class="col-lg-2 pull-right">
            <button type="button" class="btn btn-success btn_pp pull-right" name="btn_addpopip" value="" title="Work Order List" onclick="location.href='@Url.Action("Progressindex", "WorkOrder")'">
                <i class=" fa fa-th-list ">
                </i> Work Progress List
            </button>
        </div>
    </div>
    <!-- /.col-lg-12 -->
    <!-- Row -->
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <!--<div class="panel-heading">Processing Fees</div>-->
                <!-- /.panel-heading -->
@using (Html.BeginForm("ProgressEntry", "WorkOrder", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
                {
                <div class="panel-body">
@if (HttpContext.Current.Session["DesignationId"] != null)
{
    if (HttpContext.Current.Session["DesignationId"].ToString() == "8")
    {
                                <div class="col-lg-6 multi range">
                                    <div class="form-group">
                                        <label for="Tehsil">
                                            Range Name:<span class="mandatory">*</span>
                                        </label>
                                        @Html.DropDownListFor(x => x.RANGE_CODE, (IEnumerable<SelectListItem>)ViewBag.ddlRange, "--Select--", new { @class = "form-control input-width", id = "ddlRange" })
                                        <div id="errordiv03" style="display:none" class="alert-danger1"></div>
                                        @Html.HiddenFor(x => x.DIV_CODE, new { id = "hdnDivCode" })
                                    </div>
                                </div>
        <div class="col-lg-6 multi ">
                            <div class="form-group">
                                <label for="Village">
                                    Select Village:
                                </label>

                                @Html.DropDownListFor(x=>x.Vill_Code, (IEnumerable<SelectListItem>)ViewBag.ddlVillName1, new { @class = "form-control common", title = "Select Village Name", id = "ddlVillName" })
                                <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.Vill_Code)</div>

                            </div>
                        </div>
    }
    else if (HttpContext.Current.Session["DesignationId"].ToString() == "6")
    {
        <div class="col-lg-6 multi">
            <div class="form-group">
                <label for="Proposed">
                    Forest Division Name:<span class="mandatory">*</span>
                </label>
                @Html.DropDownListFor(x => x.DIV_CODE, (IEnumerable<SelectListItem>)ViewBag.ddlDivision1, "--Select--", new { @class = "form-control common", id = "division" })
                @Html.HiddenFor(x => x.DIV_CODE, new { id = "lbldivision" })
              
                <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.DIV_CODE)</div>

            </div>
        </div>}
}
                    @*<div class="col-lg-6">
                        <div class="form-group">
                            <label>Select District: <span class="mandatory">*</span></label>
                            @Html.DropDownList("ddlDistrict", (IEnumerable<SelectListItem>)ViewBag.ddlDistrict1, "--Select--", new { @class = "form-control common", title = "Select District", id = "district" })
                            <div id="errordiv51" style="display:none" class="alert-danger1"></div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Select Block: <span class="mandatory">*</span></label>
                            @Html.DropDownList("ddlBlockName", (IEnumerable<SelectListItem>)ViewBag.ddlBlockName1, new { @class = "form-control common", title = "Select Block", id = "blockname" })
                            <div id="errordiv2" style="display:none" class="alert-danger1"></div>
                        </div>
                    </div>


                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="GramPanchayat">
                                Gram Panchayat Name:
                            </label>
                            @Html.DropDownList("ddlGPName", (IEnumerable<SelectListItem>)ViewBag.ddlGPName1, new { @class = "form-control common", title = "Select GP Name", id = "ddlGPName" })
                            <div id="errordiv3" style="display:none" class="alert-danger1"></div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label for="Village">
                                Village Name:
                            </label>

                            @Html.DropDownListFor(x => x.Village_Code, (IEnumerable<SelectListItem>)ViewBag.ddlVillName1, new { @class = "form-control common", title = "Select Village Name", id = "ddlVillName" })
                            <div id="errordiv4" style="display:none" class="alert-danger1"></div>

                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Micro Plan: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.MicroPlanID, (IEnumerable<SelectListItem>)ViewBag.ddlVillName1, new { @class = "form-control common", title = "Select Microplan", id = "ddlMicroPlan" })
                            <div id="errordiv5" style="display:none" class="alert-danger1"></div>

                        </div>
                    </div>*@

                    <div class="col-lg-6">
                        <div class="form-group">@Html.HiddenFor(x => x.ID)
                            <label>Work Order: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.WorkOrderID, (IEnumerable<SelectListItem>)ViewBag.WorkOrderList1, new { @class = "form-control common", title = "Select Work order", id = "ddlWorkOrder" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.WorkOrderID)</div>    

                        </div>
                    </div>                   

                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Survey: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.SurveyID, (IEnumerable<SelectListItem>)ViewBag.ddlModel1, new { @class = "form-control common", title = "Select Survey", id = "ddlSurvey" })
                            <span id="survynotdone"> Survey not done please <a href='@Url.Action("SurveyReport", "SurveyReport")'>click here</a> for survey.</span>
                               
                                <div id="errordiv7" style="display:none" class="alert-danger1"></div>

                            </div>
                    </div>
                    <div class="col-lg-12"><div class="divider"></div></div>
                    <div class="col-lg-12">
                        <table id="temp" class="table table-bordered">
                            <thead>
                                <tr>
                                    @*<th>Id</th>*@
                                    <th style="width:0%">Survey Date</th>
                                    <th style="width:0%">Latitude/Longitude</th>                                    
                                    <th style="width:0%">Activity</th>          
                                    <th style="width:0%">%age</th>        
                                    <th style="width:0%">Unit</th>           
                                    @*<th style="width:0%">Area in (Hectare)</th>*@ 
                                    <th style="width:0%">Quantum of alloted work</th>  
                                    <th style="width:0%">Quantum of work completed</th>                            
                                    <th style="width:0%">Created on</th>
                                    <th style="width:0%">Image</th>                             
                                </tr>
                            </thead>
                            <tbody id="SurveyDetailTable"></tbody>
                        </table>
                    </div>
                    @*<div class="col-lg-6">
                        <div class="form-group">
                            <label>Model: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.Model, (IEnumerable<SelectListItem>)ViewBag.ddlModel1, new { @class = "form-control common", title = "Select Model", id = "ddlModel" })
                            <div id="errordiv7" style="display:none" class="alert-danger1"></div>

                        </div>
                    </div>*@
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Activity: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.Activity, (IEnumerable<SelectListItem>)ViewBag.ddlActivity1, new { @class = "form-control common", title = "Select Activity", id = "ddlActivity" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.Activity)</div>    

                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Sub Activity: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.SubActivity, (IEnumerable<SelectListItem>)ViewBag.ddlsubActivity1, new { @class = "form-control common", title = "Select Sub Activity", id = "ddlSubActivity" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.SubActivity)</div>    
                        </div>
                    </div>
                    <div class="col-lg-12"><div class="divider"></div></div>
                    <div class="col-lg-12">
                        <table id="temp" class="table table-bordered">
                            <thead>
                                <tr>
                                    @*<th>Id</th>*@
                                    <th>Milestone Title</th>
                                    <th>Payment %age</th>
                                    <th>Activity completion %age</th>       
                                    <th>Unit</th>                         
                                    <th>Completed</th>
                                     <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="MilestoneDetailTable"></tbody>
                        </table>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Area of Operation: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.FieldName, new { @class = "form-control Alphanumeric", @placeholder = "Enter Area of Operation", @maxlength = 500, title = "Enter Area of Operation like: Machwa, Jaipur", @id = "FieldName" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.FieldName)</div>    
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Description: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.Description, new { @class = "form-control Alphanumeric", @placeholder = "Enter Description", title = "Enter Description eg: desc to sub", @maxlength = 500, @id = "Description" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.Description)</div>    
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Field Officer: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.FieldOfficerName, new { @class = "form-control Alphanumeric", @placeholder = "Enter Name of Field Officer",Value= Convert.ToString( @Session["User"]), @readonly = "true",@tabindex="-1", title = "Enter Name of Field Officer eg: Ashok Yadav", @maxlength = 500, @id = "FieldOfficerName" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.FieldOfficerName)</div>    
                        </div>
                    </div>
                    @*<div class="col-lg-6">
                        <div class="form-group">
                            <label>Latitude: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.GPSLatitute, new { @class = "form-control Numeric", @placeholder = "Enter Latitude", title = "Enter GPS Latitute eg: 25.25", @maxlength = 500, @id = "GPSLatitute" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.GPSLatitute)</div>    
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Longitude: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.GPSLongitute, new { @class = "form-control Numeric", @placeholder = "Enter Longitude", title = "Enter GPS Longitute eg: 27.55", @maxlength = 500, @id = "GPSLongitute" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.GPSLongitute)</div>    
                        </div>
                    </div>*@

                    @*<div class="col-lg-6">
                        <div class="form-group">
                            <label>Status: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.ProgressStatus, new List<SelectListItem>
                             {                     
                                new SelectListItem{ Text="Ongoing", Value = "Ongoing" },
                                new SelectListItem{ Text="Completed", Value = "Completed" }
                             }, new { @class = "form-control common", title = "Select Progress Status", id = "ddlProgressStatus" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.ProgressStatus)</div>    
                        </div>
                    </div>*@
                    <div class="col-lg-12"></div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label>BSR Per Unit (Avg): <span class="mandatory">*</span></label>
                            @Html.TextBox("AVGBSRPerUnit" ,null,new {@class = "form-control Numeric", @readonly = "true",@tabindex="-1", title = "Enter BSR Per Unit", @placeholder = "Enter BSR Per Unit", @maxlength = 15, @id = "AVGBSRPerUnit"} )
                              
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label>BSR Per Unit (Circle-labor): <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.BSRPerUnit, new { @class = "form-control Numeric", @readonly = "true", @tabindex = "-1", title = "Enter BSR Per Unit", @placeholder = "Enter BSR Per Unit", @maxlength = 15, @id = "CircleBSRPerUnit" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.BSRPerUnit)</div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label>Men Days Worked: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.MenDaysWorked, new { @class = "form-control Numeric", title = "Enter Men Days Worked eg: 22", @placeholder = "Enter Men Days Worked", @maxlength = 10, @id = "MenDaysWorked" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.MenDaysWorked)</div>    
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            <label>Total Cost(Labour): <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.TotalCostlabour, new { @class = "form-control Numeric", @maxlength = 10, @id = "TotalCostlabour",@readonly="readonly" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.TotalCostlabour)</div>
                        </div>
                    </div>
                    <div class="col-lg-12"></div>
                    <div class="col-lg-3">
                    <div class="form-group">
                        <label>BSR Per Unit (Avg): <span class="mandatory">*</span></label>
                        @Html.TextBox("AVGBSRPerUnitMat",null, new { @class = "form-control Numeric", @readonly = "true", @tabindex = "-1", title = "Enter BSR Per Unit Material", @placeholder = "Enter BSR Per Unit Material", @maxlength = 15, @id = "AVGBSRPerUnitMat" })      
                    </div>
                </div>
                    <div class="col-lg-3">
                <div class="form-group">
                    <label>BSR Per Unit (Circle-Material): <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(x => x.BSRPerUnitMat, new { @class = "form-control Numeric", @readonly = "true", @tabindex = "-1", title = "Enter BSR Per Unit Material", @placeholder = "Enter BSR Per Unit Material", @maxlength = 15, @id = "CircleBSRPerUnitMat" })
                    <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.BSRPerUnitMat)</div>
                </div>
            </div>
        <div class="col-lg-3">
            <div class="form-group">
                <label>No of Units: <span class="mandatory">*</span></label>
                @Html.TextBoxFor(x => x.noofunitMat, new { @class = "form-control Numeric", title = "Enter no of units for material: 22", @placeholder = "Enter no of units for material", @maxlength = 10, @id = "noofunitMat" })
                <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.noofunitMat)</div>
            </div>
        </div>
            <div class="col-lg-3">
                <div class="form-group">
                    <label>Total Cost(Material): <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(x => x.TotalCostMaterial, new { @class = "form-control Numeric", @maxlength = 10, @id = "TotalCostMaterial", @readonly = "readonly" })
                    <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.noofunitMat)</div>
                </div>
            </div>
                    @*<div class="col-lg-6">
                        <div class="form-group ">
                            <label>Current Status Pic: <span class="mandatory">*</span></label>
                            <input type="file" class="form-control" id="idCurrentStatusUrl" name="CurrentStatusUrl" title="Click on Choose File button and upload the Current Status Pic" />
                        </div>
                        <div id="errordiv9" style="display:none" class="alert-danger1"></div>
                    </div>*@
                    @*<div class="col-lg-6">
                        <div class="form-group">
                            <label>Total Unit: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.TotalCost, new { @class = "form-control", title = "Enter Total produced unit ", @placeholder = "Enter Total Unit", @maxlength = 500, @id = "TotalCost" })
                        </div>
                    </div>*@

                    @*<div class="col-lg-6 ">
                        <div class="form-group">
                            <label>Bill Voucher No: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.BillVoucherNo, new { @class = "form-control Alphanumeric", title = "Enter Bill Voucher", @placeholder = "Enter Bill Voucher eg:B1122541", @maxlength = 500, @id = "BillVoucherNo" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.BillVoucherNo)</div>    
                        </div>
                    </div>

                 
                    <div class="col-lg-6 ">
                        <div class="form-group">
                            <label>Bill Voucher Date: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.BillVoucherDate, new { @class = "form-control datefield", title = "Enter Bill Voucher Date", @placeholder = "Enter Bill Voucher Date eg: 22/02/2016", @maxlength = 500, @id = "BillVoucherDate" })
                        </div>
                    </div>
                    <div class="col-lg-6 ">
                    <div class="form-group">
                        <label>Bill Voucher Amount: <span class="mandatory">*</span></label>
                        @Html.TextBoxFor(x => x.BillVoucherAmount, new { @class = "form-control Numeric", title = "Enter Bill Voucher Amount", @placeholder = "Enter Bill Voucher Amount eg: 1125.50", @maxlength = 500, @id = "BillVoucherAmount" })
                        <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.BillVoucherAmount)</div>    
                    </div>
                </div>*@
                    <div class="col-lg-12"><div class="divider"></div></div>
                    <div class="col-lg-6 Producetype">
                        <label>Produce Type: <span class="mandatory">*</span></label><br />
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.ProduceType, "Asset", new { id = "rbtnProduceAsset" })   Asset
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.ProduceType, "Product", new { id = "rbtnProduceProduct" }) Product
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.ProduceType, "NA", new { id = "rbtnProduceNA" }) NA
                        </label>
                        @*<div class="divider"></div>*@
                    </div> 
                    <div class="col-lg-6 Asset">
                        <div class="form-group">
                            <label>Asset Type: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.AssetCategoryID, (IEnumerable<SelectListItem>)ViewBag.ddlAssetType1, "--Select--", new { @class = "form-control common", title = "Select Product Type", id = "ddlAssetType" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.ProduceTypeID)</div>

                        </div>
                    </div>

                    <div class="col-lg-6 Asset">
                        <div class="form-group">
                            <label>Asset: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.AssetID, (IEnumerable<SelectListItem>)ViewBag.ddlAsset1, "--Select--", new { @class = "form-control common", title = "Select Product", id = "ddlAsset" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.ProductID)</div>

                        </div>
                    </div>
                  

                    <div class="col-lg-6 Product">
                        <div class="form-group">
                            <label>Product Type: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.ProduceTypeID, (IEnumerable<SelectListItem>)ViewBag.ddlProduceType1, "--Select--", new { @class = "form-control common", title = "Select Product Type", id = "ddlProduceType" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.ProduceTypeID)</div>    

                        </div>
                    </div>

                    <div class="col-lg-6 Product">
                        <div class="form-group">
                            <label>Product: <span class="mandatory">*</span></label>
                            @Html.DropDownListFor(x => x.ProductID, (IEnumerable<SelectListItem>)ViewBag.ddlProduct1, "--Select--", new { @class = "form-control common", title = "Select Product", id = "ddlProduct" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.ProductID)</div>    

                        </div>
                    </div>

                            @*<div class="col-lg-6">
                                <div class="form-group">
                                    <label>Unit: <span class="mandatory">*</span></label>
                                    @Html.TextBox("Unit")
                                </div>
                            </div>*@

                    <div class="col-lg-6 Product Asset">
                        <div class="form-group">
                            <label>Quantity: <span class="mandatory">*</span></label>
                            @Html.TextBoxFor(x => x.TotalQuantity, new { @class = "form-control Numeric", @placeholder = "Enter Quantity", title = "Enter Total Quantity eg: 15", @maxlength = 500, @id = "RevenueVillage" })
                            <div id="errMicroPlanName" class="alert-danger1">@Html.ValidationMessageFor(x => x.TotalQuantity)</div>
                        </div>
                    </div>                          


                    <div class="col-lg-6 Product">
                        <label>Auction From Site: <span class="mandatory">*</span></label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.AuctionFromSite, "Yes", new { id = "rbtnAuctionFromSiteYes" })   Yes
                        </label>
                        <label class="radio-inline">
                            @Html.RadioButtonFor(x => x.AuctionFromSite, "No", new { id = "rbtnAuctionFromSiteNo" }) No
                        </label>
                        @*<div class="divider"></div>*@
                    </div> 
                            <div class="col-lg-12"></div>

                            <!-- Btn Groping -->
                            <div class="btn-padd">
                                <div class="col-lg-12" id="btn">
                                    <button id="btn_submit1" value="Submit" name="Command" class="btn btn-success" type="submit">
                                        <i class="fa fa-check"></i> Submit
                                    </button>
                                    <button class="btn btn-warning" type="reset">
                                        <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                                    </button>
                                    <button class="btn btn-danger" value="Cancel" onclick="location.href='@Url.Action("Progressindex", "WorkOrder")'" type="button">
                                        <i class="fa fa-times fa-fw"></i> Cancel
                                    </button>

                                </div>
                            </div>
                            <!-- /.Btn Groping -->

                        </div>
                <!-- /.panel-body -->
                       <!-- /.panel -->

        
}
        <!-- /.col-lg-12 -->
    </div>
</div>
</div></div>
<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/js/validation.js" type="text/javascript"></script>

<script src="@Url.Content("~/Scripts/jquery-1.8.2.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script> 


<script type="text/javascript">
    if ('@ViewData["Message"]' != '') {
        alert('@ViewData["Message"]');
    }
    var RootUrl = '@Url.Content("~/")';

    var educount = 1;
    var castcount = 1;


    $(document).ready(function () {

        //alert(@Model.ID);
        //$('.Product').hide();
        //$('.Asset').hide();
        $('.Producetype').hide();
        //$('#rbtnProduceNA').attr('checked', true);
        $(".Alphanumeric").on("keypress", function (event) { return IsAlphanumeric(event); });
        $(".Numeric").on("keypress", function (event) { return isNumber(event, this); });
        $("#survynotdone").hide();
        $('#ddlProgressStatus').change(function (e) {
            // alert($('#ddlProgressStatus').val());
            $('.Product').hide();
            $('.Asset').hide();
            $('#rbtnProduceNA').attr('checked', true);
            $('.Producetype').hide();
            if ($('#ddlProgressStatus').val() == "Completed")
                $('.Producetype').show();
            else
                $('.Producetype').hide();
        });


        $('#rbtnProduceAsset').on('click', function () {
            //  alert('SHG Clicked');
            $('#rbtnProduceProduct').attr('checked', false);
            $('#rbtnProduceNA').attr('checked', false);
            $('.Product').hide();
            $('.Asset').show();
        });

        $('#rbtnProduceProduct').on('click', function () {
            //  alert('SHG Clicked');
            $('#rbtnProduceAsset').attr('checked', false);
            $('#rbtnProduceNA').attr('checked', false);

            $('.Asset').hide();  $('.Product').show();
        });

        $('#rbtnProduceNA').on('click', function () {
            //  alert('SHG Clicked');
            $('#rbtnProduceAsset').attr('checked', false);
            $('#rbtnProduceProduct').attr('checked', false);
            $('.Product').hide();
            $('.Asset').hide();
        });


        $(".datefield").datepicker({ minDate: new Date(1999, 10 - 1, 25), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });

        if(@Model.ID>0)
        {
            $(".multi").hide();
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
            var ddlSurvey = $("#ddlSurvey option:selected").val();
            // alert(ddlSurvey);

            $("#SurveyDetailTable").empty();
            var totalarea = 0;
            var RowInfo = {
                SurveyId: ddlSurvey
            };
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(RowInfo),
                url: '@Url.Content("~/")' + 'WorkOrder/GetSurveyDetailbyID',
                success: function (data) {
                    $.each(data, function (i, items) {
                        //  totalarea += parseFloat(items.projectArea);
                        //ddlVillage=items.Village_Code;
                        //var id = "'" + items.rowID + "'";
                        $('#hdQuantity').val(items.Quantity);
                        //var bardata = "<tr><td>" + items.SurveyDate + "</td><td>" + items.Latitude + "/" + items.Longitude + "</td><td>" + items.Activity_Name + "</td><td class='Act"+items.ActivityID+"'>" + items.ActivityPercentage + "</td><td>" + items.Area + "</td><td>" + items.Quantity + "</td><td>" + items.EnteredOn + "</td><td><a href= '" + items.PhotoURL + "' target='_blank'> <img src='" + items.PhotoURL + "' title'Click to full view' height='30px'></a> </td></tr>";
                        //$("#SurveyDetailTable").append(bardata);



                        var bardata = "<tr><td>" + items.SurveyDate + "</td><td>" + items.Latitude + "/" + items.Longitude + "</td><td>" + items.Activity_Name + "</td><td class='Act"+ items.ActivityID+"'>" + items.ActivityPercentage + "</td><td>" + items.Activity_Unit + "</td><td>" + items.Area + "</td><td>" + items.Quantity + "</td><td>" + items.EnteredOn + "</td><td><a href= '" + items.PhotoURL + "' target='_blank'> <img src='" + items.PhotoURL + "' title'Click to full view' height='30px'></a> </td></tr>";
                        $("#SurveyDetailTable").append(bardata);
                    })
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
            var ddlsubActivity = $("#ddlSubActivity option:selected").val();
            var ddlActivity = $("#ddlActivity option:selected").val();
            if(!ddlsubActivity){ddlsubActivity=0;}
            $("#MilestoneDetailTable").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectMilestoneByActivitySubActivityID', // we are calling json method
                dataType: 'json',
                data: { WorkOrderID: ddlWorkOrder, ActivityID: ddlActivity, SubActivityID: ddlsubActivity },
                success: function (range) {
                    $("#ddlSubActivity").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        //var bardata = "<tr><td>" + items.MilestoneName + "</td><td>" + items.MilestonePaymentPercentage + "</td><td>" + items.ActivitycompletionPercentage + "</td><td>" + items.isCompleted + "</td><td><input type='checkbox' class='Milestone' class='MilestoneSelected name='MilestoneSelected' id= 'check" + items.rowID + "' value='" + items.rowID + "' enabled='" + items.isCompleted + "' /> </td></tr>";
                        //$("#MilestoneDetailTable").append(bardata);

                        if(items.isCompleted){                          
                            $('#hdQuantity').val(items.Quantity);                           
                            var bardata = "<tr><td>" + items.MilestoneName + "</td><td>" + items.MilestonePaymentPercentage + "</td><td>" + items.ActivitycompletionPercentage + "</td><td>" + items.Unit + "</td><td>" + items.isCompleted + "</td>";                      
                            bardata = bardata+ "<td><input type='checkbox' class='MilestoneSelected'  name='MilestoneSelected' id= 'check" + items.rowID + "' value='" + items.ActivitycompletionPercentage + "' enabled='" + items.isCompleted + "' checked='checked' /></td><td style='display:none'><input type='hidden' id='hdMilestoneId' name='hdMilestoneId' value='"+items.rowID+"' /> </td></tr>";
                        }
                        else{ 
                            $('#hdQuantity').val(items.Quantity);                          
                            var bardata = "<tr><td>" + items.MilestoneName + "</td><td>" + items.MilestonePaymentPercentage + "</td><td>" + items.ActivitycompletionPercentage + "</td><td>" + items.Unit + "</td><td>" + items.isCompleted + "</td><td></td></tr>";                                                
                        }

                        $("#MilestoneDetailTable").append(bardata);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });

        }
        if(@Model.ProductID>0)
        {
            $('.Asset').hide();  $('.Product').show();
            $('#rbtnProduceProduct').attr('checked', true);
            $('.Producetype').show();
        }
        else if(@Model.AssetID>0)
        {
            $('.Product').hide();
            $('.Asset').show();
            $('#rbtnProduceAsset').attr('checked', true);
            $('.Producetype').show();
        }
        else
        {  $('.Product').hide();
            $('.Asset').hide();
            $('#rbtnProduceNA').attr('checked', true);
            $('.Producetype').hide();
        }

        $("#ddlRange").bind("change", function () {
            $('#ddlVillName').empty();
            $("#ddlVillName").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
            var values = {
                RangeCode: $("#ddlRange option:selected").val()
            };


            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                url: RootUrl + 'FdmBudgetEstimation/GetVillageNamebyRange',
                data: JSON.stringify(values),
                success: function (data) {
                    $.each(data, function (i, items) {
                        $("#ddlVillName").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                    });
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });
        });
        $('#division').change(function (e) {
            $('#ddlWorkOrder').empty();
            $("#ddlModel").empty();
            $("#ddlActivity").empty();
            $("#ddlSubActivity").empty();
            var ddldiv = $("#division option:selected").val();
            // alert(ddldiv);
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectWorkOrderByDivisionCode', // we are calling json method
                dataType: 'json',
                data: { Division: ddldiv },
                success: function (range) {
                    $("#ddlWorkOrder").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlWorkOrder").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        });

        $('#district').change(function (e) {


            var ddldist = $("#district option:selected").val();
            //   alert(ddldist);
            //  $('#blockname').val(ddldist);
            $("#blockname").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MicroPlan/GetBlockName', // we are calling json method
                dataType: 'json',
                data: { District: ddldist },
                success: function (range) {
                    //   $("#blockname").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#blockname").append('<option value="' + items.Value + '">  ' +   items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });

        });

        $('#blockname').change(function (e) {
            var ddldist = $("#district option:selected").val();
            var ddlblockname = $("#blockname option:selected").val();
            $("#ddlGPName").empty();
            //$('#blockname').val(ddldist);

            $.ajax({
                type: 'POST',
                url: RootUrl + 'MicroPlan/GetGramPName', // we are calling json method
                dataType: 'json',
                data: { District: ddldist, BlockName: ddlblockname },
                success: function (range) {
                    //  $("#ddlGPName").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlGPName").append('<option value="' + items.Value + '">    ' +    items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });

        });

        $('#ddlGPName').change(function (e) {
            var ddldist = $("#district option:selected").val();
            var ddlblockname = $("#blockname option:selected").val();
            var ddlGPName = $("#ddlGPName option:selected").val();
            $("#ddlVillName").empty();
            //$('#blockname').val(ddldist);

            $.ajax({
                type: 'POST',
                url: RootUrl + 'MicroPlan/GetVillageName', // we are calling json method
                dataType: 'json',
                data: { District: ddldist, BlockName: ddlblockname, GPName: ddlGPName },
                success: function (range) {
                    //  $("#ddlVillName").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlVillName").append('<option value="' + items.Value + '">    ' +    items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });

        });
        $('#ddlProduceType').change(function (e) {
            var ddlProduceType = $("#ddlProduceType option:selected").val();
            $("#ddlProduct").empty();
            //$('#blockname').val(ddldist);
            //  alert(ddlProduceType);
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectProductByProduceType', // we are calling json method
                dataType: 'json',
                data: { ProduceTypeID: ddlProduceType },
                success: function (range) {
                    // $("#ddlProduct").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlProduct").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });

        });
        $('#ddlAssetType').change(function (e) {
            var ddlasset = $("#ddlAssetType option:selected").val();
            $("#ddlAsset").empty();
            //$('#blockname').val(ddldist);
            //  alert(ddlProduceType);
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectAssetbyCategoryType', // we are calling json method
                dataType: 'json',
                data: { AssetCategoryID: ddlasset },
                success: function (range) {
                    $("#ddlAsset").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlAsset").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });

        });

        //$('#ddlVillName').change(function (e) {
        //    var Div_Code ='';
        //    var Dist_Code =''
        //    var GP_Code='';
        //    var block_Code='';
        //    $("#ddlWorkOrder option:selected").empty();
        //    var villName = '';
        //    var ddlVillage = $("#ddlVillName option:selected").val();
        //    if (ddlVillage > 0)
        //        villName =  $("#ddlVillName option:selected").text().trim();
        //    //  var div_code ='';
        //    $.ajax({
        //        type: 'POST',
        //        // contentType: 'application/json; charset=utf-8',
        //        url: RootUrl + 'MicroPlan/GetGetHierarchybyVillageCode', // we are calling json method
        //        dataType: 'json',
        //        data: { Vill_Code: ddlVillage },
        //        success: function (data) {
        //            Div_Code = data.DIV_CODE;
        //            Dist_Code = data.DIST_CODE;
        //            GP_Code = data.GP_CODE;
        //            block_Code = data.BLK_CODE;
        //            $('#hdnDivCode').val(data.DIV_CODE);
        //            FillWorkOrder(Div_Code);
        //            ////});
        //        },
        //        error: function (ex) {
        //            alert('Failed to retrieve states.' + ex);
        //        }

        //    });
        //});


        $('#ddlVillName').change(function (e) {
                    
            var Vill_Code = $("#ddlVillName option:selected").val();
            if (!Vill_Code){ Vill_Code=0;}            
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectWorkOrderByVillageCode', // we are calling json method
                dataType: 'json',
                data: { Vill_Code: Vill_Code },
                success: function (range) {
                    $("#ddlWorkOrder").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlWorkOrder").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });                                 
        });





        $('#ddlMicroPlan').change(function (e) {
            var ddlMicroPlan = $("#ddlMicroPlan option:selected").val();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectWorkOrderByMicroPlanID', // we are calling json method
                dataType: 'json',
                data: { MicroPlanID: ddlMicroPlan },
                success: function (range) {
                    $("#ddlWorkOrder").append('<option value=0>--Select--</option>');

                    $.each(range, function (i, items) {
                        $("#ddlWorkOrder").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        });

        $('#ddlWorkOrder').change(function (e) {
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();

            $("#ddlSurvey").empty();
            $("#ddlActivity").empty();
            $("#ddlSubActivity").empty();
            //$('#blockname').val(ddldist);

            ////$.ajax({
            ////    type: 'POST',
            ////    url: RootUrl + 'WorkOrder/SelectModelByWorkOrderID', // we are calling json method
            ////    dataType: 'json',
            ////    data: { WorkOrderID: ddlWorkOrder},
            ////    success: function (range) {
            ////        $("#ddlModel").append('<option value=0>  --Select--</option>');

            ////        $.each(range, function (i, items) {
            ////            $("#ddlModel").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
            ////        });
            ////    },
            ////    error: function (ex) {
            ////        alert('Failed to retrieve states.' + ex);
            ////    }

            ////});
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectSurveyByWorkOrderID', // we are calling json method
                dataType: 'json',
                data: { WorkOrderID: ddlWorkOrder },
                success: function (range) {
                    $("#ddlSurvey").hide();
                    $("#survynotdone").show();
                    $("#ddlSurvey").append('<option value=0>  --Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlSurvey").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                        $("#ddlSurvey").show();
                        $("#survynotdone").hide();
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        });
        $('#ddlModel').change(function (e) {
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
            var ddlModel = $("#ddlModel option:selected").val();
            $("#ddlActivity").empty();
            $("#ddlSubActivity").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectActivityByWorkOrderID', // we are calling json method
                dataType: 'json',
                data: { WorkOrderID: ddlWorkOrder, ModelID: ddlModel },
                success: function (range) {
                    //  $("#ddlActivity").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlActivity").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        });
        $('#ddlSurvey').change(function (e) {
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
            var ddlSurvey = $("#ddlSurvey option:selected").val();
            // alert(ddlSurvey);
            $("#ddlActivity").empty();
            $("#ddlSubActivity").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectActivityBySurveyID', // we are calling json method
                dataType: 'json',
                data: { WorkOrderID: ddlWorkOrder, SurveyID: ddlSurvey },
                success: function (range) {
                    $("#ddlActivity").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlActivity").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
            $("#SurveyDetailTable").empty();
            var totalarea = 0;
            var RowInfo = {
                SurveyId: ddlSurvey
            };
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(RowInfo),
                url: '@Url.Content("~/")' + 'WorkOrder/GetSurveyDetailbyID',
                success: function (data) {
                    $.each(data, function (i, items) {
                        //  totalarea += parseFloat(items.projectArea);
                        //ddlVillage=items.Village_Code;
                        //var id = "'" + items.rowID + "'";
                       // $('#hdQuantity').val(items.Quantity);
                        var bardata = "<tr><td>" + items.SurveyDate + "</td><td>" + items.Latitude + "/" + items.Longitude + "</td><td>" + items.Activity_Name + "</td><td class='Act"+ items.ActivityID+"'>" + items.ActivityPercentage + "</td><td>" + items.Activity_Unit + "</td><td>" + items.Area + "</td><td>" + items.Quantity + "</td><td>" + items.EnteredOn + "</td><td><a href= '" + items.PhotoURL + "' target='_blank'> <img src='" + items.PhotoURL + "' title'Click to full view' height='30px'></a> </td></tr>";
                        $("#SurveyDetailTable").append(bardata);
                       
                    })
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });
        });
        // var ddlActivity = $("#ddlActivity option:selected").val();
        $('#ddlActivity').change(function (e) {
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
            var ddlActivity = $("#ddlActivity option:selected").val();
            $("#ddlSubActivity").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectSubActivityByActivityID', // we are calling json method
                dataType: 'json',
                data: { ActivityID: ddlActivity,WorkOrder:ddlWorkOrder },
                success: function (range) {
                    $("#ddlSubActivity").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                        $("#ddlSubActivity").append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
            $('.Product').hide();
            $('.Asset').hide();$('#rbtnProduceNA').attr('checked', true);
            // alert($('.Act'+ddlActivity).text());
            if($('.Act'+ddlActivity).text()=='100')
                $('.Producetype').show();
            else
                $('.Producetype').hide();
        });

        //$('#ddlActivity').change(function (e) {
        //    var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
        //    var ddlsubActivity = $("#ddlSubActivity option:selected").val();
        //    var ddlActivity = $("#ddlActivity option:selected").val();
        //    if(!ddlsubActivity){ddlsubActivity=0;}
        //    $("#MilestoneDetailTable").empty();
        //    $.ajax({
        //        type: 'POST',
        //        url: RootUrl + 'WorkOrder/SelectMilestoneByActivitySubActivityID', // we are calling json method
        //        dataType: 'json',
        //        data: { WorkOrderID: ddlWorkOrder, ActivityID: ddlActivity, SubActivityID: ddlsubActivity },
        //        success: function (range) {
        //            //  $("#ddlSubActivity").append('<option value=0>--Select--</option>');
        //            $.each(range, function (i, items) {
        //                //alert(items.isCompleted);
        //                var bardata = "<tr><td style='border:1px'>" + items.MilestoneName + "</td><td style='border:1px'>" + items.MilestonePaymentPercentage + "</td><td style='border:1px'>" + items.ActivitycompletionPercentage + "</td><td style='border:1px'>" + items.isCompleted + "</td>";
        //                //if(items.isCompleted=="0")
        //                //{}
        //                bardata = bardata+ "<td><input type='checkbox' class='MilestoneSelected'  name='MilestoneSelected' id= 'check" + items.rowID + "' value='" + items.ActivitycompletionPercentage + "' enabled='" + items.isCompleted + "' /> </td></tr>";
        //                // else
        //                //{bardata =bardata+"<td style='border:1px'></td></tr>";}
        //                $("#MilestoneDetailTable").append(bardata);
        //            });
        //        },
        //        error: function (ex) {
        //            alert('Failed to retrieve states.' + ex);
        //        }
        //    });                       
        //    $("#AVGBSRPerUnit").val(0);
        //    $("#AVGBSRPerUnitMat").val(0);
        //    $("#CircleBSRPerUnit").val(0);
        //    $("#CircleBSRPerUnitMat").val(0);
        //    $.ajax({
        //        type: 'POST',
        //        url: RootUrl + 'WorkOrder/Select_Activity_CircleBSRAmount', // we are calling json method
        //        dataType: 'json',
        //        data: { ActivityID: ddlActivity ,Div_Code:$('#hdnDivCode').val()},
        //        success: function (data) {
        //            $("#AVGBSRPerUnit").val(data.split('#')[0]);
        //            $("#AVGBSRPerUnitMat").val(data.split('#')[1]);
        //            $("#CircleBSRPerUnit").val(data.split('#')[2]);
        //            $("#CircleBSRPerUnitMat").val(data.split('#')[3]);

        //            var bsrperunit=data.split('#')[2];
        //            var bsrpermat=data.split('#')[3];
        //            var totallabourcost= parseInt(bsrperunit) * parseInt($('#hdQuantity').val());
        //            var totalmaterialcost=parseInt(bsrpermat) * parseInt($('#hdQuantity').val());                 
        //            $('#TotalCostlabour').val(totallabourcost);
        //            $('#TotalCostMaterial').val(totalmaterialcost);
        //        },
        //        error: function (ex) {
        //            alert('No division wise BSR Available.' + ex);
        //        }
        //    });                    
        //});
        $('#ddlSubActivity').change(function (e) {
            var ddlWorkOrder = $("#ddlWorkOrder option:selected").val();
            var ddlsubActivity = $("#ddlSubActivity option:selected").val();
            var ddlActivity = $("#ddlActivity option:selected").val();
            if(!ddlsubActivity){ddlsubActivity=0;}
            $("#MilestoneDetailTable").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectMilestoneByActivitySubActivityID', // we are calling json method
                dataType: 'json',
                data: { WorkOrderID: ddlWorkOrder, ActivityID: ddlActivity, SubActivityID: ddlsubActivity },
                success: function (range) {
                    // $("#ddlSubActivity").append('<option value=0>--Select--</option>');
                    $.each(range, function (i, items) {
                       
                        if(items.isCompleted){                          
                            $('#hdQuantity').val(items.Quantity);                           
                            var bardata = "<tr><td>" + items.MilestoneName + "</td><td>" + items.MilestonePaymentPercentage + "</td><td>" + items.ActivitycompletionPercentage + "</td><td>" + items.Unit + "</td><td>" + items.isCompleted + "</td>";                      
                            bardata = bardata+ "<td><input type='checkbox' class='MilestoneSelected'  name='MilestoneSelected' id= 'check" + items.rowID + "' value='" + items.ActivitycompletionPercentage + "' enabled='" + items.isCompleted + "' checked='checked' /></td><td style='display:none'><input type='hidden' id='hdMilestoneId' name='hdMilestoneId' value='"+items.rowID+"' /> </td></tr>";
                        }
                        else{ 
                            $('#hdQuantity').val(items.Quantity);                          
                            var bardata = "<tr><td>" + items.MilestoneName + "</td><td>" + items.MilestonePaymentPercentage + "</td><td>" + items.ActivitycompletionPercentage + "</td><td>" + items.Unit + "</td><td>" + items.isCompleted + "</td><td></td></tr>";                                                
                        }

                        $("#MilestoneDetailTable").append(bardata);
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
            if(ddlsubActivity>0){ 
                $("#AVGBSRPerUnit").val(0);
                $("#AVGBSRPerUnitMat").val(0);
                $("#CircleBSRPerUnit").val(0);
                $("#CircleBSRPerUnitMat").val(0);
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'WorkOrder/Select_SubActivity_CircleBSRAmount', // we are calling json method
                    dataType: 'json',
                    data: { SubActivityID: ddlsubActivity ,Range_Code:$('#ddlRange').val()},
                    success: function (data) {
                        $("#AVGBSRPerUnit").val(data.split('#')[0]);
                        $("#AVGBSRPerUnitMat").val(data.split('#')[1]);  
                        $("#CircleBSRPerUnit").val(data.split('#')[2]);
                        $("#CircleBSRPerUnitMat").val(data.split('#')[3]); 
                        
                        var bsrperunit=data.split('#')[2];
                        var bsrpermat=data.split('#')[3];
                        var totallabourcost= parseInt(bsrperunit) * parseInt($('#hdQuantity').val());
                        var totalmaterialcost=parseInt(bsrpermat) * parseInt($('#hdQuantity').val());

                     
                        $('#TotalCostlabour').val(totallabourcost);
                        $('#TotalCostMaterial').val(totalmaterialcost);
                    },
                    error: function (ex) {
                        alert('No division wise BSR Available.' + ex);
                    }

                });
            }
            else{
                $("#AVGBSRPerUnit").val(0);
                $("#AVGBSRPerUnitMat").val(0);
                $("#CircleBSRPerUnit").val(0);
                $("#CircleBSRPerUnitMat").val(0);
                $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/Select_Activity_CircleBSRAmount', // we are calling json method
                dataType: 'json',
                data: { ActivityID: ddlActivity ,Range_Code:$('#ddlRange').val()},
                success: function (data) {
                    $("#AVGBSRPerUnit").val(data.split('#')[0]);
                    $("#AVGBSRPerUnitMat").val(data.split('#')[1]);
                    $("#CircleBSRPerUnit").val(data.split('#')[2]);
                    $("#CircleBSRPerUnitMat").val(data.split('#')[3]);

                    var bsrperunit=data.split('#')[2];
                    var bsrpermat=data.split('#')[3];
                    var totallabourcost= parseInt(bsrperunit) * parseInt($('#hdQuantity').val());
                    var totalmaterialcost=parseInt(bsrpermat) * parseInt($('#hdQuantity').val());

                 
                    $('#TotalCostlabour').val(totallabourcost);
                    $('#TotalCostMaterial').val(totalmaterialcost);


                },
                error: function (ex) {
                    alert('No division wise BSR Available.' + ex);
                }

                });}                     
        });
        $(document).on('click','.MilestoneSelected', function(){

            //alert( $(this).is(':checked')+" "+ $(this).attr("value"));

            //$(this).attr('checked', true);
            var checkprop = $(this).is(':checked');
            // alert(checkprop);
            //$('.MilestoneSelected').attr('checked', false);
            if($(this).is(':checked'))
            {
                // $('input:checkbox').removeAttr('checked');
                //  $('.MilestoneSelected').attr('checked', false);
                $(this).attr('checked', true);
                if($(this).attr("value") == '100')
                    $('.Producetype').show();
                //else
                //    $('.Producetype').hide();
            }
            else{
                if($(this).attr("value") == '100')
                    $('.Producetype').hide();
                //  $('input:checkbox').removeAttr('checked');
                //$('.Producetype').hide();
            }

            //alert('check'+ obj.val());
            $('.Product').hide();
            $('.Asset').hide();
            $('#rbtnProduceNA').attr('checked', true);
            return;
        });
    });
    function reload() {
        var r = confirm("Do you want to leave page!");
        if (r) {
            window.location = RootUrl + "ForesterAction/ForesterAction";
        }
        else {
            //do nothing
        }

    }

    function checkmilestone(str,objID) {
        alert('check'+ ' '+$("#"+objID).is(':checked')+' '+ $("#"+objID).attr("value"));
        var checkprop = $("#"+objID).is(':checked');
        $('.MilestoneSelected').attr('checked', false);
        if(checkprop='true')
        {
            $('#'+objID).attr('checked', true);
            if(str == '100')
                $('.Producetype').show();
            else
                $('.Producetype').hide();
        }
        //$('input:checkbox').removeAttr('checked');
        //alert('check'+ obj.val());
        $('.Product').hide();
        $('.Asset').hide();
        $('#rbtnProduceNA').attr('checked', true);

    }
    function FillWorkOrder(Div_Code)
    {
        $.ajax({
            type: 'POST',
            url: RootUrl + 'WorkOrder/SelectWorkOrderByDivisionCode', // we are calling json method
            dataType: 'json',
            data: { Division: Div_Code },
            success: function (range) {
                $("#ddlWorkOrder").append('<option value=0>--Select--</option>');
                $.each(range, function (i, items) {
                    $("#ddlWorkOrder").append('<option value="' + items.Value + '">' +
                     items.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }

        });}
</script>