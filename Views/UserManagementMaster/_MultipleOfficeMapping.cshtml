
@model FMDSS.Models.Master.OneClickAccessRights

<div class="row">
    <div class="col-lg-12">
        @using (Html.BeginForm("SubmitMultipleOffice", "UserManagementMaster", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
        <div class="col-lg-12">

            <div class="panel panel-default" id="main">
                <div class="panel-body">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <h1>Mapping With Multiple Office</h1>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.DropDownListFor(model => Model.OffcLevel, new List<SelectListItem>
                            { new SelectListItem { Text = "HQ Level", Value = "ST"},
                            new SelectListItem { Text = "Region Level", Value = "REG"},
                            new SelectListItem { Text = "Circle Level", Value = "CIR"},
                            new SelectListItem { Text = "Division Level", Value = "DIV"},
                            new SelectListItem { Text = "Range Level", Value = "RNG"},
                            }, "--Select Office Level--", new { @class = "form-control common", id = "OffcLevel" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.DropDownListFor(model => Model.ForestBoundaries, (IEnumerable<SelectListItem>)ViewBag.lstForestBoundaries, "--Select Boundary--", new { @class = "form-control common", id = "ForestBoundaries" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                @Html.DropDownListFor(model => Model.OfficeID, (IEnumerable<SelectListItem>)ViewBag.lstOfficeID, "--Select Office--", new { @class = "form-control common", id = "ForestOffices" })
                                <div id="errForestOffices" style="display:none" class="alert-danger1">Office is Required.</div>  
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="form-group">
                                <label>Mapping Role For Page Access : <span class="mandatory">*</span></label>
                                @Html.ListBoxFor(model => model.RoleIds, Model.ListRoleIds, new { @class = "form-control common", id = "RoleIdIDlistbox", @style = "height:500px;" })
                                <div id="errRoleIdIDlistbox" style="display:none" class="alert-danger1">Role is Required.</div>
                            </div>
                        </div>

                        <div id="btn" class="col-lg-12">

                            <button type="submit" class="btn btn-success" name="Command" value="Save" id="btn_submit1">
                                <i class="fa fa-check"></i> Submit
                            </button>
                            <button type="button" class="btn btn-warning" id="btn_reset">
                                <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                            </button>
                        </div>

                    </div>
            </div>

        </div>
         }
    </div>
</div>
<script>
    var RootUrl = '@Url.Content("~/")';

    $(document).ready(function () {

        $("#OffcLevel").change(function () {
            debugger;

            $('#ForestBoundaries').empty();
            if ($("#OffcLevel").val() == 'ST') {
                $("#ForestBoundaries").append('<option value=0>--Select Boundary--</option>');
                $("#ForestBoundaries").append('<option value=ST001>State HQ</option>');
            }
            else {
                $("#ForestBoundaries").append('<option value=0>--Select Boundary--</option>');
                $('#ForestOffices').empty();
                $("#ForestOffices").append('<option value=0>--Select Office--</option>');

                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'UserManagementMaster/GetForestBoundaries',
                    dataType: 'json',
                    data: { OfficeLevel: $("#OffcLevel").val() },
                    success: function (states) {
                        $.each(states, function (i, items) {
                            $("#ForestBoundaries").append('<option value="' + items.Value + '">' +
                             items.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
            return false;
        })

        $("#ForestBoundaries").change(function () {
            $('#ForestOffices').empty();
            $("#ForestOffices").append('<option value=0 >--Select Office--</option>');
            $.ajax({
                type: 'POST',
                url: RootUrl + 'UserManagementMaster/GetForestOffices',
                dataType: 'json',
                data: { ForestCode: $("#ForestBoundaries").val() },
                success: function (states) {
                    $.each(states, function (i, items) {
                        $("#ForestOffices").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });


        $("#DESIGNATIONs").change(function () {

            $('#ReportingTos').empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'UserManagementMaster/GetREPORTINGTOData',
                dataType: 'json',
                data: { DESIGNATION: $("#DESIGNATIONs").val() },
                success: function (Designations) {
                    $("#ReportingTos").append('<option value="0">--Select--</option>');

                    $.each(Designations, function (i, items) {


                        $("#ReportingTos").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $("dataTables-example").DataTable();

        $('#dataTables-example').DataTable({
            responsive: true
        });
        $('#btn_submit1').click(function (e) {
            if ($('#OLDSSOID').val() == '') {
                $("#errOLDSSOID").css("display", "block");
                $('#errOLDSSOID').focus();
                return false;
            }
            else {
                $("#errOLDSSOID").css("display", "none");
            }

            if ($('#NEWSSOID').val() == '') {
                $("#errNEWSSOID").css("display", "block");
                $('#errNEWSSOID').focus();
                return false;
            }
            else {
                $("#errNEWSSOID").css("display", "none");
            }
            if ($('option:selected', $('#DESIGNATIONs')).index() == 0) {
                $("#errDESIGNATIONs").css("display", "block");
                $('#errDESIGNATIONs').focus();
                return false;
            }
            else {
                $("#errDESIGNATIONs").css("display", "none");
            }
            if ($('option:selected', $('#ReportingTos')).index() == 0) {
                $("#errReportingTos").css("display", "block");
                $('#errReportingTos').focus();
                return false;
            }
            else {
                $("#errReportingTos").css("display", "none");
            }

            if ($('option:selected', $('#ForestOffices')).index() == 0) {
                $("#errForestOffices").css("display", "block");
                $('#errForestOffices').focus();
                return false;
            }
            else {
                $("#errForestOffices").css("display", "none");
            }
        });
        $('#btn_GetSSOID').click(function (e) {
            $.ajax({
                type: 'POST',
                url: RootUrl + 'UserManagementMaster/GetOldSSOID', // we are calling json method designation
                dataType: 'json',
                data: { OldSSOID: $('#OLDSSOID').val() },
                success: function (result) {

                    if (result.ssoid == "0") {
                        $("#main").css("display", "none");
                    }
                    else {
                        $("#DESIGNATIONs").val(result.designation);

                        $('#ReportingTos').empty();
                        $.ajax({
                            type: 'POST',
                            url: RootUrl + 'UserManagementMaster/GetREPORTINGTOData',
                            dataType: 'json',
                            data: { DESIGNATION: $("#DESIGNATIONs").val() },
                            success: function (Designations) {
                                $("#ReportingTos").append('<option value="0">--Select--</option>');

                                $.each(Designations, function (i, items) {
                                    $("#ReportingTos").append('<option value="' + items.Value + '">' +
                                     items.Text + '</option>');
                                });
                            },
                            error: function (ex) {
                                alert('Failed to retrieve states.' + ex);
                            }
                        });

                        $('#main').css("display", "block");
                    }

                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        });
    });
    function CallData() {
        $.ajax({
            type: 'GET',
            url: "../UserManagementMaster/AddNewOffice?Boundary=" + $('#ForestBoundaries').val() + "&BoundaryName=" + $("#ForestBoundaries :selected").text(),
            dataType: 'html',
            success: function (data) {
                $('#modelPlace').html(data);
            },
            error: function (ex) {
                alert(ex.error);
            }
        });

    };
</script>