@model FMDSS.Models.ElephantMovement



@using (Html.BeginForm("ElephantAppReviewApprover", "Elephant", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">
                &times;
            </button>
            <h4 class="modal-title">
                Elephant Movement ( @ViewBag.CurrentStatusName )
            </h4>
        </div>

        <div class="modal-body">
            <div class="col-lg-12">
                <table class="table table-striped table-bordered table-hover table-responsive" id="dataTables-example">
                    <tbody>
                        <tr>
                            <td> RequestID </td>
                            <td>
                                @Html.DisplayFor(model => model.RequestID)
                            </td>
                        </tr>
                        <tr>
                            <td> Elephant Name </td>
                            <td>
                                @Html.DisplayFor(model => model.ElephantName)
                            </td>
                        </tr>

                        <tr>
                            <td> Transport Type </td>
                            <td>
                                @Html.DisplayFor(model => model.TransportType)
                            </td>
                        </tr>
                        <tr>
                            <td> Travel Duration </td>
                            <td>
                                @Html.DisplayFor(model => model.ReturnFromDate)
                            </td>
                        </tr>
                        <tr>
                            <td> Return Duration </td>
                            <td>
                                @Html.DisplayFor(model => model.ReturnToDate)
                            </td>
                        </tr>
                        <tr>
                            <td> Movement  From </td>
                            <td>
                                @Html.DisplayFor(model => model.MovementFrom)
                            </td>
                        </tr>
                        <tr>
                            <td> Movement To </td>
                            <td>
                                @Html.DisplayFor(model => model.MovementTo)
                            </td>
                        </tr>
                        <tr>
                            <td> Medical Certificate Number </td>
                            <td>
                                @Html.DisplayFor(model => model.MedicalCertificateNumber)
                            </td>
                        </tr>

                    </tbody>
                </table>
            </div>
            <input type="hidden" id="otherstateTPNo" value="@ViewBag.OtherStateTPNumber" />
            <input type="hidden" id="otherstateTPNo" value="@ViewBag.OtherStateTPNumber" />

            @Html.HiddenFor(model => model.RequestID)


            @if (ViewBag.OtherStateTPNumber == "True")
            {
                <div class="col-lg-4 un-bold">
                    <div class="form-group">
                        <label>Other State Noc Date<span class="mandatory">*</span></label>
                        @Html.TextBoxFor(model => model.TPDate, new { @class = "form-control common", id = "TPDate" })

                        <div id="errTPDate" style="display:none" class="alert-danger1">Other State Noc Date is Required.</div>
                    </div>
                </div>


                <div class="col-lg-4 un-bold">
                    <div class="form-group">

                        <label>Other State Noc Number<span class="mandatory">*</span></label>
                        @Html.TextBoxFor(model => model.OtherStateTPNumber, new { @class = "form-control common", id = "OtherStateTPNumber" })
                        <div id="errOtherStateTPNumber" style="display:none" class="alert-danger1">Other State Noc Number is Required.</div>
                    </div>
                </div>
                <div class="col-lg-4 un-bold">
                    <div class="form-group">
                        <label>@Html.LabelFor(model => model.OtherStateContactNo) <span class="mandatory">*</span></label>
                        @Html.TextBoxFor(model => model.OtherStateContactNo, new { @class = "form-control common digit", id = "OtherStateContactNo", @maxlength = 10 })
                        <div id="errOtherStateContactNo" style="display:none" class="alert-danger1">Other State Contact No is Required.</div>
                    </div>
                </div>

                <div class="col-lg-6 un-bold">
                    <div class="form-group">
                        <label>@Html.LabelFor(model => model.OtherStateNocDoc) <span class="mandatory">*</span></label>
                        @Html.TextBoxFor(model => model.OtherStateNocDoc, new { Type = "File", @class = "form-control common", @id = "OtherStateNocDoc", name = "OtherStateNocDoc" })
                        <div id="errOtherStateNocDoc" style="display:none" class="alert-danger1">Other State Noc Doc is Required.</div>
                    </div>
                </div>

                <div class="col-lg-6 un-bold">
                    <div class="form-group">
                        <label>@Html.LabelFor(model => model.RajasthanAreaDCF) <span class="mandatory">*</span></label>
                        @Html.DropDownListFor(model => model.RajasthanAreaDCF, Model.ListRajasthanAreaDCF, new { @class = "form-control common", @id = "RajasthanAreaDCF", })
                        <div id="errRajasthanAreaDCF" style="display:none" class="alert-danger1">Area DCF Officer is Required.</div>
                    </div>
                </div>
            }

            <div class="col-lg-6 un-bold">
                <div class="form-group">
                    <label>@Html.LabelFor(model => model.Comment) <span class="mandatory">*</span></label>
                    @Html.TextAreaFor(model => model.Comment, new { @class = "form-control common", @id = "Comment", name = "Comment" })
                    <div id="errComment" style="display:none" class="alert-danger1">Comment is Required.</div>
                </div>
            </div>
            <div class="col-lg-6 un-bold" style="display:none" id="RejectedReasonID">
                <div class="form-group">
                    <label>Rejected Reason:(You can select multiple by Ctrl+Select)</label>
                    @Html.ListBoxFor(model => model.RejectedReason, Model.ListRejectedReason, new { @class = "RejectedReason", @id = "RejectedReason", })
                    <div id="errRejectedReason" style="display:none" class="alert-danger1">Rejected Reason is Required.</div>
                </div>
            </div>


        </div>

        <div class="modal-footer" style="clear:both">
            <div id="btn" class="col-lg-12">
                <button type="submit" class="btn btn-success" name="Command" value="@ViewBag.CurrentStatusID" id="btn_submit1">
                    @ViewBag.CurrentStatusName
                </button>
                <button type="submit" id="btn_Reject" name="Command" value="3" class="btn btn-danger">
                    Reject
                </button>

                <button type="button" id="btn_cancel" name="Command" value="Cancel" class="btn btn-danger" data-dismiss="modal">
                    Close
                </button>
            </div>
        </div>

    </div>
}

<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/Common.js"></script>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />


<script type="text/javascript">
    $(document).ready(function () {
        $(".digit").keypress(function (e) {
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                return false;
            }
        });

        // date validation ========================================================================
        var currentYear = (new Date).getFullYear();

        var Range = '2008:' + (currentYear + 1)
        $("#TPDate").datepicker({ yearRange: Range, dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
        $(document).on('keypress', 'TPDate', function (event) {

            event.preventDefault();
            return false;

        });

        //$('#OtherStateContactNo').keypress(function (event) {
        //    return isNumber(event, this)
        //});

        $('#btn_submit1').click(function (e) {
            if ($('#otherstateTPNo').val().trim() == "True") {


                if ($('#TPDate').val().trim() == "") {
                    $('#errTPDate').css("display", "block");
                    $('#errTPDate').focus();
                    return false;
                }
                else {
                    $('#errTPDate').css("display", "none");
                }

                if ($('#OtherStateTPNumber').val().trim() == "") {
                    $('#errOtherStateTPNumber').css("display", "block");
                    $('#errOtherStateTPNumber').focus();
                    return false;
                }
                else {
                    $('#errOtherStateTPNumber').css("display", "none");
                }

                if ($('#OtherStateContactNo').val().trim() == "") {
                    $('#errOtherStateContactNo').css("display", "block");
                    $('#errOtherStateContactNo').focus();
                    return false;
                }
                else {
                    $('#errOtherStateContactNo').css("display", "none");
                }

                if ($('#OtherStateNocDoc').val().trim() == "") {
                    $('#errOtherStateNocDoc').css("display", "block");
                    $('#errOtherStateNocDoc').focus();
                    return false;
                }
                else {
                    $('#errOtherStateNocDoc').css("display", "none");
                }

                if ($('option:selected', $('#RajasthanAreaDCF')).index() == 0) {
                    $('#errRajasthanAreaDCF').css("display", "block");
                    $('#errRajasthanAreaDCF').focus();
                    return false;
                }
                else {
                    $('#errRajasthanAreaDCF').css("display", "none");
                }


            }

            if ($('#Comment').val().trim() == "") {
                $('#errComment').css("display", "block");
                $('#errComment').focus();
                return false;
            }
            else {
                $('#errComment').css("display", "none");
            }

        });

        $("#OtherStateNocDoc").change(function (e) {
            var iSize = parseFloat($("#OtherStateNocDoc")[0].files[0].size / 1024).toFixed(2);
            if (iSize > 100) {
                $('#OtherStateNocDoc').val('');
                $('#errOtherStateNocDoc').show();
                $('#errOtherStateNocDoc').html("</br>Upload ID should not be larger than 100 KB!" + "<i class='fa fa-times fa-fw' style='float: right;padding: 2px;'></i>");
                $('#OtherStateNocDoc').focus();
                return false;
            }
            var file = $("#OtherStateNocDoc").val();
            var exts = ['jpeg', 'jpg', 'pdf', 'png', 'gif'];
            if (file) {

                var get_ext = file.split('.');

                get_ext = get_ext.reverse();


                if ($.inArray(get_ext[0].toLowerCase(), exts) == -1) {
                    $('#OtherStateNocDoc').val('');
                    $('#errOtherStateNocDoc').show();
                    $('#errOtherStateNocDoc').html("Please upload only jpeg or jpg or pdf or png or gif file format in OtherStateNocDoc DOC Field !" + "<i class='fa fa-times fa-fw' style='float: right;padding: 2px;'></i>");
                    $('#OtherStateNocDoc').focus();
                    return false;
                } else {
                    $('#errOtherStateNocDoc').hide();
                }
            }
            else { $('#errOtherStateNocDoc').hide(); }

        });

        $('#btn_Reject').click(function (e) {

            if ($('#RejectedReasonID').css('display') == 'none') {
                $('#RejectedReasonID').css("display", "block");
                return false;
            }


            if ($('#Comment').val().trim() == "") {
                $('#errComment').css("display", "block");
                $('#errComment').focus();
                return false;
            }
            else {
                $('#errComment').css("display", "none");
            }



            if ($('option:selected', $('#RejectedReason')).length == 0) {

                $('#errRejectedReason').css("display", "block");
                $('#errRejectedReason').focus();
                return false;
            }
            else {
                $('#errRejectedReason').css("display", "none");
            }

        });


    });


</script>
