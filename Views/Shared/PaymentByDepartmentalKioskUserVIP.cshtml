@{
    ViewBag.Title = "PaymentByDepartmentalKioskUserDetails";


    if (HttpContext.Current.Session["User"] != null)
    {
        Layout = null;
        if ((HttpContext.Current.Session["DesignationId"].ToString() != "10"))
        {
            if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"].ToString()) == "True")
            {
                Layout = "~/Views/Shared/_Layout.cshtml";
            }
            else
            {
                Layout = "~/Views/Shared/Forestlayout.cshtml";
            }
        }
        else
        {
            Layout = "~/Views/Shared/_Layout.cshtml";

        }
    }
}

@model FMDSS.Models.PaymentByDepartmentalKioskUserDetails


<script src="~/js/jquery.min.js"></script>
<script>
    var RootUrl = '@Url.Content("~/")';

    $(document).ready(function () {


        $("#ChequeDate").datepicker({ yearRange: '1947:', dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true, maxDate: new Date(), onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });

        var currentDate = new Date();

        $(document).on('keypress', '#ChequeDate', function (event) {
            event.preventDefault();
            return false;

        });

        $('#ChequeDate').keydown(function (event)
        { return cancelBackspace(event) });

        function cancelBackspace(event) {
            if (event.keyCode == 8 || event.keyCode == 46) {
                return false;
            }
        }




        $('#PaymentMode').change(function () {

            $("#chequeno").html("Cheque No <span class='mandatory'>*</span>");
            $("#chequedate").html("Cheque Date <span class='mandatory'>*</span>");
            $('.Cheque').css("display", "none");
            if ($('#PaymentMode').val() == 'CASH') {

                //$('#BankName').prop("disabled", true);
                //$('#IFSCCode').prop("disabled", true);
                //$('#ChequeNumber').prop("disabled", true);
                //$('#ChequeDate').prop("disabled", true);
                $('.cash').hide();
               
            }
           else if ($('#PaymentMode').val() == 'DebitCard' || $('#PaymentMode').val() == 'CreditCard') {

                //$('#BankName').prop("disabled", true);
                //$('#IFSCCode').prop("disabled", true);
                //$('#ChequeNumber').prop("disabled", true);
                //$('#ChequeDate').prop("disabled", true);
                $("#chequeno").html("Transation No <span class='mandatory'>*</span>");
                $('.cash').hide();
                $('.Cheque').css("display", "block");
                
            }
            else {

                //$('#BankName').prop("disabled", false);
                //$('#IFSCCode').prop("disabled", false);
                //$('#ChequeNumber').prop("disabled", false);
                //$('#ChequeDate').prop("disabled", false);
                $('.cash').show();
            }
        });




        $('#btn_submit1').click(function (e) {

            if ($('option:selected', $('#PaymentMode')).index() == 0) {
                $("#errPaymentMode").css("display", "block");
                $('#errPaymentMode').focus();
                return false;
            }
            else {
                $("#errPaymentMode").css("display", "none");
            }

            if ($('option:selected', $('#PaymentMode')).index() != 1 && $('option:selected', $('#PaymentMode')).index() != 4 && $('option:selected', $('#PaymentMode')).index() != 5) {

                if ($('#BankName').val() == "") {
                    $("#errBankName").css("display", "block");
                    $('#errBankName').focus();
                    return false;
                }
                else {
                    $("#errBankName").css("display", "none");
                }

                if ($('#IFSCCode').val() == "") {
                    $("#errIFSCCode").css("display", "block");
                    $('#errIFSCCode').focus();
                    return false;
                }
                else {
                    $("#errIFSCCode").css("display", "none");
                }

                if ($('#ChequeNumber').val() == "") {
                    $("#errChequeNumber").css("display", "block");
                    $('#errChequeNumber').focus();
                    return false;
                }
                else {
                    $("#errChequeNumber").css("display", "none");
                }

                if ($('#ChequeDate').val() == "") {
                    $("#errChequeDate").css("display", "block");
                    $('#errChequeDate').focus();
                    return false;
                }
                else {
                    $("#errChequeDate").css("display", "none");
                }

            }



            if ($('option:selected', $('#PaymentMode')).index() == 4 || $('option:selected', $('#PaymentMode')).index() == 5) {

                
                if ($('#ChequeNumber').val() == "") {
                    $("#errChequeNumber").text("Transation No is Required");
                    $("#errChequeNumber").css("display", "block");
                    $('#errChequeNumber').focus();
                    return false;
                }
                else {
                    $("#errChequeNumber").css("display", "none");
                }

            }


            var r = confirm('Are you sure you want to generate the boarding pass ?');
            if (r == false) {
                return false;
            }

            var GuidName = $("#GuideName").val();

            var VehicleNumber = $("#VehicalNumber").val();

            var IDname = $("#RequestedIdEn").val();

            if (GuidName == "" || VehicleNumber == "") {
                alert("Guid Name and Vehicle Number must be fill before Print ")
                return false;
            }

            var tblinfo = {
                ID: $.trim(IDname),
                GuidName: $.trim(GuidName),
                VehicleNumber: $.trim(VehicleNumber),
                Place: $.trim($("#PlaceID").val()),
                ZoneID: $.trim($("#ZoneID").val()),
                DateOfArrival: $.trim($("#DateOfArrival").val()),
                VehicleID: $.trim($("#VehicleID").val()),
                ShiftTime: $.trim($("#ShiftTime").val()),
                IsCurrentBooking: $.trim("True")
            }

            $.ajax({
                type: 'POST',
                url: RootUrl + 'BoardingMaster/ValidationForGuidNameAndVehicleNumberUpdate',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(tblinfo),
                success: function (json) {

                    if (json.STATUS == "FALSE") {
                        alert("Guid Name And Vehicle Number assigning limit exceeded please assign new Guid Name And Vehicle Number. \n Remaining seats for Vehicle ( " + VehicleNumber + " ) is : " + json.Remaining);
                        return false;
                        
                    }
                    else {
                        $.ajax({
                            type: 'POST',
                            url: RootUrl + 'BoardingMaster/GuidNameAndVehicleNumberUpdate',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(tblinfo),
                            success: function (json0) {
                                if (json0.STATUS == "IsCurrentBooking") {

                                    var tblinfoKioskPayment = {
                                        RequestedId: $.trim($("#RequestedIdEn").val()),
                                        GuidName: $.trim(GuidName),
                                        VehicleNumber: $.trim(VehicleNumber),
                                        Place: $.trim($("#PlaceID").val()),
                                        ZoneID: $.trim($("#ZoneID").val()),
                                        DateOfArrival: $.trim($("#DateOfArrival").val()),
                                        VehicleID: $.trim($("#VehicleID").val()),
                                        ShiftTime: $.trim($("#ShiftTime").val()),
                                        ModuleId: $.trim($("#ModuleId").val()),
                                        ServiceTypeId: $.trim($("#ServiceTypeId").val()),
                                        PermissionId: $.trim($("#PermissionId").val()),
                                        SubPermissionId: $.trim($("#SubPermissionId").val()),
                                        PaidForCitizen: $.trim($("#PaidForCitizen").val()),
                                        PaidBy: $.trim($("#PaidBy").val()),
                                        PaidOn: $.trim($("#PaidOn").val()),
                                        PaidAmount: $.trim($("#PaidAmount").val()),
                                        PaymentMode: $.trim($("#PaymentMode").val()),
                                        BankName: $.trim($("#BankName").val()),
                                        IFSCCode: $.trim($("#IFSCCode").val()),
                                        ChequeNumber: $.trim($("#ChequeNumber").val()),
                                        ChequeDate: $.trim($("#ChequeDate").val())
                                    }
                                    $.ajax({
                                        type: 'POST',
                                        url: RootUrl + 'KioskPayment/ADDPaymentByDepartmentalKioskUser',
                                        contentType: 'application/json; charset=utf-8',
                                        data: JSON.stringify(tblinfoKioskPayment),
                                        success: function (json2) {
                                            if (json2.isRedirect) {                                               
                                                var url = '@Url.Action("PrintBoardingPass", "BoardingMaster")';
                                              
                                                window.open(url + "/" + IDname,"_blank");

                                                window.location.href = '@Url.Action("wildlifeBooking", "BookOnlineTicket")';
                                                

                                            }
                                        }
                                    });

                                }

                            }
                        });

                    }

                }
            });




        });

        $('#PaymentMode').find('option[value="CASH"]').attr('selected', 'selected');
        $('.cash').hide();

    });

</script>

@*@using (Html.BeginForm("ADDPaymentByDepartmentalKioskUserDetails", "KioskPayment", FormMethod.Post))
    {*@
<div id="page-wrapper-inn">

    <div class="col-lg-12 pad">
        <h1 class="page-header">Departmental Kiosk User Transaction </h1>
    </div>

    <div class="row">

        <div class="modal-body">
            @Html.HiddenFor(model => model.ModuleId)
            @Html.HiddenFor(model => model.ServiceTypeId)
            @Html.HiddenFor(model => model.PermissionId)
            @Html.HiddenFor(model => model.SubPermissionId)

            @Html.HiddenFor(model => model.PaidBy)
            @Html.HiddenFor(model => model.PaidForCitizen)



            @*ADDED BY ARVIND*@

            @Html.HiddenFor(model => model.PlaceID)
            @Html.HiddenFor(model => model.DateOfArrival)
            @Html.HiddenFor(model => model.ZoneID)
            @Html.HiddenFor(model => model.VehicleID)
            @Html.HiddenFor(model => model.ShiftTime)
            @Html.HiddenFor(model => model.RequestedIdEn)


            @*ADDED BY ARVIND*@


            <div class="col-lg-6">
                <div class="form-group">
                    <label>Request ID: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.RequestedId, new { @class = "form-control common", @readonly = "True" })
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    <label>Paid Amount: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.PaidAmount, new { @class = "form-control common", @readonly = "True" })
                </div>
            </div>


            <div class="col-lg-6">
                <div class="form-group">
                    <label>Payment Mode: <span class="mandatory">*</span></label>
                    @Html.DropDownListFor(Model => Model.PaymentMode, new List<SelectListItem>
                                                                           {
                                                                             new SelectListItem { Text = "--Select--", Value = "0"},
                                                                             new SelectListItem { Text = "CASH", Value = "CASH"},
                                                                             new SelectListItem { Text = "CHEQUE", Value = "CHEQUE"},
                                                                             new SelectListItem { Text = "DD", Value = "DD"},
                                                                             new SelectListItem { Text = "DebitCard", Value = "DebitCard"},
                                                                             new SelectListItem { Text = "CreditCard", Value = "CreditCard"},
                                                                          }, new { @class = "form-control common", id = "PaymentMode" })
                    <div id="errPaymentMode" style="display:none" class="alert-danger1">Payment Mode is Required.</div>

                </div>
            </div>


            <div class="col-lg-6">
                <div class="form-group">
                    <label>Vehical Name: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.VehicleName, new { @class = "form-control common", @readonly = "True" })

                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label>Guide Name: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.GuideName, new { @class = "form-control common" })
                    <div id="errBankName" style="display:none" class="alert-danger1">Guide Name is Required.</div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label>Vehical Number: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.VehicalNumber, new { @class = "form-control common" })
                    <div id="errBankName" style="display:none" class="alert-danger1">Vehical Number is Required.</div>
                </div>
            </div>


            <div class="col-lg-6">
                <div class="form-group cash">
                    <label>Bank Name: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.BankName, new { @class = "form-control common" })
                    <div id="errBankName" style="display:none" class="alert-danger1">Bank Name is Required.</div>
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group cash">
                    <label>IFSC Code: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.IFSCCode, new { @class = "form-control common" })
                    <div id="errIFSCCode" style="display:none" class="alert-danger1">IFSC Code is Required.</div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group cash Cheque">
                    <label id="chequeno">Cheque Number : <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.ChequeNumber, new { @class = "form-control common" })
                    <div id="errChequeNumber" style="display:none" class="alert-danger1">Cheque Number is Required.</div>
                </div>
            </div>

            <div class="col-lg-6 cash">
                <div class="form-group">
                    <label id="chequedate1">Cheque Date: <span class="mandatory">*</span></label>
                    @Html.TextBoxFor(model => model.ChequeDate, new { @class = "form-control common" })
                    <div id="errChequeDate" style="display:none" class="alert-danger1">Cheque Date is Required.</div>
                </div>
            </div>
            <div id="btn" class="col-lg-12">

                <button type="button" class="btn btn-success" value="Save" name="btn_submit1" id="btn_submit1">
                    <i class="fa fa-check"></i> Submit
                </button>

                <button type="button" id="btn_cancel" name="Command" value="Cancel" class="btn btn-danger" data-dismiss="modal">
                    <i class="fa fa-times fa-fw"></i> Close
                </button>

            </div>

        </div>

    </div>
</div>
@*}*@
<script type="text/javascript">
    var RootUrl = '@Url.Content("~/")';
    $(function () {

        var vehicletype = $('#VehicleName').val();
        console.log(vehicletype);
        $("#VehicalNumber").autocomplete({


            source: function (request, response) {
                //debugger;

                $.ajax({
                    url: RootUrl + 'BookOnlineTicket/AutoCompleteVehicleName?prefix=' + request.term + '&vehicleType=' + vehicletype,
                    //data: "{ 'prefix': '" + request.term + ",'vehicleType':'" + vehicletype + "'}",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            //alert(item.Guidename);
                            return { value: item, label: item };
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#hfGuidName").val(i.item.val);
            },
            minLength: 1
        });
        $("#GuideName").autocomplete({
            source: function (request, response) {
                //debugger;
                $.ajax({
                    url: RootUrl + 'BookOnlineTicket/AutoCompleteGuideName?prefix=' + request.term + '&vehicleType=' + vehicletype,
                    //data: "{ 'prefix': '" + request.term + "'}",
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        response($.map(data, function (item) {
                            //alert(item.Guidename);
                            return { value: item, label: item };
                        }))
                    },
                    error: function (response) {
                        alert(response.responseText);
                    },
                    failure: function (response) {
                        alert(response.responseText);
                    }
                });
            },
            select: function (e, i) {
                $("#hfGuidName").val(i.item.val);
            },
            minLength: 1
        });
    });
</script>