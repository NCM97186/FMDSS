@*@model ASPNetMVCWithReCaptcha3.Models.ReCaptchaForm
    @using ASPNetMVCWithReCaptcha3.Classes;*@
@{
    ViewBag.Title = "Book Online Permit";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
    var BookingType = Session["CurrentBookingOrAdvanceBooking"].ToString();
}
@model IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>
@using CaptchaMvc.HtmlHelpers

<style>
    #myModal .modal-header {
        background-color: #5cb85c;
    }

        #myModal .modal-header h4, .close {
            color: #ffffff;
            text-align: center;
            font-size: 30px;
        }

    #myModal .modal-footer {
        background-color: #f9f9f9;
    }

    #myModal .btn-success {
        width: 100%;
        padding: 10px;
    }

    ul.a {
        list-style-type: circle;
    }
</style>


<style>
    #myModalRefund .modal-header {
        background-color: #5cb85c;
    }

        #myModalRefund .modal-header h4, .close {
            color: #ffffff;
            text-align: center;
            font-size: 30px;
        }

    #myModalRefund .modal-footer {
        background-color: #f9f9f9;
    }

    #myModalRefund .btn-success {
        width: 100%;
        padding: 10px;
    }

    ul.a {
        list-style-type: circle;
    }
    /*Create by sunny */
    #myModal_TicketCancel .modal-header {
        background-color: #5cb85c;
    }

        #myModal_TicketCancel .modal-header h4, .close {
            color: #ffffff;
            text-align: center;
            font-size: 30px;
        }

    #myModal_TicketCancel .modal-footer {
        background-color: #f9f9f9;
    }


    /*END*/


    .page-header {
        float: left;
        width: 100%;
        background: #ccc;
        color: #000;
        border-radius: 4px;
        padding: 7px;
        box-sizing: border-box;
        font-size: 18px;
        font-weight: 500;
        line-height: 20px;
    }

    .panel-heading span {
        color: #ff0000;
        text-decoration: underline;
        font-size: 14px;
    }

    .panel-heading {
        padding: 10px 10px;
        border-bottom: 1px solid transparent;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
        float: left;
        width: 100%;
    }

    .no_padding {
        padding-left: 0px;
        padding-right: 0px;
    }

    .custom_headpan {
        padding: 4px 0px;
    }

    .panel-default {
        border-color: #ddd;
        float: left;
        width: 100%;
    }

    .panel-body {
        padding: 8px;
        position: relative;
        width: 100%;
        float: left;
        box-sizing: border-box;
    }

    .table {
        vertical-align: top;
    }

        .table tr th, .table tr td {
            font-size: 12px;
            color: #000;
            line-height: 13px;
        }

        .table tr th {
            background: #337ab7;
            color: #fff;
            font-weight: 500;
        }

    .btn-custom {
        background: #337ab7;
        color: #fff;
        margin-top: 15px;
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: 400;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-image: none;
        border: 1px solid transparent;
        border-radius: 4px;
        transition-duration: .3s;
        transition-timing-function: linear;
        -webkit-transition-duration: .3s;
    }

        .btn-custom:hover {
            text-decoration: none;
            color: #fff;
            background: #4a9fe8;
        }

    #tblMemberInfo {
        overflow: auto !important;
        display: block;
        width: 100% !important;
    }
</style>

@if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"]) == "False")
{
    <meta http-equiv="refresh" content="600;url=https://fmdss.forest.rajasthan.gov.in/SessionExpire/Index">
}



<script src="~/Scripts/jquery_d_1.7.3.js"></script>
<script src="~/js/jquery.min.js"></script>

<script type="text/javascript">

    var codeList = [];

     var dates = [];
    @foreach (var d in ViewBag.ExcludeDateList)
    {
        @:dates.push("@d");
    }
    var currentDate = '@ViewBag.CurrentDate';

    function DisableDatesAdvance(date) {
        var string = jQuery.datepicker.formatDate('dd/mm/yy', date);
        return [dates.indexOf(string) == -1];
    }
    $(document).ready(function () {
        refreshAt(12, 20, 0);
        $('input:text,select,textarea').focusin(function () {
            $(this).css({ 'background-color': 'lightgray' });
        });

        $('input:text,select,textarea').focusout(function () {
            $(this).css({ 'background-color': 'white' });
        });

        @* shaan added new code for Indemnity Bond 16-03-2021 *@
        $("#hdn_IAgreement").val(0);
        $('input[type=radio]').change(function () {
            $("#hdn_IAgreement").val($(this).val());
        });
        @*end*@

    });



    function refreshAt(hours, minutes, seconds) {
        var now = new Date();
        var then = new Date();

        if (now.getHours() > hours ||
            (now.getHours() == hours && now.getMinutes() > minutes) ||
            now.getHours() == hours && now.getMinutes() == minutes && now.getSeconds() >= seconds) {
            then.setDate(now.getDate() + 1);
        }
        then.setHours(hours);
        then.setMinutes(minutes);
        then.setSeconds(seconds);

        var timeout = (then.getTime() - now.getTime());
        setTimeout(function () { window.location.reload(true); }, timeout);
    }


    var RootURl = '@Url.Content("~/")';
    $(function (e) {
        $(".datefield").keypress(function (e) {
            e.preventDefault();
        });
        $('.MemberName').keypress(function (e) {
            if (e.ctrlKey || e.altKey) {
                e.preventDefault();
            } else {
                var key = (e.which) ? e.which : e.keyCode
                if (e.shiftKey) {
                    if (key == 64 || key == 33 || key == 35 || key == 36 || key == 37 || key == 94 || key == 38 || key == 42 || key == 40 || key == 41) {
                        e.preventDefault();
                    }
                }
                if (!((key == 8) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90) || (key >= 97 && key <= 122))) {
                    e.preventDefault();
                }
            }
        });


        $('.MemberIdNo').keypress(function (e) {
            var kc = e.which;
            if (e.shiftKey) {
                if (kc == 64 || kc == 33 || kc == 35 || kc == 36 || kc == 37 || kc == 94 || kc == 38 || kc == 42 || kc == 40 || kc == 41) {
                    e.preventDefault();
                }
            }
            if ((kc >= 97 && kc <= 122) || (kc >= 65 && kc <= 90) || (kc == 0 || kc == 8 || kc == 13 || kc == 95) || (kc >= 47 && kc <= 57) || (kc >= 44 && kc < 46) || (kc >= 40 && kc < 42) || (kc >= 96 && kc <= 105) || (kc == 32)) {

            }
            else {
                e.preventDefault();
            }
        });

        $('.MemberTotalCamera').bind('keypress', function (evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            // var charCode = evt.which;

            if ((charCode == 46) || (charCode >= 97 && charCode <= 122) || (charCode >= 65 && charCode <= 90)) {
                return false;
            }
            else {
                if (charCode >= 48 && charCode <= 57 || charCode == 46) {
                    return true;
                }
                else {
                    evt.preventDefault();
                }
            }
        });


        //   Captcha();Remove Old Captcha ///Change my Amit for load testing
        //Get URL and Check Current Booking or Advance Booking Developed by Rajveer
        function getUrlVars() {
            var vars = {};
            var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function (m, key, value) {
                vars[key] = value;
            });
            return vars;
        }
        var placeChange;
        $("#ddl_place").bind("click", function (e) {
            placeChange = $(this).val();
            var d = new Date($.now());
            //alert(d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds());
            var hitStatrtTime = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
            $("#hdnFormStart").val(hitStatrtTime);
        }).bind("change", function (e) {
            $('#btn-cont1').hide();
            $("#ddl_Zone").prop("SelectedIndex", 0);
            $("#txt_dateofarrival").val("");
            $("#ddl_Shift").html("");
            $("#ddl_vehicle").html("");
            $("#cptBlock").hide();
            //Captcha();
            if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {

                $('#txt_dateofarrival').val('');
                $('#ddl_Shift').val(0);
                $('#ddl_vehicle').val(0);
                $('#hdn_availTicket,#hdn_vehiclefee,#hdn_vehicleSeatAvailable').val('');
                $('#lbl_NumberofMembersavailable,#lbl_feePerVehicle,#lbl_vehicleSeatAvailable').text('');
                $("#ddl_Zone").empty();

                var placeID = $("#ddl_place").val();
                var values = {
                    PlaceID: placeID
                };
                if ($("#ddl_place option:selected").text() != '--Select--') {
                    //var queries = {};
                    //$.each(document.location.search.substr(1).split('&'), function (c, q) {
                    //    var i = q.split('=');
                    //    queries[i[0].toString()] = i[1].toString();
                    //});

                    //if (queries["PL"] != null) {
                    //    if (queries["PL"] == "RN") {
                    //        $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                    //        $("#ddl_Zone").append('<option value="1">' + "Zone 1" + '</option>');
                    //        $("#ddl_Zone").append('<option value="2">' + "Zone 2" + '</option>');
                    //        $("#ddl_Zone").append('<option value="3">' + "Zone 3" + '</option>');
                    //        $("#ddl_Zone").append('<option value="4">' + "Zone 4" + '</option>');
                    //        $("#ddl_Zone").append('<option value="5">' + "Zone 5" + '</option>');
                    //        $("#ddl_Zone").append('<option value="6">' + "Zone 6" + '</option>');
                    //        $("#ddl_Zone").append('<option value="8">' + "Zone 8" + '</option>');
                    //        $("#ddl_Zone").append('<option value="10">' + "Zone 10" + '</option>');
                    //    }
                    //    else {
                    //        if ($("#ddl_place option:selected").val() == "53") {
                    //            $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                    //            $("#ddl_Zone").append('<option value="14">' + "Route 1" + '</option>');
                    //            $("#ddl_Zone").append('<option value="15">' + "Route 2" + '</option>');
                    //            $("#ddl_Zone").append('<option value="16">' + "Route 3" + '</option>');
                    //        }
                    //        else {
                    //            $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                    //            $("#ddl_Zone").append('<option value="11">' + "Route 1" + '</option>');
                    //            $("#ddl_Zone").append('<option value="12">' + "Route 2" + '</option>');
                    //            $("#ddl_Zone").append('<option value="13">' + "Route 3" + '</option>');
                    //        }
                    //    }
                    //}
                    //else {

                    if (codeList.length > 1) {
                        while (codeList.length > 1) {
                            codeList.pop();
                        }
                    }
                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(values),
                        url: RootURl + 'BookOnlineTicket/CheckSafariAccomoAvailability',
                        success: function (data) {
                            if (placeID == 2 || placeID == 68) {
                                if (codeList.length == 1) {
                                    codeList[0] = data.list8;
                                }
                                else if (codeList.length == 0) {
                                    codeList.push(data.list8);
                                }

                            }
                            $("#txt_dateofarrival").datepicker("destroy");


                            if (data.NEWDATEOPEN != "") {



                                $("#PlaceAndTime").text("" + $("#ddl_place option:selected").text() + " new day open (" + data.NEWDATEOPEN + ") ");

                                $("#getting-started").css("display", "none");
                            }
                            else {

                                $("#PlaceAndTime").val('');
                                $("#getting-started").css("display", "none");
                            }

                            if (data.list1 == "1") {
                                $('#divSafariHead').css("display", "block");
                                $('#IsSafari').css("display", "block");
                                $('#hdnSafari').val('F');
                            }
                            else {
                                $('#divSafariHead').css("display", "none");
                                $('#IsSafari').css("display", "none");
                                $('#hdnSafari').val('NF');
                                $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').show();
                                for (var i = 0; i < 6; i++) {
                                    var row = 'trRow' + i;
                                    $('#' + row).show();
                                }
                            }
                            if (data.list2 == "1") {
                                $('#divAccomoHead').css("display", "block");
                                $('#IsAccommodation').css("display", "block");
                            }
                            else {
                                $('#divAccomoHead').css("display", "none");
                                $('#IsAccommodation').css("display", "none");
                            }
                            if (data.list3.length > 0) {
                                $(".zone").show();
                                $('#hdZone').val('F');
                                $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                                for (var i = 0; i < data.list3.length; i++) {
                                    $("#ddl_Zone").append('<option value="' + data.list3[i].Value + '">' + data.list3[i].Text + '</option>');
                                }
                            }
                            else {
                                $(".zone").hide();
                                $('#hdZone').val('NF');
                                $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                                if ($('#hdnDeptKiosk').val() != '') {
                                    //$("#txt_dateofarrival").datepicker("destroy");
                                    //$(".datefield").datepicker({ minDate: new Date(), maxDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                    //$("#txt_dateofarrival").datepicker("setDate", new Date());
                                    CurrentShift();
                                   
                                }
                                Vichelcategory();
                            }
                            // start change by arvind K sharma [ logic correct after reachecd last date of month ]
                            if (data.list4 != "NF" && data.list5 != "NF") {

                                var d = new Date();
                                d.setDate(d.getDate() + 90);
                                var day = d.getDate();
                                var month = d.getMonth() + 1;
                                var year = d.getFullYear();
                                if (day < 10) {
                                    day = "0" + day;
                                }
                                if (month < 10) {
                                    month = "0" + month;
                                }
                                var tdate = day + "/" + month + "/" + year;
                                var tddate = month + "/" + day + "/" + year;
                                var minDate = data.list4;
                                var maxDate = data.list5;
                                var mdate = maxDate.split('/');
                                var mxdate = mdate[1] + "/" + mdate[0] + "/" + mdate[2];
                                var midate = minDate.split('/');
                                var mndate = midate[1] + "/" + midate[0] + "/" + midate[2];
                                var minimumdate = Date.parse(mndate);
                                var todaydateplusNinty = Date.parse(tddate);
                                var maximumdate = Date.parse(mxdate);
                                var currentdate = new Date();

                                ////Change for Keoladeo National Park
                                if ($("#ddl_place").val() == '1') {
                                    var cday = currentdate.getDate();
                                    var cmonth = currentdate.getMonth() + 1;
                                    var cyear = currentdate.getFullYear();
                                }
                                else {
                                    var PlusOneDay = new Date((new Date()).valueOf() + 1000 * 3600 * 24);
                                    var cday = PlusOneDay.getDate();
                                    var cmonth = PlusOneDay.getMonth() + 1;
                                    var cyear = PlusOneDay.getFullYear();
                                }
                                //////End for Keoladeo National Park

                                if (cday < 10) {
                                    cday = "0" + cday;
                                }
                                if (cmonth < 10) {
                                    cmonth = "0" + cmonth;

                                }
                                var ctdate = cmonth + "/" + cday + "/" + cyear;
                                var crntdate = Date.parse(ctdate);
                                if (crntdate > minimumdate) {
                                    //var minDateSet = cday + "/" + cmonth + "/" + cyear;
                                    var minDateSet = data.list7;
                                }
                                else {
                                    var minDateSet = data.list4;
                                }


                                //Working by Rajveer
                                var disabledDays = [7, 8, 9];
                                //if (getUrlVars()["CT"] == "Q3VycmVudA==") {
                                //    disabledDays = [0];
                                //}

                                //var disabledDays = [7];

                                function nationalDays(date) {
                                    var m = date.getMonth(), d = date.getDate(), y = date.getFullYear();
                                    //console.log('Checking (raw): ' + m + '-' + d + '-' + y);
                                    for (i = 0; i < disabledDays.length; i++) {
                                        if ($.inArray((m + 1), disabledDays) != -1) {
                                            //console.log('bad:  ' + (m+1) + '-' + d + '-' + y + ' / ' + disabledDays[i]);
                                            return [false];
                                        }
                                    }
                                    //console.log('good:  ' + (m+1) + '-' + d + '-' + y);
                                    return [true];
                                }
                                function noWeekendsOrHolidays(date) {
                                    //var noWeekend = jQuery.datepicker.noWeekends(date);
                                    //return noWeekend[0] ? nationalDays(date) : noWeekend;
                                    // alert('hi');
                                    // return DisableDates(date);
                                    return nationalDays(date);
                                }

                                //End
                                if (todaydateplusNinty > minimumdate && todaydateplusNinty <= maximumdate) {    
                                   
                                    //$(".datefield").datepicker({ minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                    $(".datefield").datepicker({
                                        beforeShowDay: noWeekendsOrHolidays,
                                        minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); },
                                        beforeShowDay: DisableDatesAdvance,
                                        //beforeShowDay: function (date) { return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5 || date.getDay() == 6, ""] },                                       
                                        dateFormat: 'dd/mm/yy'
                                    });
                                }

                                    //Open Cuurent Date Use This Code
                                    @*if (todaydateplusNinty > minimumdate && todaydateplusNinty <= maximumdate) {
                                    //$(".datefield").datepicker({ minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                    var value = '@Request.RequestContext.HttpContext.Session["CurrentBookingOrAdvanceBooking"]';
                                    if (value == "1") {
                                        $(".datefield").datepicker({
                                            beforeShowDay: noWeekendsOrHolidays,
                                            minDate: minDateSet, maxDate: minDateSet, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); }
                                            //minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); }
                                        });
                                    }
                                    else {
                                        $(".datefield").datepicker({
                                            beforeShowDay: noWeekendsOrHolidays,
                                            minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); }
                                        });
                                    }

                                    //$(".datefield").datepicker({
                                    //    beforeShowDay: noWeekendsOrHolidays,
                                    //    minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); }
                                    //});
                                }*@
                                else if (todaydateplusNinty > minimumdate && todaydateplusNinty > maximumdate) {
                                   // alert('test');
                                    $(".datefield").datepicker({
                                        minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); },
                                        beforeShowDay: DisableDatesAdvance,//function (date) { return [date.getDay() == 1 || date.getDay() == 2 || date.getDay() == 3 || date.getDay() == 4 || date.getDay() == 5 || date.getDay() == 6, ""] },
                                        dateFormat: 'dd/mm/yy'
                                    });
                                }
                                else {
                                    $("#txt_dateofarrival").attr('disabled', true);
                                }

                            }
                                // end change by arvind K sharma [ logic correct after reachecd last date of month ]
                            else {
                                //  $(".datefield").datepicker({ minDate: new Date(), maxDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                if ($('#hdnDeptKiosk').val() != '') {
                                    //  $("#txt_dateofarrival").datepicker("setDate", new Date());
                                    CurrentShift();
                                }
                            }
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });
                    // }
                }
            }
            else {
                $(this).val(placeChange);
                alert('You can not change the Protected Area. Please delete your member entry.');
                return false;
            }
        });
        var zoneChange;
        $("#ddl_Zone").bind("click", function (e) {
            zoneChange = $(this).val();
        }).bind("change", function (e) {
            $('#btn-cont1').hide();
            $("#txt_dateofarrival").val("");
            $("#ddl_Shift").html("");
            $("#ddl_vehicle").html("");
            $("#cptBlock").hide();
            //Captcha();
            if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {

                $('#txt_dateofarrival').val('');
                $('#ddl_Shift').val(0);
                $('#ddl_vehicle').val(0);
                $('#txt_Totalseat').val('');
                $('#txt_NoOfTicket').val('');
                $('#hdn_availTicket,#hdn_vehiclefee,#hdn_vehicleSeatAvailable').val('');
                $('#lbl_NumberofMembersavailable,#lbl_feePerVehicle,#lbl_vehicleSeatAvailable').text('');
                if ($('#hdnDeptKiosk').val() != '') {
                    //$("#txt_dateofarrival").datepicker("destroy");
                    //$(".datefield").datepicker({ minDate: new Date(), maxDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                    //$("#txt_dateofarrival").datepicker("setDate", new Date());
                    CurrentShift();
                }
                Vichelcategory();
            }
            else {
                $(this).val(zoneChange);
                alert('You can not change the zone. Please delete your member entry.');
                return false;
            }
        });


        var datechange;
        $("#txt_dateofarrival").bind("click", function (e) {
            datechange = $(this).val();
        }).bind("change", function (e) {
            $('#btn-cont1').hide();
            $("#ddl_Shift").prop("SelectedIndex", 0);
            //$('#ddl_Shift').find('option').not(':first').remove();
            $("#ddl_Shift").html("");
            $("#ddl_vehicle").html("");
            $("#cptBlock").hide();
            var arrivaldate = this.value;
            if ($('#hdnDeptKiosk').val() == '') {

                if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {

                    $('#lbl_NumberofMembersavailable').text('');
                    $('#ddl_Shift').empty();
                    var placeID = $("#ddl_place").val();
                    var Zone = $('#ddl_Zone').val();
                    if (!Zone) { Zone = 0; }
                    var values = {
                        PlaceID: placeID,
                        Zone: Zone,
                        ArrivalDate: arrivaldate
                    };

                    var values = {
                        PlaceID: placeID,
                        Zone: Zone,
                        ArrivalDate: arrivaldate,
                        authtk: codeList[1]
                    };
                    var CheckBookingDurationsvalues = {
                        PlaceID: placeID,
                        Date: $("#txt_dateofarrival").val()
                    };
                    if (codeList.length > 3) {
                        while (codeList.length > 3) {
                            codeList.pop();
                        }
                    }
                    $.ajax({
                        type: 'POST',


                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(CheckBookingDurationsvalues),
                        url: RootURl + 'BookOnlineTicket/CheckBookingDurations',
                        success: function (data) {
                            if (data.Dstatus == "0") {
                                alert(data.DMessage);
                                var URL = getUrlVars()["CT"];
                                location.href = "BookOnlineTicket?CT=" + URL;


                            }
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });



                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(values),
                        url: RootURl + 'BookOnlineTicket/BindShiftByPlaceZone',
                        success: function (data) {
                            if (placeID == "2" || placeID == "68") {
                                if (codeList.length == 3) {
                                    codeList[1] = data.list4;
                                    
                                } else if (codeList.length == 2) {
                                    codeList.push(data.list4);
                        
                                }
                            }
                            var hours = new Date().getHours();
                            var minutes = new Date().getMinutes();
                            var ampm = hours >= 12 ? 'pm' : 'am';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 1 ? '0' + minutes : minutes;
                            $('#ddl_Shift').empty();
                            $("#ddl_Shift").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                            if ($('#ddl_Zone').val() != 0) {
                                for (var x = 0; x < data.list1.length; x++) {
                                    if (data.list1[x].isFullDay == 'True') {
                                        $("#ddl_Shift").append('<option value="' + 3 + '">' + "Full Day" + '</option>');
                                    }
                                    if (data.list1[x].isMorning == 'True') {
                                        $("#ddl_Shift").append('<option value="' + 1 + '">' + "Morning" + '</option>');
                                    }
                                    if (data.list1[x].isEvening == 'True') {
                                        $("#ddl_Shift").append('<option value="' + 2 + '">' + "Evening" + '</option>');
                                    }
                                }
                            }
                            $('#ddl_Accomo').empty();
                            $("#ddl_Accomo").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                            for (var i = 0; i < data.list2.length; i++) {
                                $("#ddl_Accomo").append('<option value="' + data.list2[i].Value + '">' + data.list2[i].Text + '</option>');
                            }
                            // });
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });
                    document.getElementById("errorPlace").style.display = 'none';
                }
                else {
                    $(this).val(datechange);
                    alert('You can not change the date. Please delete your member entry.');
                    return false;
                }
            }
        });


        var shift;
        $("#ddl_Shift").bind("click", function (e) {
            shift = $(this).val();
        }).bind("change", function (e) {
            $('#btn-cont1').hide();
            $("#ddl_vehicle").prop("SelectedIndex", 0);
            $("#cptBlock").hide();           
            //Captcha();
            if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {
                $("#ddl_vehicle").val(0);
                var arrivalDate = $("#txt_dateofarrival").val();
                if (arrivalDate) {
                    var placeID = $("#ddl_place").val();
                    var shiftTime = $("#ddl_Shift").val();
                    var Zone = $('#ddl_Zone').val();
                    if (!Zone) { Zone = 0; }
                    var values = {
                        PlaceID: placeID,
                        ArrivalDate: arrivalDate,
                        ShiftTime: shiftTime,
                        Zone: Zone,
                        vehicleID: 0,
                        authtk: codeList[2]
                    };
                    if (codeList.length > 4) {
                        while (codeList.length > 4) {
                            codeList.pop();
                        }
                    }
                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(values),
                        url: RootURl + 'BookOnlineTicket/BindShiftSession',
                        success: function (data) {
                            VichelcategoryNew('');
                            if (placeID == "2" || placeID == "68") {
                                if (codeList.length == 4) {
                                    codeList[1] = data.obj2;
                                    
                                } else if (codeList.length == 3) {
                                    codeList.push(data.obj2);
                                   
                                }
                            }
                            if (data.obj1 == 1) {
                                if ($("#ddl_Shift option:selected").text() != '--Select--' && $('#hdnSafari').val() == 'NF') {
                                    $.ajax({
                                        type: 'POST',
                                        headers: {
                                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                                        },
                                        contentType: 'application/json; charset=utf-8',
                                        data: JSON.stringify(values),
                                        url: RootURl + 'BookOnlineTicket/CheckTicketAvailability',
                                        success: function (data) {
                                            var d = data.split('#');
                                           
                                            if (d[0] != '') {
                                                if (d.length > 2) {
                                                    $('#lbl_NumberofMembersavailable').text("Currently available permits: " + d[2] + d[0]);
                                                }else
                                                    $('#lbl_NumberofMembersavailable').text("Currently available permits: " + d[0]);
                                                $('#hdn_availTicket').val(d[0]);
                                                //$('#lbl_FeeTigerProject').text("Currently available tickets: " + d[1]);
                                                //$('#hdn_FeeTigerProject').val(d[1]);
                                                //$('#lbl_FeeSurcharge').text("Currently available tickets: " + d[2]);
                                                //$('#hdn_FeeSurcharge').val(d[2]);
                                            }
                                        },
                                        traditional: true,
                                        error: function (data) { console.log(data) }
                                    });
                                }
                            }
                        }
                    });

                }
                document.getElementById("errorShift").style.display = 'none';
            }
            else {
                $(this).val(shift);
                alert('You can not change the shift. Please delete your member entry.');
                return false;
            }
        });


        $("#ddl_vehicle").bind('change', function () {
            $('#btn-cont1').show();
            if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {

                var arrivalDate = $("#txt_dateofarrival").val();
                if (arrivalDate) {
                    var placeID = $("#ddl_place").val();
                    var shiftTime = $("#ddl_Shift").val();
                    var Zone = $('#ddl_Zone').val();
                    var vehicleID = $("#ddl_vehicle").val();
                    var vehicle = $('#ddl_vehicle option:selected').text();
                    $("#hdnVType").val(vehicle);
                    //alert(vehicleID);
                    if (!Zone) { Zone = 0; }
                    var values = {
                        PlaceID: placeID,
                        ArrivalDate: arrivalDate,
                        ShiftTime: shiftTime,
                        Zone: Zone,
                        vehicleID: vehicleID,
                        authtk: codeList[3]
                    };
                    if (codeList.length > 5) {
                        while (codeList.length > 5) {
                            codeList.pop();
                        }
                    }
                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(values),
                        url: RootURl + 'BookOnlineTicket/BindVehicleSession',
                        success: function (data) {
                            if (data.obj1 == 1) {
                                if (placeID == "2" || placeID == "68") {
                                    if (codeList.length == 5) {
                                        codeList[1] = data.obj2;
                                        $("#tk_p").val(data.obj2);
                                    } else if (codeList.length == 4) {
                                        codeList.push(data.obj2);
                                        $("#tk_p").val(data.obj2);
                                    }
                                    ReLoadCaptcha();
                                    $("#cptBlock").show();
                                }
                            }
                            if (vehicleID != 0 && shiftTime != 0 && (placeID != 2 || placeID != 68)) {
                                ReLoadCaptcha();
                                $("#cptBlock").show();
                            }
                        }
                    });
                }
            }


        });


        $("#btnCheckTicketAvailablity").bind("click", function () {
            //if (validateAvailablaty()) {
            ///  Captcha();
            //// alert('btnCheckTicketAvailablity');

            var vehicle = $("#ddl_vehicle option:selected").val();
            if (!vehicle) { vehicle = 0; }
            var placeID = $("#ddl_place").val();
            var shiftTime = $("#ddl_Shift").val();
            var Zone = $('#ddl_Zone').val();
            var cpt = $("#txt_cpt").val();
            if (!Zone) { Zone = 0; }
            var arrivalDate = $("#txt_dateofarrival").val();
            var values = {
                PlaceID: placeID,
                ArrivalDate: arrivalDate,
                ShiftTime: shiftTime,
                Zone: Zone,
                vehicleID: vehicle,
                captcha: cpt,
                authtk: codeList[4]
            };
            if ($("#ddl_vehicle option:selected").text() != '--Select--') {
                $.ajax({
                    type: 'POST',
                    headers: {
                        __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                    },
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    url: RootURl + 'BookOnlineTicket/CheckTicketAvailability',
                    success: function (data) {
                        var d = data.split('#');
                        if (d[1] != 'E') {
                            if (d[1] != '!') {
                                if (d[0] != '0') {
                                    $("#cpterror_msg").hide();
                                    $("#txt_cpt").attr("readonly", true);
                                    $("#hdn_cpt").val("0");
                                    if (d.length > 2) {
                                        $('#lbl_NumberofMembersavailable').text("Currently available permits: " + d[2] + d[0]);
                                    } else
                                        $('#lbl_NumberofMembersavailable').text("Currently available seats: " + d[0]);

                                    $('#hdn_availTicket').val(d[0]);
                                    $('#lbl_FeePerMember').text("Vehicle Fees Per Member: " + d[1]);

                                    var Vehicle = 'Gypsy';
                                   // if (placeID != '68') {
                                        if ($("#ddl_vehicle option:selected").text().toLowerCase() == Vehicle.toLowerCase()) {
                                        $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').show();
                                        $('#tblMemberInfo').removeClass('ad-scrolll');
                                        $('#hdnMemberRowVal').val(6);
                                        for (var i = 0; i < 6; i++) {
                                            var row = 'trRow' + i;
                                            $('#' + row).show();
                                        }
                                        for (var i = 6; i < 20; i++) {
                                            var row = 'trRow' + i;
                                            $('#' + row).hide();
                                        }

                                    }
                                    else {
                                        $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').show();
                                        $('#tblMemberInfo').addClass('ad-scrolll');
                                        $('#hdnMemberRowVal').val(20);
                                        for (var i = 0; i < 20; i++) {
                                            var row = 'trRow' + i;
                                            $('#' + row).show();
                                        }

                                        }
                                    //} else {
                                    //    if ($("#ddl_vehicle option:selected").text().toLowerCase() == Vehicle.toLowerCase()) {
                                    //        $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').show();
                                    //        $('#tblMemberInfo').removeClass('ad-scrolll');
                                    //        $('#hdnMemberRowVal').val(4);
                                    //        for (var i = 0; i < 4; i++) {
                                    //            var row = 'trRow' + i;
                                    //            $('#' + row).show();
                                    //        }
                                    //        for (var i = 4; i < 20; i++) {
                                    //            var row = 'trRow' + i;
                                    //            $('#' + row).hide();
                                    //        }

                                    //    }
                                    //    else {
                                    //        $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').show();
                                    //        $('#tblMemberInfo').addClass('ad-scrolll');
                                    //        $('#hdnMemberRowVal').val(10);
                                    //        for (var i = 0; i < 10; i++) {
                                    //            var row = 'trRow' + i;
                                    //            $('#' + row).show();
                                    //        }

                                    //    }
                                    //}
                                    //$('.MemberName,.MemberIdNo,.MemberTotalCamera,.MemberCameraFees,.MemberFees,.TotalBoardingFee,.BoardingVehicleFeeGSTPercentage').val('');
                                    $('.MemberName,.MemberIdNo,.MemberFees,.TotalBoardingFee,.BoardingVehicleFeeGSTPercentage').val('');
                                    $('.MemberGender,.MemberNationality,.MemberIdType,.MemberCameraFees,.MemberTotalCamera').val(0);
                                }
                                else {
                                    $('#lbl_NumberofMembersavailable').text("Currently available permits: " + d[0]);
                                    $('#hdn_availTicket').val(d[0]);
                                    $('#lbl_FeePerMember').text('');
                                    for (var i = 0; i < 20; i++) {
                                        var row = 'trRow' + i;
                                        $('#' + row).hide();
                                    }
                                    alert('Permit not avaliable');
                                    return false;
                                }
                            }
                            else {
                                window.location.href = '/BookOnlineTicket/InvalidRequest';
                            }
                        }
                        else {
                            ReLoadCaptcha();
                            $("#hdn_cpt").val('1');
                            $("#cpterror_msg").show();
                        }
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }
            //}
            //else {

            // alert('hi');
            //}
        });


        $(".MemberNationality").bind('change', function () {
            var id = $(this).attr('id');
            //var idc= id.slice(-1);
            var idc = id.substr(17, 2);
            //$('#' + id).bind("change", function () {
            var val = $(this).val();
            //$('#MemberCameraFees' + idc).val('');
            //$('#MemberTotalCamera' + idc).val('');
            $('#MemberCameraFees' + idc).val(0);
            $('#MemberTotalCamera' + idc).val(0);
            $('#MemberIdNo' + idc).val('');
            $("#btnGetOtp").prop('disabled', false);
            if (val == '1') {

                $("#btnGetOtp").prop('disabled', false);
                $('#MemberIdType' + idc).empty();
                $('#MemberIdType' + idc).append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 1 + '">' + "Passport" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 2 + '">' + "Aadhar" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 3 + '">' + "Driving Licence" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 4 + '">' + "Voter ID" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 5 + '">' + "PAN Card" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 6 + '">' + "Office ID" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 7 + '">' + "Student ID" + '</option>');
                $('#MemberIdType' + idc).val('0');
            }
            else if (val == '2') {

                $("#btnGetOtp").prop('disabled', false);
                $('#MemberIdType' + idc).empty();
                $('#MemberIdType' + idc).append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                $('#MemberIdType' + idc).append('<option value="' + 1 + '">' + "Passport" + '</option>');
                $('#MemberIdType' + idc).val('1');
            }
            FeePerMember(idc, val);
            //});
        });



        $(".MemberIdNo").bind('change', function (e) {
            var id = $(this).attr('id');
            // var idc = id.slice(-1);
            var idc = id.substr(10, 2);
            //$('#' + id).bind("change", function () {
            var val = $(this).val();
            for (var i = idc; i >= 1; i--) {

                if (val == $('#MemberIdNo' + (i - 1)).val()) {
                    // alert('Id cannot same with previous member');
                    $('#' + id).val('');
                    $('#' + id).focus();
                    e.preventDefault();
                    return false;
                }
                else {
                }
            }
            //});
        });


        $(".MemberTotalCamera").bind('change focus', function (e) {
            var id = $(this).attr('id');
            //var idc = id.slice(-1);
            var idc = id.substr(17, 2);
            FeePerCamera(idc, $('#MemberNationality' + idc).val());
            $('#' + id).bind("change", function () {
                var CamerafeesPerMember = $(this).val();
                if (CamerafeesPerMember != '') {
                    var camfees = (parseInt($('#hdFeesCamera').val()) * parseInt(CamerafeesPerMember));
                    $('#MemberCameraFees' + idc).val(camfees);
                }
                else {
                    $('#MemberCameraFees' + idc).val(0);
                }
            });
        });



        $("#ddl_Accomo").bind("change", function () {
            var values = {
                PlaceID: $("#ddl_place").val(),
                ArrivalDate: $("#txt_dateofarrival").val(),
                AccomoID: $("#ddl_Accomo").val()
            };
            if ($("#ddl_Accomo option:selected").text() != '--Select--') {

                $.ajax({
                    type: 'POST',
                    headers: {
                        __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                    },
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    url: RootURl + 'TicketBooking/SelectAccomoFee',
                    success: function (data) {
                        $.each(data, function (i, items) {
                            $('#lbl_PerroomCharge').text("Fees per room: " + items.RoomCharge);
                            $('#lbl_roomAvail').text("No of rooms available: " + items.RoomAvailability);
                            $('#hdn_perRoomRate').val(items.RoomCharge);
                            $('#hdn_roomAvail').val(items.RoomAvailability);
                        });
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }

        });
        $("#txt_Totalseat").change(function () {
            var tktToBook = $("#txt_NoOfTicket").val();
            var noOfSafari = $("#txt_Totalseat").val();
            var availSafari = $('#hdn_vehicleSeatAvailable').val();
            if (!noOfSafari) { noOfSafari = 0; }
            if (!availSafari) { availSafari = 0; }

            if (parseInt(noOfSafari) > parseInt(tktToBook)) {
                alert('You can book only ' + tktToBook + ' seat.')
                $("#txt_Totalseat").val(tktToBook);
                return false;
            }
            if (parseInt(availSafari) < parseInt(noOfSafari)) {
                alert('only ' + availSafari + ' seat available.')
                $("#txt_Totalseat").val('');
                return false;
            }
        });
        $("#txt_Totalroom").change(function () {
            var room = $("#txt_Totalroom").val();
            var availRoom = $('#hdn_roomAvail').val();
            if (!room) { room = 0; }
            if (!availRoom) { availRoom = 0; }
            if (availRoom < room) {
                alert('only ' + availRoom + ' room available.')
                $("#txt_Totalroom").val('');
            }
        });


        $('#btn_Submit').click(function (e) {

            var d = new Date($.now());
            //alert(d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds());
            var hitEndTime = d.getDate() + "/" + (d.getMonth() + 1) + "/" + d.getFullYear() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
            $("#hdnFormEnd").val(hitEndTime);
            //return false;

            var iswrongcpt = $("#hdn_cpt").val();
            if (iswrongcpt == '1') {
                alert("Invalid captcha!");
                return false;

            }

            if ($('#ddl_place').val() == '' || $('#ddl_place').val() == '0') {
                document.getElementById("errorPlace").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_place").offset().top }, 600);
                return false;
            }
            if (($('#ddl_Zone').val() == '' || $('#ddl_Zone').val() == '0') && $('#hdZone').val() == 'F') {
                document.getElementById("errorZone").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Zone").offset().top }, 600);
                return false;
            }
            if ($('#txt_dateofarrival').val() == '' || $('#txt_dateofarrival').val() == '0') {
                document.getElementById("errorDate").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#txt_dateofarrival").offset().top }, 600);
                return false;
            }
            if ($('#ddl_Shift').val() == '' || $('#ddl_Shift').val() == '0') {
                document.getElementById("errorShift").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Shift").offset().top }, 600);
                return false;
            }
            if (($('#ddl_vehicle').val() == '' || $('#ddl_vehicle').val() == '0') && $('#hdnSafari').val() == 'F') {
                document.getElementById("errorVehicle").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_vehicle").offset().top }, 600);
                return false;
            }
            if ($("#ddl_vehicle option:selected").text() == 'Gypsy') {
                var length = 6;
            }
            else {
                var length = 20;
            }
            for (var i = 0; i < length; i++) {
                if (i == 0) {
                    if ($('#MemberName' + i).val() == '' && $('#MemberGender' + i).val() == 0 && $('#MemberNationality' + i).val() == 0 && $('#MemberIdType' + i).val() == 0 && $('#MemberIdNo' + i).val() == '') {
                        alert('Enter member details');
                        $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                        $('.MemberName,.MemberIdNo,.MemberTotalCamera').val('');
                        $('.MemberGender,.MemberNationality,.MemberIdType').val(0);
                        e.preventDefault();
                        return false;
                    }
                    else {
                        if ($('#MemberName' + i).val() == '') {
                            alert('Enter Member Name');
                            $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberGender' + i).val() == 0) {
                            alert('Select gender');
                            $('#MemberGender' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberNationality' + i).val() == 0) {
                            alert('Select Nationality');
                            $('#MemberNationality' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberIdType' + i).val() == 0) {
                            alert('select id');
                            $('#MemberIdType' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberIdNo' + i).val() == '') {
                            alert('Enter Member id');
                            $('#MemberIdNo' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        //if ($('#MemberType' + i).val() == 0) {
                        //    alert('Select member type');
                        //    $('#MemberType' + i).focus().css({ 'background-color': 'LightGray' });
                        //    e.preventDefault();
                        //    return false;
                        //}
                        //if ($('#MemberTotalCamera' + i).val() == '') {
                        //    alert('Enter Total Camera');
                        //    $('#MemberTotalCamera' + i).focus().css({ 'background-color': 'LightGray' });
                        //    e.preventDefault();
                        //    return false;
                        //}
                        $('#hdTotalMember').val($('#MemberSLNo' + i).val());
                    }
                }
                else {

                    if ($('#MemberName' + i).val() == '' && $('#MemberGender' + i).val() == 0 && $('#MemberNationality' + i).val() == 0 && $('#MemberIdType' + i).val() == 0 && $('#MemberIdNo' + i).val() == '' && ($('#MemberTotalCamera' + i).val() == '' || $('#MemberTotalCamera' + i).val() == '0')) {

                    }
                    else {
                        if ($('#MemberName' + i).val() == '') {
                            alert('Enter Member Name');
                            $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberGender' + i).val() == 0) {
                            alert('Select gender');
                            $('#MemberGender' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberNationality' + i).val() == 0) {
                            alert('Select Nationality');
                            $('#MemberNationality' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberIdType' + i).val() == 0) {
                            alert('select id');
                            $('#MemberIdType' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        if ($('#MemberIdNo' + i).val() == '') {
                            alert('Enter Member id');
                            $('#MemberIdNo' + i).focus().css({ 'background-color': 'LightGray' });
                            e.preventDefault();
                            return false;
                        }
                        //if ($('#MemberType' + i).val() == 0) {
                        //    alert('Select member type');
                        //    $('#MemberType' + i).focus().css({ 'background-color': 'LightGray' });
                        //    e.preventDefault();
                        //    return false;
                        //}
                        //if ($('#MemberTotalCamera' + i).val() == '') {
                        //    alert('Enter Total Camera');
                        //    $('#MemberTotalCamera' + i).focus().css({ 'background-color': 'LightGray' });
                        //    e.preventDefault();
                        //    return false;
                        //}

                        $('#hdTotalMember').val($('#MemberSLNo' + i).val());
                    }
                }

            }
            if (parseInt($('#hdTotalMember').val(), 10) > 0) {
                var length = parseInt($('#hdTotalMember').val(), 10);
                for (var i = 0; i < length; i++) {
                    if ($('#MemberName' + i).val() == '' && $('#MemberGender' + i).val() == 0 && $('#MemberNationality' + i).val() == 0 && $('#MemberIdType' + i).val() == 0 && $('#MemberIdNo' + i).val() == '' && $('#MemberTotalCamera' + i).val() == '') {
                        $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                        alert('Enter member details continuously');
                        return false;
                    }
                }
            }

            //added by shaan 29-06-2021
            //var MemberGenaretRow = $('#hdnMemberRowVal').val();
            //var FilledRow = $('#hdTotalMember').val();
            //var placeId = $('#ddl_place').val();
            //if (MemberGenaretRow != '' || MemberGenaretRow != 0 && placeId == '68') {
            //    if (parseInt(MemberGenaretRow) < parseInt(FilledRow)) {
            //        window.location.reload();
            //    }
            //}
            //end 29-06-2021

            if ($('.OTPArea').css('display') != 'none') {
                if ($('#txt_UserOtp').val() == '') {
                    document.getElementById("errorOTP").style.display = 'block';
                    return false;
                }
            }

            if (parseInt($('#hdn_availTicket').val(), 10) < parseInt($('#hdTotalMember').val(), 10)) {

                alert('You can book only ' + $('#hdn_availTicket').val() + ' permit');
                return false;
            }
            //var userotp = $("#txt_UserOtp").val();
            //alert(userotp);
            //$.ajax({
            //    type: 'GET',
            //    //headers: {
            //    //    __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            //    //},
            //    url: RootURl + 'api/MobileLogin/CheckOTP',
            //    data: { SSOID: "FMDSSDOITSA", OTP: userotp},
            //    success: function (data) {
            //        debugger;
            //        alert(JSON.stringify(data));
            //        return false;

            //    },
            //    error: function (data) {
            //        alert(JSON.stringify(data));
            //        return false;
            //    }
            //});

            //shaan added new code for Indemnity Bond 16-03-2021 
            if ($("#hdn_IAgreement").val() == "0") {
                alert("Please confirm indemnity bond");
                return false;
            } else {
                $('#btn_Submit').prop('disabled', true);
                $('#frmBookOnLineTicket').submit();
            }            
            //End
        });


        function validateAvailablaty() {
            //Captcha();

            // command by rajveer sharma check load testing
            if ($('#txtInput').val() != '') {
                ////alert('if');
                var status = ValidCaptcha();
                // alert('status='+status);
                if (status == false) {
                    alert('Invalid captcha');
                    //Captcha();
                    $('#txtInput').val('');
                    $('#txtInput').focus();
                    return false;
                }
            }
            else {
                alert('Enter valid captcha');
                $('#txtInput').focus();
                alert('else');
                return false;
            }

            return status;
        }


        $('#btnReset').click(function () {

            //$('.MemberName,.MemberIdNo,.MemberTotalCamera,.MemberFees,.MemberCameraFees').val('');
            $('.MemberName,.MemberIdNo,.MemberFees,').val('');
            $('.MemberGender,.MemberNationality,.MemberIdType,.MemberTotalCamera,.MemberCameraFees').val(0);

        });

        $('#btnCancel').click(function () {

            location.reload(true);
        });

        $('.Print').click(function (e) {

            var $row = jQuery(this).closest('tr');
            var $columns = $row.find('td');
            var id = $(this).parents('tr').find('input[type="hidden"]').val();
            var ticket;
            $.ajax({
                type: 'POST',
                headers: {
                    __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                },
                url: RootURl + 'BookOnlineTicket/PrintTicket',
                data: { ticketid: id },
                success: function (data) {

                    $("#dvContainer").html(data);

                    var contents = $("#dvContainer").html();
                    var frame1 = $('<iframe />');
                    frame1[0].name = "frame1";
                    //frame1.css({ "position": "absolute", "top": "-1000000px" });
                    $("body").append(frame1);
                    var frameDoc = frame1[0].contentWindow ? frame1[0].contentWindow : frame1[0].contentDocument.document ? frame1[0].contentDocument.document : frame1[0].contentDocument;
                    frameDoc.document.open();
                    //Create a new HTML document.
                    frameDoc.document.write('<html><head><title>E-Permit - Forest Department Rajasthan </title>');
                    //Append the external CSS file.
                    frameDoc.document.write('<link href="../css/bootstrap.min.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/mobile.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/dashboard/main.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/dashboard/dashboard.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/dashboard/font-awesome.min.css" rel="stylesheet" />');
                    frameDoc.document.write('</head><body>');
                    //Append the DIV contents.
                    frameDoc.document.write(contents);
                    frameDoc.document.write('</body></html>');
                    frameDoc.document.close();
                    setTimeout(function () {
                        window.frames["frame1"].focus();
                        window.frames["frame1"].print();
                        frame1.remove();
                    }, 500);
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });

            //var aa = "<div class='wrapper'><section class='print-invoice'> <div class='row border-divider'><div class='col-sm-2'>" +
            //           "<a href='#' id='myLogo'><img src='../images/logo.png' width='100' alt='Forest Department, Government of Rajasthan' title='Logo' class=''></a></div>" +
            //          "<div class='col-sm-4 centr'><span class='pdate'>E-Permit - Rajasthan Wildlife</span></div>" +
            //    	  "<div class='col-sm-4'><span class='pull-right pdate'>Space of QR BAR Code</span></div>" +
            //          "<div class='divider'></div></div> </section></div>";
            e.preventDefault();
        });

    });








</script>
<style>
    .capt {
        background-color: #f8f8f8;
        border-color: #e7e7e7;
        border: 1px solid #e7e7e7;
        width: 240px;
        height: 165px;
        float: left;
    }

    #mainCaptcha {
        position: relative;
        padding-left: 15px;
    }

    #refresh {
        width: 42px;
        height: 26px;
    }

    #txtInput, #Button1 {
        position: relative;
        left: 15px;
    }

    .refrs {
        left: 5px;
        position: relative;
    }

    .capt h1 {
        font-size: 14px;
        padding: 10px 0 5px 15px;
        margin: 0;
    }

    #mainCaptcha {
        margin: 0;
        text-decoration: line-through;
        color: #ccc;
        /*text-shadow: 0px 0 5px rgba(0,0,0,0.5);*/
    }
</style>
<script type="text/javascript">

    function CurrentShift() {
        var hours = new Date().getHours();
        var minutes = new Date().getMinutes();
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 1 ? '0' + minutes : minutes;
        var placeID = $("#ddl_place").val();
        var Zone = $('#ddl_Zone').val();

        if (!Zone) { Zone = 0; }
        var values = {
            PlaceID: placeID,
            Zone: Zone
        };

        ////change 19-02-2020
        //This array containes all the disabled array
        var dates = ["20/01/2018", "16/03/2020", "17/03/2020", "18/03/2020"];

        function DisableDates(date) {
            var string = jQuery.datepicker.formatDate('dd/mm/yy', date);
            return [dates.indexOf(string) == -1];
        }


        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/BindShiftByPlaceZoneOnlineBooking',
            success: function (data) {




                $("#txt_dateofarrival").datepicker("destroy");
                $(".datefield").datepicker({
                    minDate: data.list3, maxDate: data.list3, dateFormat: 'dd/mm/yy', changeYear: true,

                    onClose: function (dateText, inst) { $("[id$=auto]").focus(); },
                    beforeShowDay: DisableDates,
                });
                if ($('#hdnDeptKiosk').val() != '') {
                    $("#txt_dateofarrival").datepicker("setDate", data.list3);
                }
                $("#ddl_Shift").append('<option value="' + 0 + '">' + "--Select--" + '</option>');

                for (var x = 0; x < data.list1.length; x++) {

                    if (data.list1[x].isFullDay == 'True') {
                        $('#ddl_Shift').empty();
                        $("#ddl_Shift").append('<option value="' + 3 + '">' + "Full Day" + '</option>');
                        VichelcategoryNew('3');
                    }
                    if (data.list1[x].isMorning == 'True') {
                        $('#ddl_Shift').empty();
                        $("#ddl_Shift").append('<option value="' + 1 + '">' + "Morning" + '</option>');
                        //$("#ddl_Shift").append('<option value="' + 2 + '">' + "Evening" + '</option>');
                        //if (ampm == 'am') {
                        //    $('#ddl_Shift').empty();
                        //    $("#ddl_Shift").append('<option value="' + 1 + '">' + "Morning" + '</option>');
                        //    $("#ddl_Shift").val(1);

                        //}
                        VichelcategoryNew('1');
                    }
                    if (data.list1[x].isEvening == 'True') {
                        $('#ddl_Shift').empty();
                        $("#ddl_Shift").append('<option value="' + 2 + '">' + "Evening" + '</option>');
                        //if (ampm == 'pm') {
                        //    $('#ddl_Shift').empty();
                        //    $("#ddl_Shift").append('<option value="' + 2 + '">' + "Evening" + '</option>');
                        //    $("#ddl_Shift").val(2);

                        //}
                        VichelcategoryNew('2');
                    }

                }
                $('#ddl_Accomo').empty();
                $("#ddl_Accomo").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                for (var i = 0; i < data.list2.length; i++) {
                    $("#ddl_Accomo").append('<option value="' + data.list2[i].Value + '">' + data.list2[i].Text + '</option>');
                }
                // });
            },
            traditional: true,
            error: function (data) { console.log(data) }
        });

    }

    function getDateDiff(date1, date2, interval) {
        var second = 1000,
                minute = second * 60,
                hour = minute * 60,
                day = hour * 24,
                week = day * 7;
        date1 = new Date(date1).getTime();
        date2 = (date2 == 'now') ? new Date().getTime() : new Date(date2).getTime();
        var timediff = date2 - date1;
        if (isNaN(timediff)) return NaN;
        switch (interval) {
            case "years":
                return date2.getFullYear() - date1.getFullYear();
            case "months":
                return ((date2.getFullYear() * 12 + date2.getMonth()) - (date1.getFullYear() * 12 + date1.getMonth()));
            case "weeks":
                return Math.floor(timediff / week);
            case "days":
                return Math.floor(timediff / day);
            case "hours":
                return Math.floor(timediff / hour);
            case "minutes":
                return Math.floor(timediff / minute);
            case "seconds":
                return Math.floor(timediff / second);
            default:
                return undefined;
        }
    }


    function AccommodationRequired() {
        if (document.getElementById('rbl_Accommodationyes').checked) {
            document.getElementById('IsAccommodation').style.display = 'block';
        }
        else document.getElementById('IsAccommodation').style.display = 'none';
    }

    function Vichelcategory() {
        var placeID = $("#ddl_place").val();
        var Zone = $('#ddl_Zone').val();
        if (!Zone) { Zone = 0; }
        $('#ddl_vehicle').empty();
        var values = {
            VehicleCatID: 1,
            PlaceID: placeID,
            Zone: Zone,
            authtk: codeList[0]
        };
        if (codeList.length > 2) {
            while (codeList.length > 2) {
                codeList.pop();
            }
        }
        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/vehicleByCategory',
            success: function (data) {
                if (placeID == "2" || placeID == "68") {
                    if (codeList.length == 2) {
                        codeList[1] = data.obj2;
                    } else if (codeList.length == 1) {
                        codeList.push(data.obj2);
                    }
                }
                $.each(data, function (i, items) {
                    //$("#ddl_vehicle").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                });
                $("#ddl_vehicle").bind('change', function () {
                    //alert('test');
                    //Captcha();
                });
            },
            traditional: true,
            error: function (data) { console.log(data) }
        });
    }

    function VichelcategoryNew(s) {
        debugger;
        var placeID = $("#ddl_place").val();
        var Zone = $('#ddl_Zone').val();
        var Shift = $('#ddl_Shift').val();
        if (!Zone) { Zone = 0; }
        $('#ddl_vehicle').empty();
        var values = {};
        if (s != "") {
            values = {
                VehicleCatID: 1,
                PlaceID: placeID,
                Zone: Zone,
                shiftId: s
            };
        } else {
            values = {
                VehicleCatID: 1,
                PlaceID: placeID,
                Zone: Zone,
                shiftId: Shift
            };
        }

        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/vehicleByCategoryNew',
            success: function (data) {

                $.each(data.obj1, function (i, items) {
                    $("#ddl_vehicle").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                });

            },
            traditional: true,
            error: function (data) { console.log(data) }
        });
    }

    function FeePerMember(id, Nationality) {
        $('#hdFeesCamera').val(0);
        // var districtID = $("#ddl_Districts").val();
        var placeID = $("#ddl_place").val();
        var nationality = Nationality;
        var vehicle = $("#ddl_vehicle").val();
        var name = $("#MemberName" + id).val();
        var gender = $("#MemberGender" + id).val();

        var values = {
            PlaceID: placeID,
            Nationality: nationality,
            MemberType: 2,
            vehicleID: vehicle,
            rowNo: id,
            name: name,
            gender: gender
        };
        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/SelectFee',
            success: function (data) {
                $.each(data, function (i, items) {
                    $('#MemberFees' + id).val(items.TotalPerMemberFees);
                    $('#hdFeesCamera').val(items.TotalPerMemberCameraFees);
                    $('#MemberCameraFees' + id).val(0);
                    $('#MemberFees_TigerProject' + id).val(items.MemberFees_TigerProject);
                    $('#MemberFees_Surcharge' + id).val(items.MemberFees_Surcharge);
                    $('#CameraFees_TigerProject' + id).val(items.CameraFees_TigerProject);
                    $('#CameraFees_Surcharge' + id).val(items.CameraFees_Surcharge);
                    $('#TRDF' + id).val(items.TRDF);

                    $('#BoardingVehicleFee' + id).val(items.BoardingVehicleFee);
                    $('#BoardingGuideFee' + id).val(items.BoardingGuideFee);
                    $('#TotalBoardingFee' + id).val(items.TotalBoardingFee);

                    $('#BoardingVehicleFeeGSTPercentage' + id).val(items.BoardingVehicleFeeGSTPercentage);
                    $('#BoardingVehicleFeeGSTAmount' + id).val(items.BoardingVehicleFeeGSTAmount);
                    $('#BoardingGuideFeeGSTPercentage' + id).val(items.BoardingGuideFeeGSTPercentage);
                    $('#BoardingGuideFeeGSTAmount' + id).val(items.BoardingGuideFeeGSTAmount);

                    $('#hdn_memberfee').val(items.TotalPerMemberFees);
                    $('#hdn_camerafee').val(items.TotalPerMemberCameraFees);

                    $('#hdGSTmessage').html(items.GSTMessage);
                    $('#Vehicle_TRDF' + id).val(items.Vehicle_TRDF);
                    $('#GuidFee_TRDF' + id).val(items.GuidFee_TRDF);
                    $("#AutomatedScript").val(items.AutomatedScript);

                });
            },
            traditional: true,
            error: function (data) { console.log(data) }
        });
    }

    function FeePerCamera(id, Nationality) {
        // $('#hdFeesCamera').val(0);
        var placeID = $("#ddl_place").val();
        var nationality = Nationality;

        var vehicle = $("#ddl_vehicle").val();

        var values = {
            PlaceID: placeID,
            Nationality: nationality,
            MemberType: 2,
            vehicleID: vehicle
        };

        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/SelectFee',
            success: function (data) {
                $.each(data, function (i, items) {
                    $('#MemberFees' + id).val(items.TotalPerMemberFees);
                    $('#hdFeesCamera').val(items.TotalPerMemberCameraFees);
                    // $('#MemberCameraFees' + id).val(0);
                    $('#MemberFees_TigerProject' + id).val(items.MemberFees_TigerProject);
                    $('#MemberFees_Surcharge' + id).val(items.MemberFees_Surcharge);
                    $('#CameraFees_TigerProject' + id).val(items.CameraFees_TigerProject);
                    $('#CameraFees_Surcharge' + id).val(items.CameraFees_Surcharge);
                    $('#TRDF' + id).val(items.TRDF);

                    $('#BoardingVehicleFee' + id).val(items.BoardingVehicleFee);
                    $('#BoardingGuideFee' + id).val(items.BoardingGuideFee);
                    $('#TotalBoardingFee' + id).val(items.TotalBoardingFee);

                    $('#BoardingVehicleFeeGSTPercentage' + id).val(items.BoardingVehicleFeeGSTPercentage);
                    $('#BoardingVehicleFeeGSTAmount' + id).val(items.BoardingVehicleFeeGSTAmount);
                    $('#BoardingGuideFeeGSTPercentage' + id).val(items.BoardingGuideFeeGSTPercentage);
                    $('#BoardingGuideFeeGSTAmount' + id).val(items.BoardingGuideFeeGSTAmount);

                    $('#hdn_memberfee').val(items.TotalPerMemberFees);
                    $('#hdn_camerafee').val(items.TotalPerMemberCameraFees);

                    $('#hdGSTmessage').html(items.GSTMessage);
                    $('#Vehicle_TRDF' + id).val(items.Vehicle_TRDF);
                    $('#GuidFee_TRDF' + id).val(items.GuidFee_TRDF);
                    $("#AutomatedScript").val(items.AutomatedScript);
                });
            },
            traditional: true,
            error: function (data) { console.log(data) }
        });
    }


    function Captcha() {
        //var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
        //        'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
        //        '0', '1', '2', '3', '4', '5', '6', '7', '8', '9');
        //    var i;
        //for (i = 0; i < 6; i++) {
        //    var a = alpha[Math.floor(Math.random() * alpha.length)];
        //    var b = alpha[Math.floor(Math.random() * alpha.length)];
        //    var c = alpha[Math.floor(Math.random() * alpha.length)];
        //    var d = alpha[Math.floor(Math.random() * alpha.length)];
        //    var e = alpha[Math.floor(Math.random() * alpha.length)];
        //    var f = alpha[Math.floor(Math.random() * alpha.length)];
        //    var g = alpha[Math.floor(Math.random() * alpha.length)];
        //}
        //var code = a + ' ' + b + ' ' + ' ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;
        ////if ($("#hdnDeptKioskStatus").val() == "False") {
        //        document.getElementById("mainCaptcha").innerHTML = code
        //document.getElementById("mainCaptcha").value = code
        //    document.getElementById('txtInput').value = '';
        //}
    }
    function ValidCaptcha() {
        var string1 = removeSpaces(document.getElementById('mainCaptcha').value);
        var string2 = removeSpaces(document.getElementById('txtInput').value);
        if (string1 == string2) {
            return true;
        } else {
            return false;
        }
    }
    function removeSpaces(string) {
        return string.split(' ').join('');
    }
</script>

<script src="~/js/jquery.countdown.js"></script>
<script type="text/javascript">
    @*$(document).ready(function () {

        var CurrentDate = '@ViewBag.currentDate';
        alert(CurrentDate);
        //var CurrentDate = '2018/10/08';

        $("#getting-started")
        .countdown(CurrentDate, function (event) {
            $(this).text(
              event.strftime('Booking will start after %H:%M:%S hrs')
            );
        });
    });*@

    //Developed by Rajveer
    $(document).ready(function () {
        //if ($("#hdn_cptmsg").val() != "") {
        //    alert("Invalid Captcha!");
        //}

        var Btype = '@BookingType';
        if (Btype == "1") {
            $.ajax({
                type: 'GET',
                url: RootURl + 'BookOnlineTicket/IsOTPValidationApply',
                success: function (data) {
                    if (data == "1") {
                        $(".OTPArea").show();
                    } else {
                        $(".OTPArea").hide();
                    }

                },
                error: function (data) {
                    $(".OTPArea").hide();
                }
            });
        }





        var CurrentDate = '@ViewBag.currentDate';
        // Set the date we're counting down to
        var countDownDate = new Date(CurrentDate + " 10:00:00").getTime();
        // Set the date we're counting down to
        //var countDownDate = new Date("Oct 8, 2018 10:00:00").getTime();

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get todays date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="demo"
            document.getElementById("getting-started").innerHTML = hours + "h "
            + minutes + "m " + seconds + "s ";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                document.getElementById("getting-started").innerHTML = "EXPIRED";
            }
        }, 1000);

        $("#cptBlock").hide();
    });
    //shaan added 15/01/2021
    function ReLoadCaptcha() {
        $("#txt_cpt").val('');
        $("#hdn_cpt").val('0');
        //$("#cpterror_msg").hide();
        var getUrl = '@Url.Action("ShowCaptcha", "BookOnlineTicket")';
        $.ajax({
            type: 'GET', url: getUrl,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            cache: false,
            success: function (data) {
                $('#imgCaptcha').attr('src', data);
            },
            error: function (data) {
                alert("Error while loading captcha image")
            }
        });
    }
</script>


<div style="display:none" id="dvContainer">

</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <input type="hidden" id="BookingPopUpStatus" value="@ViewData["PopUpContentStatus"]" />
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4><i class="fa-fw"></i>Online Booking Information</h4>
            </div>
            <div class="modal-body" style="padding:40px 50px;">
                @if (ViewData["PopUpContent"] != null)
                {
                    @Html.Raw(ViewData["PopUpContent"])
                }

            </div>
            <div class="modal-footer">

            </div>
        </div>

    </div>
</div>

<div class="modal fade" id="myModal_TicketCancel" role="dialog">

    <div class="modal-dialog">

        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;background-color: #5cb85c;">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4><i class="fa-fw"></i>Permit Cancellation Policy</h4>
            </div>
            <div class="modal-body">
                <ul class="a">
                    @*<li> As per the policy, if you cancel the booking then 50% amount of charged fees excluding emitra & bank charges will be refunded.</li>*@
                    <li> As per the policy, if you cancel the booking then below amount of charged fees excluding emitra & bank charges will be refunded.</li>
                    <li>पॉलिसी के अनुसार, यदि आप बुकिंग निरस्त करते हैं, तो नीचे दी गई शुल्क राशि ई-मित्र और बैंक शुल्क को छोड़कर वापस कर दी जाएगी।</li>
                    <table class="table table-striped table-bordered table-hover">
                        <tr>
                            <th style="color: black;">अवधि बुकिंग दिवस को शामिल करते हुए <br />(Including period bookings day) </th>
                            <th style="color: black;">रिफंड परमिट  राशि का प्रतिशत <br />(Percent of refund permit amount)</th>
                        </tr>
                        <tr>
                            <td>यदि भ्रमण दिवस की तारीख से पहले 90 दिनों के भीतर निरस्त कर दिया जाता है<br /> (If cancellation is made within 90 days before the date of visit)</td>
                            <td>0</td>
                        </tr>
                        <tr>
                            <td>यदि यात्रा की तारीख से पहले 91 से 180 दिनों के भीतर निरस्त कर दिया जाता है <br /> (If cancellation is made within 91-180 days before the date of visit)</td>
                            <td>25</td>
                        </tr>
                        <tr>
                            <td>यदि यात्रा की तारीख से पहले 181 से 270 दिनों के भीतर निरस्त कर दिया जाता है <br /> (If cancellation is made within 181-270 days before the date of visit)</td>
                            <td>50</td>
                        </tr>
                        <tr>
                            <td>यदि यात्रा की तारीख से पहले 271 से अधिक दिनों के भीतर निरस्त कर दिया जाता है <br /> (If cancellation is made 271 or more days before the date of visit)</td>
                            <td>75</td>
                        </tr>
                    </table>
                    <li>Before proceeding please keep ready the required bank details i.e. Bank Name, Branch Name, IFSC Code, Account Type (Saving) & Account No. etc.</li>
                    <li>Note: Full or half day safari, current and tatkal safari bookings are non transferable and non refundable booking once made shall not be cancelled. .</li>
                </ul>
            </div>
            <div class="modal-footer" style="clear:both; padding-left: 50px;">
                <div id="btn" class="col-lg-6">
                    <a class="btn btn-danger" target="_blank" id="btn_FullCancel" href='javascript:void(0)'>
                        Full Cancel
                    </a>
                </div>
                <div id="btn" class="col-lg-6">
                    <a class="btn btn-info" target="_blank" id="btn_PartialCancel" href='javascript:void(0)'>
                        Partial Cancel
                    </a>
                    @*<a class="btn btn-primary" href='@Url.Action("BookOnlineTicket", "BookOnlineTicket" )'>
                            Exit
                        </a>*@

                </div>
            </div>
        </div>

    </div>


</div>

<div class="modal fade" id="myModal_TicketRefund" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4><i class="fa-fw"></i>Permit Refund Policy(For 18th March to 30th June 2020 Visitors)</h4>
            </div>
            <div class="modal-body">
                <ul class="a">
                    <li>As per the policy, if the booking cancelled by the guest, then the full amount of charged fees excluding emitra & bank charges will be refunded.</li>
                    <li>पॉलिसी के अनुसार, आगंतुक के द्वारा बुकिंग निरस्त करने पर पूरी जमा राशि ,ई-मित्र और बैंक शुल्क को छोड़कर वापस कर दी जाएगी।</li>
                    <li>Before proceeding please keep ready the required bank details i.e. Bank Name, Branch Name, IFSC Code, Account Type (Saving) & Account No. etc.</li>
                </ul>
            </div>
            <div class="modal-footer" style="clear:both; padding-left: 50px;">
                <div id="btn" class="col-lg-12">
                    <a class="btn btn-danger" target="_blank" id="btn_Refund" href='javascript:void(0)'>
                        Refund
                    </a>
                </div>

            </div>
        </div>

    </div>


</div>

<div class="modal fade" id="myModalRefund" role="dialog">

    <div class="modal-dialog">

        <input type="hidden" id="TicketID" />
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4><i class="fa-fw"></i>Ticket Cancellation Information</h4>
            </div>
            <div class="modal-body" style="padding:40px 50px;">

                <ul class="a">
                    <li> As per the policy, if you cancel the booking then 50% amount of charged fees excluding emitra & bank charges will be refunded.</li>
                    <li>Before proceeding please keep ready the required bank details i.e. Bank Name, Branch Name, IFSC Code, Account Type (Saving) & Account No. etc.</li>

                </ul>
            </div>
            <div class="modal-footer" style="clear:both">
                <div id="btn" class="col-lg-12">
                    <button type="submit" class="btn btn-success" value="Save" id="btn_submit1">
                        Confirm
                    </button>
                    <button type="button" id="btn_cancel" name="Command" value="Cancel" class="btn btn-danger" data-dismiss="modal">
                        Exit
                    </button>
                </div>
            </div>
        </div>

    </div>


</div>






@if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"]) == "False")
{
    <input type="hidden" value="" id="hdnDeptKiosk" />

}
else
{
    <input type="hidden" value="@Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"])" id="hdnDeptKiosk" />

}

<input type="hidden" value="@Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"])" id="hdnDeptKioskStatus" />
<input type="hidden" id="hdTotalMember" />
<input type="hidden" id="hdZone" />
<input type="hidden" id="hdFeesCamera" />
@*<input type="hidden" id="NEWDATEOPEN"  value="@ViewBag.NEWDATEOPEN"/>
    <input type="hidden" id="CurrentDate" value="@ViewBag.CurrentDate" />*@

<div id="page-wrapper-inn">
    @if (TempData["datevalidation"] != null)
    {
        <script type="text/javascript" language="javascript">
            alert('@TempData["datevalidation"]');
        </script>
    }
    @if (TempData["RowCheck"] != null)
    {
        <script type="text/javascript" language="javascript">
            alert('@TempData["RowCheck"]');
        </script>
    }
    <div class="col-lg-12 pad">
        <h1 class="page-header">@Session["LblPlaceName"] Wildlife Permit Booking</h1>


        <div style="color: #337ab7; float: right; margin-right: 30px; display: none; " id="getting-started"></div>
        <span style="color: #337ab7; float: right; margin-right: 3px; display: none; " id="PlaceAndTime"></span>

        <div class="panel-heading custom_headpan">
            <span>
                <i class="bg-light-blue">Your page Session will be Expired in 10 minutes.</i>
            </span>
        </div>
    </div>

    <div class="panel-heading custom_headpan">
        <marquee id="test" style="behavior" scroll" direction="left" scrolldelay="100" scrollamount="10" onmouseover="this.stop();" onmouseout="this.start();"> *Guest may book online permits for Keoladeo National Park, Bharatpur even for current date.</marquee>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <span style="color:red;">* Mandatory field(s) to fill.</span> <span style="float:right" title="Help doc for onlinebooking">
                        <i class="bg-light-blue" style="color:ButtonText"><a href="~/Help/User_Manual_Online_Ticket_Booking.pdf" target="_blank">Help doc for onlinebooking</a> </i>|
                        <i class="bg-light-blue" style="color:ButtonText"><a href="~/Help/Seat Allocation_20Dec2018.pdf" target="_blank">Seats for RTR</a> </i>|
                        <i class="bg-light-blue" style="color:ButtonText"><a href="~/BookOnlineTicket/ResendCancelationDetails" target="_blank"> My Transation </a> </i>
                    </span>
                </div>
                @if (TempData["ErrorMessage"] != null)
                {
                    <input type="hidden" id="hdn_cptmsg" value="Invalid captcha" />
                }
                else
                {
                    <input type="hidden" id="hdn_cptmsg" value="" />
                }
                @using (Html.BeginForm("FinalSubmit", "BookOnlineTicket", FormMethod.Post, new { data_behavior = "confirm", id = "frmBookOnLineTicket" }))
                {
                    @Html.Hidden("hdn_IAgreement") //Added by shaan 16-03-2021
                    @Html.Hidden("hdnFormStart")
                    @Html.Hidden("hdnFormEnd")
                    @Html.Hidden("hdnVType")
                    @Html.Hidden("hdnMemberRowVal")
                    <input type="text" name="Command" value="Submit" style="display:none" />
                    <div class="panel-body">
                        @Html.AntiForgeryToken()
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div class="col-lg-12">
                                    <div class="form-group un-bold">
                                        <label>Select Protected Area: <span class="mandatory">*</span></label>
                                        @Html.Hidden("AutomatedScript")
                                        @Html.DropDownList("ddl_place", (IEnumerable<SelectListItem>)ViewBag.Place, "--Select--", new { id = "ddl_place", name = "ddl_place", @class = "form-control" })
                                        <span id="errorPlace" style="color: Red; display: none" class="alert-danger1">* Please Select Protected Area.</span>
                                    </div>
                                </div>
                                <div class="col-lg-12">
                                    <div class="form-group un-bold">
                                        <label>Date of Visit:<span class="mandatory">*</span></label>
                                        <input type="text" class="form-control datefield" id="txt_dateofarrival" name="ArrivalDate" title="Enter the date of visit" readonly="readonly" />
                                        <span id="errorDate" style="color: Red; display: none" class="alert-danger1">* Please Select Date.</span>
                                    </div>
                                </div>
                                <div id="IsSafari" style="display:none" class="col-lg-12 un-bold">
                                    <input type="hidden" id="hdnSafari" name="hdnSafari" />
                                    <div class="form-group">
                                        <label>Select Vehicle:</label>
                                        @Html.DropDownList("ddl_vehicle", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control" })
                                        <span id="errorVehicle" style="color: Red; display: none" class="alert-danger1">* Please Select Vehicle.</span>
                                        <label id="lbl_feePerVehicle" for="email"></label>
                                        <input type="hidden" id="hdn_vehiclefee" />
                                    </div>
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div class="col-lg-12 zone">
                                    <div class="form-group un-bold">
                                        <label>Select Zone: <span class="mandatory">*</span></label>
                                        @Html.DropDownList("ddl_Zone", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @id = "ddl_Zone", @name = "ddl_Zone", @class = "form-control" })
                                        <span id="errorZone" style="color: Red; display: none" class="alert-danger1">* Please Select Zone.</span>
                                    </div>
                                </div>
                                <div class="col-lg-12">

                                    <div class="form-group un-bold">
                                        <label>Choose Shift: <span class="mandatory">*</span></label>
                                        <select class="form-control" id="ddl_Shift" name="ddl_Shift"></select>
                                        <span id="errorShift" style="color: Red; display: none" class="alert-danger1">* Please Select Shift.</span>
                                    </div>
                                </div>
                                @*<div class="col-lg-12 un-bold">

                                        <div class="form-group">
                                            <div class="col-lg-12 un-bold" style="clear:both">
                                                <div class="capt">
                                                    <h1>Captcha is case sensative</h1>
                                                    <h2 id="mainCaptcha">Captcha is case sensative</h2>
                                                    <p>
                                                        <input type="text" id="txtInput" />
                                                        <button type="button" id="refresh" onclick="Captcha();" /><i class="fa fa-refresh fa-spin fa-fw refrs"></i>
                                                    </p>


                                                </div>
                                            </div>

                                        </div>

                                    </div>*@
                            </div>
                        </div>





                        <div class="col-lg-12" id="cptBlock">
                            <input type="hidden" id="CptCiper" name="CptCiper" value="" />
                            @*captcha added  15/01/2021*@
                            <div class="col-md-2">
                                <div class="form-group" style="display:none">
                                    <div><a href="#" onclick="ReLoadCaptcha();" title="Refresh"><i class="fa fa-refresh"></i></a></div>
                                    <div><img id="imgCaptcha" src="" style="background-color:black" /></div>
                                    <br />
                                    <label style="display:none;color:red" id="cpterror_msg">Invalid captcha!</label>
                                    <input type="hidden" id="hdn_cpt" value="0" />
                                    <input type="text" placeholder="Fill captcha here..." id="txt_cpt" name="txt_cpt"  ondrop="return false;" onpaste="return false;"/>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 un-bold" style="clear:both;">
                            <div class="form-group" id="btn-cont1" style="display:none;">
                                <label> &nbsp;</label>
                                <button type="button" id="btnCheckTicketAvailablity" class="btn btn-success">Check Permit Availability</button>
                                <button type="reset" id="btnResetCaptcha" class="btn btn-success" onclick="return Captcha();">Reset</button>
                            </div>
                        </div>



                        <div class="col-lg-6" id="divTicketAvailablity">
                            <div class="form-group un-bold" style="margin-top: 20px;">
                                <label id="lbl_NumberofMembersavailable" for="email"></label>
                                <input type="hidden" id="hdn_availTicket" />
                                <br />
                                <label id="lbl_FeePerMember" for="email"></label>
                                <input type="hidden" id="hdn_FeeTigerProject" />
                                <input type="hidden" id="hdn_FeeSurcharge" />
                            </div>
                        </div>

                        <div class="col-lg-12">


                            @Html.Partial("MemberInfo")
                        </div>
                        <div class="col-lg-12" style="display:none" id="divAccomoHead">
                            <label>Accommodation Details</label>
                            <div class="divider"></div>
                        </div>
                        <div class="col-lg-12  un-bold" style="display:none">
                            <label>Is Accommodation Required</label>
                            <form>
                                <input type="radio" id="rbl_Accommodationyes" name="Accommodation" value="Yes" onclick="AccommodationRequired();">Yes
                                <input type="radio" id="rbl_Accommodationno" name="Accommodation" value="No" checked onclick="AccommodationRequired();">No
                            </form>
                        </div>
                        <div id="IsAccommodation" style="display:none">
                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Select Accommodation Type:</label>
                                    @Html.DropDownList("ddl_Accomo", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control" })
                                    <label id="lbl_roomAvail" for="email"></label>
                                    <input type="hidden" id="hdn_roomAvail" />
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div class="form-group un-bold" style="clear:both">
                                    <label>Total Rooms:</label>
                                    <input type="text" class="form-control" id="txt_Totalroom" name="TotalRoom" title="Enter the total number of rooms required for stay"
                                           onkeypress="return isNumberKey(event);" />
                                    <span id="error4" style="color: Red; display: none" class="alert-danger1">* Input digits (0 - 9)</span>
                                    <label id="lbl_PerroomCharge" for="email"></label>
                                    <input type="hidden" id="hdn_perRoomRate" name="RoomCharge" />
                                </div>
                            </div>
                        </div>

                        @if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"]) == "False")
                        {



                            @*<div class="col-lg-12 un-bold" style="clear:both">
                                    <div class="capt">
                                        <h1>Captcha is case sensative</h1>
                                        <h2 id="mainCaptcha">Captcha is case sensative</h2>
                                        <p>
                                            <input type="text" id="txtInput" />
                                            <button type="button" id="refresh" onclick="Captcha();" /><i class="fa fa-refresh fa-spin fa-fw refrs"></i>
                                        </p>


                                    </div>
                                </div>*@

                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        @*<script src='https://www.google.com/recaptcha/api.js' type="text/javascript"></script>
                                            <div class="g-recaptcha" data-sitekey="6LcMi7EZAAAAAGiIuWtZZ-WO4ap3WxAy2Ouy-8u_"></div>*@
                                        @*<div class="g-recaptcha" data-sitekey="6LdcSN4UAAAAAOwa6xaa4weG1bjwufaU5lz8Hglq"></div>*@
                                        @*<div class="capt">
                                                <p>   @Html.MathCaptcha()  <span style="color:red">@TempData["ErrorMessage"]</span> <br /></p>
                                            </div>*@

                                    </div>
                                </div>
                                @*<div class="col-lg-2">
                                        <button type="button" id="btnGetOtp" class="btn btn-success" onclick="GetOtp()">Get OTP</button>
                                        @Html.TextBox("txt_UserOtp", null, new { @class = "form-control", @placeholder = "Enter otp here..", @style = "display:none" })
                                        <label id="lbl_usermsg" style="display:none"></label>
                                        <button type="button" id="btnVerifyOtp" class="btn btn-success" style="display:none" onclick="VerifyOtp()">verify OTP</button>
                                    </div>*@
                            </div><br /><br />
                            <div class="row OTPArea" style="display:none">
                                <div class="col-lg-2">
                                    <button type="button" id="btnGetOtp" class="btn btn-success" onclick="GetOtp()">Get OTP</button>
                                    @*@Html.TextBox("txt_UserOtp",null, new { @class = "form-control", @placeholder = "Enter otp here..", @style = "display:none" })*@
                                    <input type="text" id="txt_UserOtp" name="txt_UserOtp" class="form-control" , placeholder="Enter otp here.." style="display:none" />
                                    <br />

                                    <span id="errorOTP" style="color: Red; display: none" class="alert-danger1">* Please Enter OTP.</span>
                                    <label id="lbl_usermsg" style="display:none"></label>
                                    @*<button type="button" id="btnVerifyOtp" class="btn btn-success" style="display:none" onclick="VerifyOtp()">verify OTP</button>*@
                                </div>
                                <div class="col-lg-2">
                                    <button type="button" id="btnResendOtp" onclick="GetOtp()" style="display:none">Resend OTP</button>
                                </div>
                            </div>


                            @*<div class="col-lg-12 un-bold" style="clear:both">
                                    <div class="capt">
                                        <p>   @Html.MathCaptcha()  <span style="color:red">@TempData["ErrorMessage"]</span> <br /></p>
                                    </div>
                                </div>*@
                            @Html.MathCaptcha("Refresh", "Input", "Is required field.", false)
                            // Html.Captcha("Refresh", "Input", 1, "Is required field.", false);
                            <br /><br />
                        }
                        
                        @*shaan added new code for Indemnity Bond 16-03-2021*@
                        <div id="divIndemnityBond">
                            <div class="col-lg-12" style="border:1px dashed black;">
                                <div style="padding:5px">
                                    <p style="text-align:center">
                                        Form-I A<br />
                                        (See Rule Sub-rule A)<br />
                                        (Indemnity bond) to be submitted by a visitor prior to entering in<br />
                                        Ranthambhore Tiger Reserve
                                    </p>
                                    <p style="text-align:justify">I/ we hereby state that I am / we are aware of the risks involved in visiting the Ranthambhore / Sariska Tiger Reserve. I / we further state that I am / we are entering the Ranthambhore / Sariska Tiger Reserve at my / our own risk and I / we shall be fully liable if any accident occurs. I am / we are fully satisfied with the security arrangement made by the Ranthambhore / Sariska Tiger Reserve management and I am/we are also responsible for damage to my / our belonging (Life, Camera, binocular, video camera etc) I am / we informed that in case of any unforeseen accident the Ranthambhore / Sariska Tiger Reserve management shall not be responsible in any manner whatsoever.</p>
                                    <p>I /we, also agree that should thereby need of any litigation the same would be enable only in a court of law in the state of Rajasthan. I /we submit this indemnity bond with full consciousness.</p>

                                    <input type="radio" name="bond_agreement" value="1"> Agree
                                    <input type="radio" name="bond_agreement" value="0" checked> Disagree
                                </div>
                            </div>
                        </div>
                        @*end*@


                        <div class="col-lg-12 un-bold" style="clear:both;">
                            <div class="form-group FinalBlock" id="btn-cont1">
                                <label> &nbsp;</label>
                                <button type="submit" class="btn btn-success"   value="Submit" id="btn_Submit"> @*name="Command"*@
                                    Submit
                                </button>
                                <button type="button" id="btnReset" class="btn btn-success">Reset</button>
                                <button type="button" id="btnCancel" class="btn btn-danger">Cancel</button>
                            </div>
                        </div>
                        <div id="tbl" class="table-responsive">
                            @*commented by shaan 20-11-2020*@
                            @*<table class="table table-striped table-bordered table-hover custom_table" id="tbl_allTicket">
                                    <thead>
                                        <tr>

                                            <th>
                                                Booking No.
                                            </th>
                                            <th>
                                                Total Permits
                                            </th>
                                            <th>
                                                Arrival Date
                                            </th>
                                            <th>
                                                Paid Amount
                                            </th>


                                            <th>
                                                Action
                                            </th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in ViewData["ticketlist"] as IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(model => item.EmitraTransactionId)
                                                    @Html.HiddenFor(model => item.TicketID)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.TotalMember)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.DateOfArrival)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.TotalAmount)
                                                </td>

                                                <td>
                                                    @if (item.CancleTicketStatus == 1 && item.CancelStatus == 0)
                                                    {
                                                        if (!item.EmitraTransactionId.Trim().StartsWith("C19-"))
                                                        {
                                                            <a onclick="TicketCancel('@Encryption.encrypt(Convert.ToString(item.TicketID))')" style="cursor:pointer;">
                                                                Cancel Ticket
                                                                <input id="hdn_TicketID" type="hidden" value="'@Encryption.encrypt(Convert.ToString(item.TicketID))'" />
                                                            </a>
                                                            <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                        }



                                                    }
                                                    else if (item.CancleTicketStatus != 1 && item.CancleTicketStatus != 0)
                                                    {

                                                        <span style="color: #337ab7">@item.CancleTicketStatusName </span>

                                                    }



                                                    @if (item.CancleTicketStatus == 1 || item.CancleTicketStatus == 0)
                                                    {
                                                        <a href='@Url.Action("PrintWildLifeTicket", "BookOnlineTicket", new { ticketid = Encryption.encrypt(Convert.ToString(item.TicketID)) })' target="_blank">

                                                            Download
                                                        </a>
                                                    }

                                                    @if (item.COVIDStatus == 1 && item.TicketMemberBordingStatus == 0)
                                                    {
                                                        if (item.isDFOApproved == 0)
                                                        {
                                                            <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                            <span style="color: #337ab7">Pending For Approval</span>
                                                        }
                                                        else
                                                        {
                                                            if (item.RefundStatus == 0)
                                                            {
                                                                if (item.PlaceId != 53 && item.PlaceId != 57)
                                                                {
                                                                    <a href='@Url.Action("CovidBooking", "BookOnlineTicket", new { ticketid = Encryption.encrypt(Convert.ToString(item.TicketID)) })'>
                                                                        <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                                        <span style="color: #337ab7"> CovidBooking</span>
                                                                    </a>
                                                                 }
                                                                    <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                                    <a onclick="TicketRefund('@Encryption.encrypt(Convert.ToString(item.TicketID))')" style="cursor:pointer;">
                                                                        Refund
                                                                    </a>

                                                            }
                                                        }
                                                    }
                                                </td>


                                            </tr>

                                        }


                                    </tbody>
                                </table>*@


                            <div class="col-lg-12 no_padding" style="text-align:right">

                                @*@if ((ViewData["ticketlist"] as IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>).Count() > 0)
                                    {
                                        <a href='@Url.Action("WildLifeTicketHistory", "BookOnlineTicket")' target="_blank" class="btn-custom">
                                            View More Tickets
                                        </a>
                                    }*@
                                @*end 20-11-2020*@

                                <a href='@Url.Action("WildLifeTicketHistory", "BookOnlineTicket")' target="_blank" class="btn-custom">
                                    View Booked Permits
                                </a>
                                <a href='@Url.Action("WildLifeBookingList", "BookOnlineTicket")' target="_blank" class="btn-custom">
                                    View Booked Permits(New)
                                </a>
                            </div>



                            @*new added ( WildLife Permit History )  arvind k sharma on 05/10/2017*@
                            <table id="tbl_tkt">
                                <tbody></tbody>
                            </table>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        // shaan 18-12-2020  autofill off
        $("input[type=text]").autocomplete({
            disabled: true
        });
        // shaan 18-12-2020  copy past Invalid on form
        $('body').bind('cut copy paste', function (e) {
            e.preventDefault();
        });


        //shaan 18-12-2020 Disable mouse right click
        $("body").on("contextmenu", function (e) {
            return false;
        });

        document.onkeypress = function (event) {
            event = (event || window.event);
            if (event.keyCode == 123) {
                return false;
            }
        }
        document.onmousedown = function (event) {
            event = (event || window.event);
            if (event.keyCode == 123) {
                return false;
            }
        }
        document.onkeydown = function (event) {
            event = (event || window.event);
            if (event.keyCode == 123) {
                return false;
            }
        }
        // end shaan 18-12-2020



        //Captcha();
        $("#btnGetOtp").prop("disabled", true);
        var PopUpStatus = $('#BookingPopUpStatus').val();
        if (PopUpStatus == 1) {
            $("#myModal").modal();
        }
        ////$("#ddl_Vehicle").bind("click", function (e) {
        ////    //placeChange = $(this).val();
        ////}).bind("change", function (e) {
        ////    alert('test');
        ////    Captcha();
        ////    });

    });

</script>

<script>

    function RefundMsg(id) {

        $('#TicketID').val(id);
        $("#myModalRefund").modal('show');

    };
    function TicketCancel(id) {
        // alert(id);
        $("#myModal_TicketCancel").modal('show');
        var RootUrl = '@Url.Content("~/")';
        $('#TicketID').val(id);
        $('#btn_FullCancel').attr('href', RootUrl + 'BookOnlineTicket/RefundRequest?TicketId=' + id);
        $('#btn_PartialCancel').attr('href', RootUrl + 'BookOnlineTicket/RefundRequestMemberWise?ticketid=' + id);
    };
    function TicketRefund(id) {
        // alert(id);
        $("#myModal_TicketRefund").modal('show');
        var RootUrl = '@Url.Content("~/")';
        $('#TicketID').val(id);
        $('#btn_Refund').attr('href', RootUrl + 'BookOnlineTicket/Refund?TicketId=' + id);

    };
    function GetOtp1() {
        debugger;
        var RootUrl = '@Url.Content("~/")';
        //alert("test");

        $.ajax({
            type: 'GET',
            //headers: {
            //    __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            //},
            url: RootURl + 'api/MobileLogin/GetOTP',
            data: { SSOID: "FMDSSDOITSA" },
            success: function (data) {
                alert(JSON.stringify(data));
                $("#btnGetOtp").hide();
                $("#txt_UserOtp").show();
                $("#lbl_usermsg").show();
                $("#lbl_usermsg").html("OTP sent on your registered Email and Mobile No.");
            },
            error: function (data) {
                alert(JSON.stringify(data));
            }
        });
    };

    function GetOtp() {
        debugger;
        var RootUrl = '@Url.Content("~/")';
        //alert("test");

        $.ajax({
            type: 'GET',
            //headers: {
            //    __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            //},
            url: RootURl + 'BookOnlineTicket/GetOTP',
            data: { MemberCount: "FMDSSDOITSA" },
            success: function (data) {
                debugger;
                //alert(JSON.stringify(data));
                if (data == 1) {
                    $("#btnGetOtp").hide();
                    //$("#btnVerifyOtp").show();
                    //$("#txt_UserOtp").prop("disabled", "false");
                    document.getElementById("errorOTP").style.display = 'none';
                    $("#txt_UserOtp").show();
                    $("#lbl_usermsg").show();
                    $("#btnResendOtp").show();
                    $("#lbl_usermsg").html("OTP sent on your registered Email and Mobile No.");
                }
                else {
                    window.location.href = 'https://sso.rajasthan.gov.in/signin?ru=fmdss';

                    //$("#btnGetOtp").show();
                    //$("#txt_UserOtp").hide();
                    //$("#lbl_usermsg").hide();
                }

            },
            error: function (data) {
                //alert(JSON.stringify(data));
            }
        });
    }

    $("#txt_UserOtp").on("keypress keyup blur", function (event) {
        $(this).val($(this).val().replace(/[^\d].+/, ""));
        if ((event.which < 48 || event.which > 57)) {
            event.preventDefault();
        }
    });

    function VerifyOtp() {
        debugger;
        var RootUrl = '@Url.Content("~/")';
        //alert("test");
        var userOTP = $("#txt_UserOtp").val();
        $.ajax({
            type: 'GET',
            //headers: {
            //    __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            //},
            url: RootURl + 'BookOnlineTicket/VerifyOTP',
            data: { UserOTP: userOTP },
            success: function (data) {
                //alert(JSON.stringify(data));
                if (data == 1) {
                    //$("#btnGetOtp").hide();
                    //$("#txt_UserOtp").show();
                    ////$("#txt_UserOtp").prop("disabled","true");
                    //$("#lbl_usermsg").hide();
                    //$("#lbl_usermsg").html("OTP sent on your registered Email and Mobile No.");
                    //$(".FinalBlock").html("");
                    //$(".FinalBlock").append("<label> &nbsp;</label><button type = 'submit' class= 'btn btn-success' name = 'Command' value ='Submit' id='btn_Submit'>Submit </button > &nbsp;<button type='button' id='btnReset' class='btn btn-success'>Reset</button> &nbsp;<button type='button' id='btnCancel' class='btn btn-danger'>Cancel</button>");
                }
                else {
                    alert("Invalid OTP");
                    //$("#btnGetOtp").show();
                    //$("#txt_UserOtp").hide();
                    //$("#lbl_usermsg").hide();
                    //$(".FinalBlock").html("");
                    //$("#btnVerifyOtp").hide();
                }

            },
            error: function (data) {
                //alert(JSON.stringify(data));
            }
        });
    }
</script>
<script src="~/Scripts/Controller/Common.js"></script>




