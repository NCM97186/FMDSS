@model FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.BudgetExpenditureModel
@{
    ViewBag.Title = "BudgetExpenditureAllocation";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>
    var RootURl = '@Url.Content("~/")';
</script>
<style>
    .hide {
        display: none;
    }

    .center {
        margin-top: 50%;
    }

    #tab1default, #tab2default, #tab3default {
        min-height: 700px;
    }
</style>
<script type="text/javascript">
    var $ = jQuery.noConflict();

    $(function () {

        $(document).ready(function () {

            $("#ExpenditureTilldate").val("0.00");
        });

        $("#ExpenditureTilldate").change(function () {
            if (parseFloat($("#ExpenditureTilldate").val()).toFixed(2) == "0.00") {
                $("#ExpenditureTilldate").val("0.00");
            }
        });

        $("#modal-window").on("click", "#btn-close", function () {
            $("#modal-window").modal("hide");
        });

        $('.gridtable').DataTable({
            responsive: true,
            "bSort": true
        });

        $("#Savepermission").click(function () {

            if ($("#BudgetList > tbody >tr").length < 1) {
                alert('Please add atleast one record');
                return false;
            }
        });
        $('#btnDetails').click(function () {

            if ($('#ExpenditureTilldate').val() == '' || parseFloat($('#ExpenditureTilldate').val()) == 0) {
                $('#ExpenditureTilldate').focus();
                return false;
            }
            if ($('#ExpenditureMonths').val() == '') {

                $('#ExpenditureMonths').focus();
                return false;
            }
            else {

                if (parseFloat($('#ExpenditureTilldate').val()) > parseFloat($('#RemaningAmount').val())) {
                    alert('Expenditure amount cannot exceeds allocated amount!!!');
                    $('#ExpenditureTilldate').focus();
                    return false;
                }

                var values = {

                    FY_ID: $('#BudgetExpenditureModels_FY_ID').val(),
                    BudgetHeadID: $('#BudgetExpenditureModels_BudgetHeadID').val(),
                    SubBudgetHeadID: $('#BudgetExpenditureModels_SubBudgetHeadID').val(),
                    BudgetHeadName: $('#ExpBudgetHeadID').val(),
                    SubBudgetHeadName: $('#ExpSubBudgetHeadID').val(),
                    SchemeID: $('#BudgetExpenditureModels_SchemeID').val(),
                    SchemeName: $('#ExpSchemeID').val(),
                    ActivityID: $('#BudgetExpenditureModels_ActivityID').val(),
                    ActivityName: $('#ExpActivityID').val(),
                    SubActivityID: $('#BudgetExpenditureModels_SubActivityID').val(),
                    SubActivityName: $('#ExpSubActivityID').val(),
                    CIRCLE_CODE: $("#BudgetExpenditureModels_CIRCLE_CODE").val(),
                    CIRCLE_Name: $("#ExpCircle").val(),
                    Division_Name: $("#ExpDivision").val(),
                    ISCircleDivision: $("#BudgetExpenditureModels_ISCircleDivision").val(),
                    Division: $("#BudgetExpenditureModels_Division").val(),
                    AllocatedAmount: $('#AllocatedAmount').val(),
                    ExpenditureTilldate: $('#ExpenditureTilldate').val(),
                    ExpenditureMonths: $('#ExpenditureMonths').val(),
                    BudgetHeadAllocationID: $("#BudgetExpenditureModels_BudgetHeadAllocationID").val(),
                    SanctuaryCode: $("#BudgetExpenditureModels_SanctuaryCode").val(),
                    FinancialYear: $("#ExpFY_ID").val()
                };
                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetExpenditure/AddExpenditureDetails',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    success: function (data) {
                        console.log(data);
                        if (data.rowid != "D") {
                            var id = "'" + data.rowid + "'";
                            var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td style=display:none;>" + data.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + data.BudgetHeadAllocationID + "</td><td>" + values.ExpenditureMonths + " (" + values.FinancialYear + ")</td><td>" + values.CIRCLE_Name + " / " + values.Division_Name + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName + "/" + data.SubActivityName + "</td><td>" + values.BudgetHeadName + " / " + values.SubBudgetHeadName + "</td><td>" + parseFloat(data.AllocatedAmount).toFixed(2) + "</td><td class='CountAmt'>" + parseFloat(data.ExpenditureTilldate).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                            $("#tblDetails").append(rowdata);
                            $("#tblDetailsAdd").append(rowdata);

                            //var previousAmount = parseFloat($('#AllocatedAmount').val());
                            //$('#AllocatedAmount').val(parseFloat(previousAmount) + parseFloat(data.ExpenditureTilldate));
                            CheckRemainingAmount();
                        }
                        else {
                            alert("Records already added!!");
                        }

                    }
                });
            }

        });

        function CheckRemainingAmount() {
            var ExpenditureTilldate = 0;
            if ($('.CountAmt').length > 0) {

                $.each($('.CountAmt'), function (k, v) {
                    ExpenditureTilldate = parseFloat(ExpenditureTilldate) + parseFloat($(this).text().trim());
                });
                $('#RemaningAmount').val((parseFloat($('#AllocatedAmount').val()) - parseFloat(ExpenditureTilldate)).toFixed(2));
            }
            else {
                $('#RemaningAmount').val(parseFloat($('#AllocatedAmount').val()).toFixed(2));
            }



            $('#ExpenditureTilldate').val('0.00');
            $('#ExpenditureMonths').val('');
        }

        $(document).on('click', '.btndelete', function () {

            if (confirm("Are you sure you want to delete this?")) {
                var $item = $(this).closest("tr").find('td');
                var i = 0;
                var ID;
                var ISCircleDivision;
                $.each($item, function (key, value) {
                    if (i == 0) {
                        ID = $(value).text();
                    }
                    if (i == 1) {
                        ISCircleDivision = $(value).text();
                        $(this).closest('tr').remove();
                    }
                    i++;
                });

                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetExpenditure/DeleteExpenditureDetailsCurrentSession',
                    dataType: 'json',
                    data: { Id: ID, ISCircleDivision: ISCircleDivision },
                    success: function (data) {

                        if (data == '1') {
                            CheckRemainingAmount();
                            alert('Data deleted from table');

                        }
                        else {
                            alert('Data not deleted from table please check!!!!');
                        }
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }
            else {
                return false;
            }

        });


    });

    function reload() {
        location.reload(true);
    }

    function AvaliableExpAmount() {
        var Div_Code = $("#BudgetExpenditureModels_Division").val();
        var Cir_Code = $("#BudgetExpenditureModels_CIRCLE_CODE").val();
        if (Div_Code == 'N/A') { Div_Code = 0; }
        if (!Cir_Code) { Cir_Code = 0; }
        if (Div_Code == 0 && Cir_Code == 0) {
            Cir_Code = $('#CircleHQ').val();
        }
        var values = {
            FY_ID: $('#BudgetExpenditureModels_FY_ID').val(),
            BudgetHeadID: $('#BudgetExpenditureModels_BudgetHeadID').val(),
            SubBudgetHeadID: $('#BudgetExpenditureModels_SubBudgetHeadID').val(),
            SchemeID: $('#BudgetExpenditureModels_SchemeID').val(),
            ActivityID: $('#BudgetExpenditureModels_ActivityID').val(),
            SubActivityID: $('#BudgetExpenditureModels_SubActivityID').val(),
            CIRCLE_CODE: Cir_Code,
            Division: Div_Code,
            ISCircleDivision: $("#BudgetExpenditureModels_ISCircleDivision").val()
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetExpAmtDetails", "BudgetExpenditure")',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            success: function (result) {
                if (parseFloat(result.RemaningAmount) == 0) {
                    $('#RemaningAmount').val("0.00");
                    $("#errorRemaining").text("All Amount has been Allocated");
                    $("#Savepermission").addClass('hide');
                }
                else if (result.RemaningAmount == '' || result.RemaningAmount == null) {
                    $('#RemaningAmount').val(parseFloat($('#AllocatedAmount').val()).toFixed(2));
                    $("#errorRemaining").text("");
                    $("#Savepermission").removeClass('hide');
                }
                else {
                    $('#RemaningAmount').val(result.RemaningAmount.toFixed(2));
                    $("#errorRemaining").text("");
                    $("#Savepermission").removeClass('hide');
                }
            },
        });
    }

    function isObjectEmpty(obj) {
        if (obj !== null) {
            return '<p style="color: red;">' + parseFloat(obj).toFixed(2) + '</p>';
        }
        else {
            return parseFloat(0).toFixed(2);
        }
    }
    function GetMonthlyStatus(ID) {
        $("#tblMonthly").empty();
        var tblInfo = null;
        if (ID > 0) {
            $.ajax({
                type: 'GET',
                url: RootURl + 'BudgetExpenditure/BudgetExpenditureAllocationDetails',
                contentType: 'application/json; charset=utf-8',
                data: { ID: ID },
                success: function (result) {

                    tblInfo = {
                        FinancialYear: result.FY_ID,
                        Scheme_Name: result.SchemeID,
                        BudgetHead: result.BudgetHeadID,
                        SubBudgetHead: result.SubBudgetHeadID,
                        Activity_Name: result.ActivityID,
                        SubActivity_Name: result.SubActivityID,
                        ISCircleDivision: result.ISCircleDivision,
                        Circle_Code: result.CIRCLE_CODE,
                        Division_Code: result.Div_Code,
                        SantuaryCode: result.SanctuaryCode,
                        AllocatedAmount: result.AllocatedAmount,
                        FromDate: null,
                        ToDate: null,
                    }


                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetMonthStatusReport", "BudgetMnthProgReport")',
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(tblInfo),
                        success: function (data) {
                            if (data != null && data.list1 != null) {
                                for (var i = 0; i < data.list1.length; i++) {
                                    if (data != null && data.list1 != null) {
                                        var rowdata = "<tr><td>" + data.list1[i].Year + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].January) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].February) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].March) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].April) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].May) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].June) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].July) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].August) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].September) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].October) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].November) + "</td><td>"
                                                   + isObjectEmpty(data.list1[i].December) + "</td></tr>";

                                        $("#tblMonthly").append(rowdata);
                                    }
                                }
                            }

                            console.log(tblInfo);
                            $('#BudgetExpenditureModels_FY_IDs').val(tblInfo.FinancialYear),
                             $('#BudgetExpenditureModels_BudgetHeadIDs').val(tblInfo.BudgetHead),
                             $('#BudgetExpenditureModels_SubBudgetHeadIDs').val(tblInfo.SubBudgetHead),
                             $('#BudgetExpenditureModels_SchemeIDs').val(tblInfo.Scheme_Name),
                             $('#BudgetExpenditureModels_ActivityIDs').val(tblInfo.Activity_Name),
                             $('#BudgetExpenditureModels_SubActivityIDs').val(tblInfo.SubActivity_Name),
                             $("#BudgetExpenditureModels_CIRCLE_CODEs").val(tblInfo.Circle_Code),
                             $("#BudgetExpenditureModels_ISCircleDivisions").val(tblInfo.ISCircleDivision),
                             $("#BudgetExpenditureModels_Divisions").val(tblInfo.Division_Code),
                             $("#BudgetExpenditureModels_SanctuaryCodes").val(tblInfo.SantuaryCode),
                            $("#BudgetExpenditureModels_AllocatedAmounts").val(tblInfo.AllocatedAmount),
                            $('#myModalReport').modal('show');
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });

                },

            });


        }
    }
    function GetBudgetExpenditure(ID) {
        if (ID > 0) {
            $.ajax({
                type: 'GET',
                url: RootURl + 'BudgetExpenditure/BudgetExpenditureAllocationDetails',
                contentType: 'application/json; charset=utf-8',
                data: { ID: ID },
                success: function (result) {
                    $("#BudgetExpenditureModels_FY_ID").val(result.FY_ID);
                    $("#BudgetExpenditureModels_SchemeID").val(result.SchemeID);
                    $("#BudgetExpenditureModels_BudgetHeadID").val(result.BudgetHeadID);
                    $("#BudgetExpenditureModels_SubBudgetHeadID").val(result.SubBudgetHeadID);
                    $("#BudgetExpenditureModels_ActivityID").val(result.ActivityID);
                    $("#BudgetExpenditureModels_SubActivityID").val(result.SubActivityID);
                    $("#BudgetExpenditureModels_AllocatedAmount").val(result.AllocatedAmount.toFixed(2));
                    $("#ExpFY_ID").val(result.FinancialYear);
                    $("#ExpSchemeID").val(result.SchemeName);
                    $("#ExpBudgetHeadID").val(result.BudgetHead);
                    $("#ExpSubBudgetHeadID").val(result.SubBudgetHead);
                    $("#ExpActivityID").val(result.ActivityName);
                    $("#ExpSubActivityID").val(result.SubActivityName);

                    $("#AllocatedAmount").val(result.AllocatedAmount.toFixed(2));
                    $("#BudgetExpenditureModels_CIRCLE_CODE").val(result.CIRCLE_CODE);
                    $("#ExpCircle").val(result.CIRCLE_NAME);
                    $("#BudgetExpenditureModels_Division").val(result.Div_Code);
                    $("#ExpDivision").val(result.Division);
                    $("#BudgetExpenditureModels_ISCircleDivision").val(result.ISCircleDivision);
                    $("#ExpSiteName").val(result.SiteName);
                    $("#ExpRecurring").val(result.RecurringName);
                    $("#BudgetExpenditureModels_BudgetHeadAllocationID").val(result.BudgetHeadAllocationID);
                    $("#BudgetExpenditureModels_SanctuaryCode").val(result.SanctuaryCode);

                    AvaliableExpAmount();
                    $("#modal-window").modal("show");

                },

            });

        }
    }
    function DeleteBudgetExpenditure(ID) {
        if (confirm("Are you sure you want to delete this?")) {

            if (ID != null && ID > 0) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteBudgetExpenditureEntry", "BudgetExpenditure")',
                    dataType: 'json',
                    data: { Id: ID },
                    success: function (data) {
                        if (data == '1') {
                            alert('Data deleted successfully');
                            reload();
                        }
                        else {
                            alert('Data not deleted from table please check!!!!');
                        }
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }
        }
        else {

            return false;
        }
    }
</script>



@using (Html.BeginForm("BudgetExpenditureAllocation", "BudgetExpenditure", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
{

    <div id="modal-window" style="display:none;" title="Transation" class="modal fade">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Budget Expenditure Allocation</h4>
                </div>
                <div class="modal-body">

                    <div class="panel-body">
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.FY_ID)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.SchemeID)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.BudgetHeadID)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.SubBudgetHeadID)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.ActivityID)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.SubActivityID)

                        @Html.HiddenFor(x => x.BudgetExpenditureModels.CIRCLE_CODE)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.Division)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.ISCircleDivision)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.AllocatedAmount)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.BudgetHeadAllocationID)
                        @Html.HiddenFor(x => x.BudgetExpenditureModels.SanctuaryCode)
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Financial Year: <span class="mandatory">*</span></label>
                                @Html.TextBox("FY_ID", null, new { @class = "form-control", @id = "ExpFY_ID", name = "ExpFY_ID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Scheme: <span class="mandatory">*</span></label>
                                @Html.TextBox("SchemeID", null, new { @class = "form-control", @id = "ExpSchemeID", name = "ExpSchemeID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Budget Head: <span class="mandatory">*</span></label>
                                @Html.TextBox("BudgetHeadID", null, new { @class = "form-control", @id = "ExpBudgetHeadID", name = "ExpBudgetHeadID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Budget Sub Head: <span class="mandatory"></span></label>
                                @Html.TextBox("SubBudgetHeadID", null, new { @class = "form-control", @id = "ExpSubBudgetHeadID", name = "ExpSubBudgetHeadID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Activity : <span class="mandatory">*</span></label>
                                @Html.TextBox("ActivityID", null, new { @class = "form-control", @id = "ExpActivityID", name = "ExpActivityID", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Sub Activity: <span class="mandatory">*</span></label>
                                @Html.TextBox("SubActivityID", null, new { @class = "form-control", @id = "ExpSubActivityID", name = "ExpSubActivityID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Site Name: <span class="mandatory"></span></label>
                                    @Html.TextBox("SiteName", null, new { @class = "form-control", @id = "ExpSiteName", name = "ExpSiteName", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Recurring Or Non Recurring:<span class="mandatory"></span></label><br />
                                    @Html.TextBox("Recurring", null, new { @class = "form-control", @id = "ExpRecurring", name = "ExpRecurring", @readonly = "readonly" })
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Office: <span class="mandatory">*</span></label>
                                @Html.TextBox("Circle", null, new { @class = "form-control", @id = "ExpCircle", name = "ExpCircle", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="col-lg-6" id="divisions">
                            <div class="form-group">
                                <label>Division: <span class="mandatory">*</span></label>
                                @Html.TextBox("Division", null, new { @class = "form-control", @id = "ExpDivision", name = "ExpDivision", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Allocated Amount: (lakh)<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetExpenditureModels.AllocatedAmount, new { @class = "form-control", @id = "AllocatedAmount", name = "AvailableAmount", @readonly = "@readonly" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetExpenditureModels.AvailableAmount)</div>

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Remaning Amount: (lakh)<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetExpenditureModels.RemaningAmount, new { @class = "form-control", @id = "RemaningAmount", name = "RemaningAmount", @readonly = "@readonly" })
                                <div id="errorRemaining" class="alert-danger1"></div>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Expenditure till date: (Lakh)<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetExpenditureModels.ExpenditureTilldate, new { @class = "form-control", @id = "ExpenditureTilldate", name = "ExpenditureTilldate" })
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Select months:<span class="mandatory">*</span></label>
                                @Html.DropDownListFor(x => x.BudgetExpenditureModels.ExpenditureMonths, (IEnumerable<SelectListItem>)ViewBag.Months, "--Select--", new { @class = "form-control ", @id = "ExpenditureMonths", name = "ExpenditureMonths" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetExpenditureModels.ExpenditureMonths)</div>
                            </div>
                        </div>
                        <label>Add</label><br>
                        <button type="button" class="btn btn-success" title="Save" name="Command" value="Submit" id="btnDetails" style="width:auto">
                            <i class="fa fa-plus"></i> Add
                        </button>

                        <div class="dataTable_wrapper table-responsive scroll-x simplebar horizontal">
                            <table class="table table-striped table-bordered table-hover" id="BudgetList">
                                <thead>
                                    <tr>
                                        <th>
                                            Budget Master Grouping ID
                                        </th>
                                        <th>
                                            Month (Year)
                                        </th>
                                        <th>
                                            Circle/Division
                                        </th>
                                        <th>
                                            Scheme
                                        </th>
                                        <th>
                                            Activity/Sub Activity
                                        </th>
                                        <th>
                                            Budget/Sub Budget Head
                                        </th>
                                        <th>
                                            Allocated Amount (lakh)
                                        </th>
                                        <th>
                                            Expenditure Amount(Lakh)
                                        </th>
                                        <th>
                                            Action
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="tblDetails"></tbody>
                            </table>

                        </div>
                        <div id="BudgetCir"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" id="Savepermission">Submit</button>
                    <button type="button" id="btn-close" class="btn btn-danger">Close</button>
                </div>
            </div><!-- /.modal-content -->

        </div><!-- /.modal-dialog -->
    </div>
}


<div class="panel-heading"> <span>@Html.Raw(TempData["Message"]) </span> </div>
@Html.Partial("_PartialBudgetLink")
<div class="col-lg-9 pad">
    <div class="col-lg-10">
        <h1 class="page-header">Budget Expenditure (@Session["User"].ToString())</h1>
    </div>
    <div class="col-lg-2">
        <button type="button" class="btn btn-success confirm-toggle" name="Command" value="0" id="AddMaster">
            <i class="fa fa-check"></i> Show Master
        </button>
    </div>
</div>

<div class="row">

    <div class="col-md-9">


        <div class="panel with-nav-tabs panel-default">

            <div class="panel-heading">
                <ul class="nav nav-tabs" id="myTab">
                    <li class="active"><a href="#tab2default" data-toggle="tab"><i class="fa fa-user fa-fw"></i>Budget Allocated List</a></li>
                    <li class=""><a href="#tab3default " data-toggle="tab"><i class="fa fa-comment fa-fw"></i>Budget Expenditure List</a></li>
                </ul>

            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade  in tbl-scroll active" id="tab2default">
                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover gridtable" id="dataTables-example">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Budget Master Grouping ID
                                                </th>
                                                <th>
                                                    Scheme
                                                </th>
                                                <th>
                                                    Budget/Sub Budget Head
                                                </th>
                                                <th>
                                                    Activity/Sub Activity
                                                </th>
                                                <th>
                                                    Allocation at Level (HQ/Circle/Division/Sanctuary)
                                                </th>
                                                <th>
                                                    HQ / Circle / Division / Sanctuary
                                                </th>
                                                <th style="display:none">
                                                    Total Amount (lakh)
                                                </th>
                                                <th>
                                                    Allocated Amount (lakh)
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var item in Model.BudgetAllocationList)
                                            {

                                                <tr>
                                                    <td>
                                                        BUDGETALLOCATION-@item.BudgetHeadAllocationID (@item.FinancialYear)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.SchemeName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.BudgetHead) \ @Html.DisplayFor(model => item.SubBudgetHead)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ActivityName) \ @Html.DisplayFor(model => item.SubActivityName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ISCircleDivision)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.CIRCLE_NAME) \ @Html.DisplayFor(model => item.Division) \ @Html.DisplayFor(model => item.SanctuaryName)
                                                    </td>
                                                    <td style="display:none">
                                                        @Html.DisplayFor(model => item.TotalAmount)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.AllocatedAmount)
                                                    </td>
                                                    <td>
                                                        <i style='cursor:pointer;color:blue' onclick=GetBudgetExpenditure('@item.ID') class='fa'>View</i> /
                                                        <i style='cursor:pointer;color:blue' onclick="GetMonthlyStatus('@item.ID')" class='fa'>Monthly Report</i>


                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>


                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>

                    </div>


                    <div class="tab-pane fade in tbl-scroll " id="tab3default">

                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>

                            <div class="col-lg-12">
                                <div class="table-responsive">

                                    <table class="table table-striped table-bordered table-hover gridtable" id="dataTables-example">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Budget Master Grouping ID
                                                </th>

                                                <th>
                                                    Circle/Division
                                                </th>
                                                <th>
                                                    Scheme
                                                </th>
                                                <th>
                                                    Activity
                                                </th>
                                                <th>
                                                    Budget/Sub Budget Head
                                                </th>
                                                <th>
                                                    Months
                                                </th>
                                                <th>
                                                    Allocated Amount(Lakh)
                                                </th>
                                                <th>
                                                    Expenditure Amount(Lakh)
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var item in Model.BudgetExpenditureList)
                                            {


                                                <tr>
                                                    <td>
                                                        BUDGETALLOCATION-@item.BudgetHeadAllocationID (@item.FinancialYear)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.CIRCLE_NAME) / @Html.DisplayFor(model => item.Division_Name)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.SchemeName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ActivityName) / @Html.DisplayFor(model => item.SubActivityName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.BudgetHead) / @Html.DisplayFor(model => item.SubBudgetHead)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ExpenditureMonths)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.AllocatedAmount)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ExpenditureTilldate)
                                                    </td>
                                                    <td>
                                                        <button type=button class='btn btn-danger btn-circle' onclick="DeleteBudgetExpenditure('@item.rowid')" style=cursor:pointer><i class='fa fa-times'></i></button>
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>


                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>
                    </div>


                    <!-- /.Tab3 -->
                </div>
            </div>
        </div>
    </div>
    <!-- /.Tab1 -->




</div>

<div class="col-lg-12">
    <div class="modal fade in" id="myModalReport" tabindex="-1" role="dialog" aria-hidden="false">
        <div class="modal-dialog" style="width:1000px;">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title" id="myModalLabel">
                        Monthly Progress(in Lacs)
                    </h4>
                </div>
                <br />
                @using (Html.BeginForm("BudgetExpenditureAllocationSaveMonthly", "BudgetExpenditure", FormMethod.Post, new { data_behavior = "confirm", enctype = "multipart/form-data", id = "IdFor" }))
                {
                    <div class="modal-body">
                        <div class="col-xs-12">
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.FY_ID, new { @id = "BudgetExpenditureModels_FY_IDs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.SchemeID, new { @id = "BudgetExpenditureModels_SchemeIDs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.BudgetHeadID, new { @id = "BudgetExpenditureModels_BudgetHeadIDs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.SubBudgetHeadID, new { @id = "BudgetExpenditureModels_SubBudgetHeadIDs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.ActivityID, new { @id = "BudgetExpenditureModels_ActivityIDs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.SubActivityID, new { @id = "BudgetExpenditureModels_SubActivityIDs" })

                            @Html.HiddenFor(x => x.BudgetExpenditureModels.CIRCLE_CODE, new { @id = "BudgetExpenditureModels_CIRCLE_CODEs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.Division, new { @id = "BudgetExpenditureModels_Divisions" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.ISCircleDivision, new { @id = "BudgetExpenditureModels_ISCircleDivisions" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.AllocatedAmount, new { @id = "BudgetExpenditureModels_AllocatedAmounts" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.BudgetHeadAllocationID, new { @id = "BudgetExpenditureModels_BudgetHeadAllocationIDs" })
                            @Html.HiddenFor(x => x.BudgetExpenditureModels.SanctuaryCode, new { @id = "BudgetExpenditureModels_SanctuaryCodes" })
                            @foreach (var kvpair in Model.DictionaryList)
                            {
                                <div class="col-lg-4">
                                    <div class="form-group">
                                        <label> @kvpair.Key<span class="mandatory"></span></label>
                                        @Html.TextBoxFor(model => model.DictionaryList[kvpair.Key], new { @class = "form-control" })
                                    </div>
                                </div>


                            }


                        </div>
                        <!-- From URL Get -->
                        <label id="lbl1">Monthly Progress(in Lacs) :</label>
                        <table id="temp1" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Year</th>
                                    <th>January</th>
                                    <th>February</th>
                                    <th>March</th>
                                    <th>April</th>
                                    <th>May</th>
                                    <th>June</th>
                                    <th>July</th>
                                    <th>August</th>
                                    <th>September</th>
                                    <th>October</th>
                                    <th>November</th>
                                    <th>December</th>
                                </tr>
                            </thead>
                            <tbody id="tblMonthly"></tbody>
                        </table>



                    </div>
                    <div class="modal-footer" id="fot-f">
                        <div id="btn" class="col-lg-12">
                            <button class="btn btn-success" type="submit" value="Save" style="width: auto">
                                <i class="fa fa-times fa-fw"></i> Save
                            </button>
                            <button name="button" class="btn btn-danger" type="submit" value="Cancel" data-dismiss="modal" style="width: auto">
                                <i class="fa fa-times fa-fw"></i> Close
                            </button>

                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- /.modal-dialog -->
    </div>

</div>


<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


