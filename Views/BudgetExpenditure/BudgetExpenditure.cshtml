@model FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.View_Budget_Expenditure

@{
    ViewBag.Title = "BudgetExpenditure";
    //Layout = "~/Views/Shared/Forestlayout.cshtml";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .hide {
        display: none;
    }
</style>
<script src="~/js/jquery.min.js"></script>

<div id="page-wrapper-inn">

    @if (TempData["Message"] != null)
    {
        <script type="text/javascript" language="javascript">
            alert('@TempData["Message"]');
        </script>
    }
    @Html.Partial("_PartialBudgetLink")
    <div class="col-lg-12 pad">
        <div class="col-lg-10">
            <h1 class="page-header">Budget Expenditure(@Session["User"].ToString())</h1>
        </div>
        <div class="col-lg-2">
            <button type="button" class="btn btn-success confirm-toggle" name="Command" value="0" id="AddMaster">
                <i class="fa fa-check"></i> Show Master
            </button>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <!--<div class="panel-heading">Processing Fees</div>-->
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <!--Add New Btn-->
                    <div class="col-lg-3 rgt pull-right">
                        <button type="button" class="btn btn-success pull-right btn_pp" data-toggle="modal" id="btnAddActivity" data-target="#myActivity" title="Add Activity" data-backdrop="static" data-keyboard="false">
                            <i class="fa fa-plus"></i> Budget-Expenditure
                        </button>
                    </div>
                    <div class="dataTable_wrapper table-responsive scroll-x simplebar horizontal">
                        <table class="table table-striped table-bordered table-hover gridtable" id="dataTables-example">
                            <thead>
                                <tr>
                                    <th>
                                        Budget Master Grouping ID
                                    </th>

                                    <th>
                                        Circle/Division
                                    </th>
                                    <th>
                                        Scheme
                                    </th>
                                    <th>
                                        Activity
                                    </th>
                                    <th>
                                        Budget/Sub Budget Head
                                    </th>
                                    <th>
                                        Months
                                    </th>
                                    <th>
                                        Allocated Amount(Lakh)
                                    </th>
                                    <th>
                                        Expenditure Amount(Lakh)
                                    </th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in ViewData["ExpendList"] as IEnumerable<FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.View_Budget_Expenditure>)
                                {

                                    <tr>
                                        <td>                                           
                                            BUDGETALLOCATION-@item.BudgetHeadAllocationID
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.CIRCLE_NAME)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.SchemeName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.ActivityName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.BudgetHead)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.ExpenditureMonths)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.AllocatedAmount)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(model => item.ExpenditureTilldate)
                                        </td>                                        
                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>


                </div>
                <div class="modal fade" id="myActivity" role="dialog">
                    <div class="modal-dialog modal-lg">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">
                                    &times;
                                </button>
                                <h4 class="modal-title" id="activityLabel">Budget Expenditure</h4>
                            </div>
                            <div class="modal-body">
                                <div role="form">
                                    @using (Html.BeginForm("Submit", "BudgetExpenditure", FormMethod.Post, new { data_behavior = "confirm", enctype = "multipart/form-data", id = "IdFor" }))
                                    {
                                        <div class="panel-body">
                                            @Html.HiddenFor(x => x.BudgetHeadAllocationID, new { @id = "BudgetHeadAllocationID", name = "BudgetHeadAllocationID" })
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Financial Year: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.FY_ID, (IEnumerable<SelectListItem>)ViewBag.FinancialYear, "--Select--", new { @class = "form-control", @id = "FY_ID", name = "FY_ID" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.FY_ID)</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Scheme: <span class="mandatory">*</span></label>

                                                    @Html.DropDownListFor(x => x.SchemeID, (IEnumerable<SelectListItem>)ViewBag.Scheme, "--Select--", new { @class = "form-control", @id = "SchemeID", name = "SchemeID" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.SchemeID)</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Budget Head: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.BudgetHeadID, (IEnumerable<SelectListItem>)ViewBag.BudgetHead, "--Select--", new { @class = "form-control", @id = "BudgetHeadID", name = "BudgetHeadID" })
                                                    @*<div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetHeadID)</div>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Budget Sub Head: <span class="mandatory"></span></label>
                                                    @Html.DropDownListFor(x => x.SubBudgetHeadID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "SubBudgetHeadID", name = "SubBudgetHeadID" })
                                                    @*<div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.SubBudgetHeadID)</div>*@
                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Activity : <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.ActivityID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "ActivityID", name = "ActivityID" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.ActivityID)</div>
                                                </div>
                                            </div>

                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Sub Activity: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.SubActivityID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", @id = "SubActivityID", name = "SubActivityID" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.SubActivityID)</div>
                                                </div>
                                            </div>
                                          
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Select Any option <span class="mandatory"></span></label><br />
                                                    @Html.RadioButtonFor(s => s.ISCircleDivision, "Circle", new { @class = "ISCircleDivision", @checked = "checked" }) Circle
                                                    @Html.RadioButtonFor(s => s.ISCircleDivision, "Division", new { @class = "ISCircleDivision" }) Division
                                                    @Html.RadioButtonFor(s => s.ISCircleDivision, "HQ", new { @class = "ISCircleDivision" }) HQ

                                                </div>
                                            </div>
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label>Circle: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.CIRCLE_CODE, (IEnumerable<SelectListItem>)ViewBag.Circle, "--Select--", new { @class = "form-control", @id = "CIRCLE_CODE", name = "CIRCLE_CODE" })

                                                    @Html.DropDownListFor(model => model.CIRCLE_CODE, new List<SelectListItem> {
                                                 new SelectListItem{Text="HQ",Value="HQ"}}, new { @class = "form-control hide", @id = "CircleHQ" })
                                                    @*<div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetHeadID)</div>*@
                                                </div>
                                            </div>

                                            <div class="col-lg-4" id="divisions" style="display:none">
                                                <div class="form-group">
                                                    <label>Division: <span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.Division, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control ", @id = "Division", name = "Division" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.Division)</div>
                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label>Avaliable Amount: (Lakh)<span class="mandatory">*</span></label>
                                                    @Html.TextBoxFor(x => x.AvailableAmount, new { @class = "form-control", @id = "AvailableAmount", name = "AvailableAmount", @readonly = "@readonly" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.AvailableAmount)</div>

                                                </div>
                                            </div>

                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label>Allocated Amount: (Lakh)<span class="mandatory">*</span></label>
                                                    @Html.TextBoxFor(x => x.AllocatedAmount, new { @class = "form-control", @id = "AllocatedAmount", name = "AllocatedAmount", @readonly = "@readonly" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.AllocatedAmount)</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label>Expenditure till date: (Lakh)<span class="mandatory">*</span></label>
                                                    @Html.TextBoxFor(x => x.ExpenditureTilldate, new { @class = "form-control", @id = "ExpenditureTilldate", name = "ExpenditureTilldate" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.ExpenditureTilldate)</div>
                                                </div>
                                            </div>
                                            <div class="col-lg-4">
                                                <div class="form-group">
                                                    <label>Select months:<span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(x => x.ExpenditureMonths, (IEnumerable<SelectListItem>)ViewBag.Months, "--Select--", new { @class = "form-control ", @id = "ExpenditureMonths", name = "ExpenditureMonths" })
                                                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.ExpenditureMonths)</div>
                                                </div>
                                            </div>
                                            <label>Add</label><br>
                                            <button type="button" class="btn btn-success" title="Save" name="Command" value="Submit" id="btnDetails" style="width:auto">
                                                <i class="fa fa-plus"></i> Add
                                            </button>
                                            <div class="dataTable_wrapper table-responsive scroll-x simplebar horizontal">
                                                <table class="table table-striped table-bordered table-hover" id="table1">
                                                    <thead>
                                                        <tr>
                                                            <th>
                                                                Budget Master Grouping ID
                                                            </th>     
                                                            <th>
                                                                Circle/Division
                                                            </th>
                                                            <th>
                                                                Scheme
                                                            </th>
                                                            <th>
                                                                Activity/SubActivity
                                                            </th>
                                                            <th>
                                                                Budget/Sub Budget Head
                                                            </th>
                                                            <th>
                                                                Allocated Amount(Lakh)
                                                            </th>
                                                            <th>
                                                                Expenditure Amount(Lakh)
                                                            </th>
                                                            <th>
                                                                Action
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tblDetails"></tbody>
                                                </table>
                                                <table style="display:none" class="table table-striped table-bordered table-hover" id="table2">
                                                    <thead>
                                                        <tr>
                                                            <th>
                                                                Circle/Division
                                                            </th>
                                                            <th>
                                                                Scheme
                                                            </th>
                                                            <th>
                                                                Activity/SubActivity
                                                            </th>
                                                            <th>
                                                                Budget/Sub Budget Head
                                                            </th>
                                                            <th>
                                                                Allocated Amount(Lakh)
                                                            </th>
                                                            <th>
                                                                Expenditure Amount(Lakh)
                                                            </th>
                                                            <th>
                                                                Action
                                                            </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tblDetailsAdd"></tbody>
                                                </table>

                                            </div>
                                            <div id="BudgetCir"></div>
                                            <div class="btn-padd">
                                                <div id="btn" class="col-lg-12">
                                                    <button type="button" class="btn btn-success confirm-toggle" name="Command" value="submit" id="Savepermission">
                                                        <i class="fa fa-check"></i> Submit
                                                    </button>

                                                    <button type="reset" class="btn btn-warning" onclick="reload(); return false;">
                                                        <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                                                    </button>
                                                    <button type="submit" name="Command" value="Cancel" class="btn btn-danger" onclick="reload(); return false;">
                                                        <i class="fa fa-times fa-fw"></i> Cancel
                                                    </button>

                                                </div>
                                            </div>
                                        </div>

                                      

                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


</div>
<style>

    #table1 {
        display: block;
        overflow: scroll;
    }


</style>
 <script>
                var RootURl = '@Url.Content("~/")';
            </script>
 <script>

                $(function () {                   
                    $('.gridtable').DataTable({
                        responsive: true,
                        "bSort": true
                    });


                    $("#ExpenditureTilldate").keypress(function (event) {

                        if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                            if ((event.which != 46 || $(this).val().indexOf('.') != -1)) {
                                alert('Multiple Decimals are not allowed');
                            }
                            event.preventDefault();
                        }
                        if (this.value.indexOf(".") > -1 && (this.value.split('.')[1].length > 1)) {
                            alert('Two numbers only allowed after decimal point');
                            event.preventDefault();
                        }

                    });
                    $("#ExpenditureTilldate").blur(function () {
                        if ($(this).val() != '') {
                            $("#ExpenditureTilldate").val(parseFloat($(this).val()).toFixed(2));
                        }
                    });
                  
                    $.ajax({
                        type: 'POST',
                        url: RootURl + "BudgetExpenditure/BudgetAllocationExpenditureList",
                        dataType: 'json',
                        data: {},
                        success: function (data) {

                            $.each(data, function (i, item) {

                                var id = "'" + item.rowid + "'";
                                var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + item.BudgetHeadAllocationID + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + parseFloat(item.ExpenditureTilldate).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                                $("#tblDetails").append(rowdata);                                                                
                            });
                        },
                    });


                    $("#Savepermission").click(function () {
                        var cirlist = new Array();
                        $("#table1 tr:not(:first)").each(function () {
                            var tds = $(this).find("td");
                            var SStudent = { ID: $(tds[0]).html(), ISCircleDivision: $(tds[1]).html() }
                            cirlist.push(SStudent);
                        });
                        $.ajax({
                            url: '@Url.Action("AjaxSubmit", "BudgetExpenditure")',
                            dataType: "html",
                            data: JSON.stringify(cirlist),
                            type: "POST",
                            contentType: "application/json; charset=utf-8",
                            success: function (result) {

                                if (result > 0) {
                                    alert('Data inserted sucessfully');
                                    reload();
                                }
                                else {
                                    alert('Data not inserted please contact your system administration!!!');
                                }
                            },
                            error: function (xhr) {
                                alert("error");
                            }
                        });
                    });


                    var FY_Id;
                    $("#FY_ID").bind("click", function (e) {
                        if ($('#FY_ID').val() != 0) {
                            FY_Id = $('#FY_ID').val();
                        }
                    }).bind("change", function (e) {
                        var FY_ID = $('#FY_ID').val();
                        if (FY_ID != '') {
                            if (FilterTable() == true) {

                            }
                            else {
                                $('#FY_ID').val(FY_Id);
                            }
                        }
                    });                 

                    var BudgetHeadID;
                    $("#BudgetHeadID").bind("click", function (e) {

                        if ($('#BudgetHeadID').val() != 0 || $('#BudgetHeadID').val() != '') {
                            BudgetHeadID = $('#BudgetHeadID').val();
                        }
                        }).bind("change", function (e) {
                        var budgetHead = $('#BudgetHeadID').val();
                        if (budgetHead != '') {
                            if (FilterTable() == true) {
                                $("#SubBudgetHeadID").empty();
                                var option = $("<option />");
                                option.attr("value", '0').text('--Select--');
                                $('#SubBudgetHeadID').append(option);
                                $.ajax({
                                    type: 'POST',
                                    url: RootURl + 'BudgetExpenditure/GetBudgetSubHead',
                                    dataType: 'json',
                                    data: { budgetHead: budgetHead },
                                    success: function (data) {
                                        $.each(data, function (i, items) {

                                            $("#SubBudgetHeadID").append('<option value="' + items.Value + '">' +
                                                items.Text + '</option>');
                                        });

                                        $("#SubBudgetHeadID option").each(function () {
                                            if ($(this).text().trim().toLowerCase() == 'none') {
                                                $(this).attr("selected", "selected");
                                            }
                                        });
                                    },
                                });
                            }
                            else {

                                $('#BudgetHeadID').val(BudgetHeadID);
                            }
                        }

                        });

                    var SubBudgetHeadID;
                    $("#SubBudgetHeadID").bind("click", function (e) {
                        if ($('#SubBudgetHeadID').val() != 0) {
                            SubBudgetHeadID = $('#SubBudgetHeadID').val();
                        }
                    }).bind("change", function (e) {
                        var SubBudgetHeadId = $('#SubBudgetHeadID').val();
                        if (SubBudgetHeadId != '') {

                            if (FilterTable() == true) {

                            }
                            else {

                                $('#SubBudgetHeadID').val(SubBudgetHeadID);
                            }
                        }

                    });

                    var SchemeID;
                    $("#SchemeID").bind("click", function (e) {
                        if ($('#SchemeID').val() != 0) {
                            SchemeID = $('#SchemeID').val();
                        }
                        }).bind("change", function (e) {
                        if ($('#SchemeID').val() != '') {
                            if (FilterTable() == true) {
                                $("#ActivityID").empty();
                                var option = $("<option />");
                                option.attr("value", '0').text('--Select--');
                                $('#ActivityID').append(option);
                                $.ajax({
                                    type: 'POST',
                                    url: RootURl + "BudgetExpenditure/GetActivity",
                                    dataType: 'json',
                                    data: {},
                                    success: function (data) {
                                        $.each(data, function (i, items) {

                                            $("#ActivityID").append('<option value="' + items.Value + '">' +
                                             items.Text + '</option>');
                                        });
                                    },
                                });
                            }
                            else {
                                $('#SchemeID').val(SchemeID);
                            }
                        }
                    });



                    var ActivityId;
                    $("#ActivityID").bind("click", function (e) {

                        if ($('#ActivityID').val() != 0) {
                            ActivityId = $('#ActivityID').val();
                        }
                    }).bind("change", function (e) {

                        var ActivityID = $('#ActivityID').val();
                        if (FilterTable() == true) {
                            $("#SubActivityID").empty();
                            if (ActivityID != '') {
                                var option = $("<option />");
                                option.attr("value", '0').text('--Select--');
                                $('#SubActivityID').append(option);
                                $.ajax({
                                    type: 'POST',
                                    url: RootURl + 'BudgetExpenditure/GetSubActivity',
                                    dataType: 'json',
                                    data: { ActivityID: ActivityID },
                                    success: function (data) {
                                        $.each(data, function (i, items) {

                                            $("#SubActivityID").append('<option value="' + items.Value + '">' +
                                             items.Text + '</option>');

                                        });
                                        $("#SubActivityID option").each(function () {
                                            if ($(this).text().trim().toLowerCase() == 'none') {
                                                $(this).attr("selected", "selected");
                                            }
                                        });
                                    },

                                });
                            }
                        }
                        else {

                            $('#ActivityID').val(ActivityId);
                        }

                    });


                    var SubActivityID;
                    $("#SubActivityID").bind("click", function (e) {
                        if ($('#SubActivityID').val() != 0) {
                            SubActivityID = $('#SubActivityID').val();
                        }
                        }).bind("change", function (e) {
                        var SubActivityId = $('#SubActivityID').val();
                        if (SubActivityId != '') {

                            if (FilterTable() == true) {
                              
                            }
                            else {
                                $('#SubActivityID').val(SubActivityID);
                            }
                        }
                    });


                    //$('#SubActivityID').change(function (e) {
                    //    FilterTable();

                    //});


                    //   $('#SubActivityID').change(function (e) {


                    //var values = {
                    //    FY_ID: $('#FY_ID').val(),
                    //    BudgetHeadID: $('#BudgetHeadID').val(),
                    //    SubBudgetHeadID: $('#SubBudgetHeadID').val(),

                    //    SchemeID: $('#SchemeID').val(),
                    //    ActivityID: $('#ActivityID').val(),
                    //    SubActivityID: $('#SubActivityID').val()

                    //}
                    //$.ajax({
                    //    type: 'POST',
                    //    url: RootURl + 'BudgetAllocationCircle/GetAllocatedAmtDetails',
                    //    contentType: 'application/json; charset=utf-8',
                    //    data: JSON.stringify(values),
                    //    success: function (data) {

                    //        $('#AvailableAmount').val(data.totalAvaliableAmount);
                    //    },

                    //});

                    //  });

                    @*var CIRCLE_CODE;
                    $("#CIRCLE_CODE").bind("click", function (e) {

                        if ($('#CIRCLE_CODE').val() != 0) {
                            CIRCLE_CODE = $('#CIRCLE_CODE').val();
                        }
                    }).bind("change", function (e) {

                        var circleCode = $('#CIRCLE_CODE').val();
                        if (FilterTable() == true) {
                            if ($(".ISCircleDivision:checked").val() == "Division") {
                                $("#Division").empty();
                                if (circleCode != '') {
                                    var option = $("<option />");
                                    option.attr("value", '0').text('--Select--');
                                    $('#Division').append(option);
                                    $.ajax({
                                        type: 'POST',
                                        url: '@Url.Action("GetDivision","BudgetExpenditure")',
                                        dataType: 'json',
                                        data: { circleCode: $("#CIRCLE_CODE").val() },
                                        success: function (circle) {
                                            $.each(circle, function (i, items) {
                                                $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                                            });
                                        },

                                    });
                                }
                            }
                            else {
                                if ($('#CIRCLE_CODE').val() != '') {

                                    AvaliableAmount();
                                }
                            }
                        }
                        else {

                            $('#CIRCLE_CODE').val(CIRCLE_CODE);
                        }

                    });*@


                    $('#CIRCLE_CODE').change(function (e) {
                        if ($(".ISCircleDivision:checked").val() == "Division") {
                            $("#Division").empty();
                            var option = $("<option />");
                            option.attr("value", '0').text('--Select--');
                            $('#Division').append(option);
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("GetDivision","BudgetExpenditure")',
                                dataType: 'json',
                                data: { circleCode: $("#CIRCLE_CODE").val() },
                                success: function (circle) {
                                    $.each(circle, function (i, items) {
                                        $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                                    });
                                },
                                error: function (ex) {
                                    alert('Failed to retrieve states.' + ex);
                                }

                            });

                            return false;
                        }
                        else {
                            if ($('#CIRCLE_CODE').val() != '') {

                                AvaliableAmount();
                            }
                        }
                       // FilterTable();
                    });

                    //var Division;
                    //$("#Division").bind("click", function (e) {
                    //    if ($('#Division').val() != 0) {
                    //        Division = $('#Division').val();
                    //    }
                    //}).bind("change", function (e) {
                    //    var DivisionId = $('#Division').val();
                    //    if (DivisionId != '') {

                    //        if (FilterTable() == true) {
                    //            AvaliableAmount();
                    //        }
                    //        else {
                    //            $('#Division').val(Division);
                    //        }
                    //    }
                    //});

                    $('#Division').change(function (e) {

                        if ($('#Division').val() != '') {

                            AvaliableAmount();
                        }

                    });

                    //var CircleHQ;
                    //$("#CircleHQ").bind("click", function (e) {
                    //    if ($('#CircleHQ').val() != 0) {
                    //        CircleHQ = $('#CircleHQ').val();
                    //    }
                    //}).bind("change", function (e) {
                    //    var Circlehq = $('#CircleHQ').val();
                    //    if (Circlehq != '') {

                    //        if (FilterTable() == true) {
                    //            AvaliableAmount();
                    //        }
                    //        else {
                    //            $('#CircleHQ').val(CircleHQ);
                    //        }
                    //    }
                    //});

                    $('#CircleHQ').change(function () {

                        AvaliableAmount();

                    });

                    $('#btnDetails').click(function () {


                        if ($('#FY_ID').val() == '') {

                            $('#FY_ID').focus();
                            return false;
                        }
                        if ($('#SchemeID').val() == '') {

                            $('#SchemeID').focus();
                            return false;
                        }
                        if ($('#ActivityID').val() == '') {

                            $('#ActivityID').focus();
                            return false;
                        }
                        if ($('#SubActivityID').val() == '') {

                            $('#SubActivityID').focus();
                            return false;
                        }
                        if ($('#BudgetHeadID').val() == '') {

                            $('#BudgetHeadID').focus();
                            return false;
                        }
                        if ($('#SubBudgetHeadID').val() == '') {

                            $('#SubBudgetHeadID').focus();
                            return false;
                        }                                               
                        if ($(".ISCircleDivision:checked").val() == "Division") {
                            if ($('#Division').val() == '' || $('#Division').val() == 'undefined') {
                                $('#Division').focus();
                                return false;
                            }
                        }
                        else if ($(".ISCircleDivision:checked").val() == "Circle") {
                            if ($('#CIRCLE_CODE').val() == '' || $('#CIRCLE_CODE').val() == 'undefined') {
                                $('#CIRCLE_CODE').focus();
                                return false;
                            }
                        }
                        else if ($(".ISCircleDivision:checked").val() == "HQ") {
                            if ($('#CircleHQ').val() == '' || $('#CircleHQ').val() == 'undefined') {
                                $('#CircleHQ').focus();
                                return false;
                            }
                        }

                        if ($('#ExpenditureTilldate').val() == '' || parseFloat($('#ExpenditureTilldate').val()) == 0) {
                            $('#ExpenditureTilldate').focus();
                            return false;
                        }
                        if ($('#ExpenditureMonths').val() == '') {

                            $('#ExpenditureMonths').focus();
                            return false;
                        }
                        else {
                            var Division = '0';
                            var Circles = "0";
                            if ($(".ISCircleDivision:checked").val() == "Division") {
                                if ($('#Division').val() != '' && $('#Division').val() != 'undefined') {
                                    Division = $('#Division').val();
                                    Circles = $("#CIRCLE_CODE").val();
                                }
                            }

                            if (parseFloat($('#AllocatedAmount').val()) == 0) {

                                alert('Allocate amount to selected circle/division before proceeds!!!');
                                $('#AllocatedAmount').focus();
                                return false;
                            }
                            if (parseFloat($('#ExpenditureTilldate').val()) > parseFloat($('#AllocatedAmount').val())) {                               
                                alert('Expenditure amount cannot exceeds allocated amount!!!');
                                $('#ExpenditureTilldate').focus();
                                return false;
                            }
                            if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Circles = $("#CIRCLE_CODE").val();
                            }
                            if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                                Circles = $("#CircleHQ").val();
                            }
                            //if (parseFloat($('#AvailableAmount').val()) < parseFloat($('#AllocatedAmount').val()) + parseFloat($('#ExpenditureTilldate').val())) {
                            //    alert('Allocated and Expenditure amount cannot exceeds Total amount!!!');
                            //    $('#ExpenditureTilldate').focus();
                            //    return false;
                            //}
                          
                            var values = {
                                SchemeID: $('#SchemeID').val(),
                                SchemeName: $('#SchemeID option:selected').text(),
                                ActivityID: $('#ActivityID').val(),
                                ActivityName: $('#ActivityID option:selected').text(),
                                SubActivityID: $('#SubActivityID').val(),
                                SubActivityName: $('#SubActivityID option:selected').text(),
                                AllocatedAmount: $('#AllocatedAmount').val(),
                                FY_ID: $('#FY_ID').val(),
                                BudgetHeadID: $('#BudgetHeadID').val(),
                                SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                                CIRCLE_CODE: Circles,
                                ISCircleDivision: $('.ISCircleDivision:checked').val(),
                                Division: Division,
                                ExpenditureTilldate: $('#ExpenditureTilldate').val(),
                                ExpenditureMonths: $('#ExpenditureMonths').val(),
                                BudgetHeadAllocationID: $('#BudgetHeadAllocationID').val()

                            };
                            $.ajax({
                                type: 'POST',
                                url: RootURl + 'BudgetExpenditure/AdddExpenditureDetails',
                                contentType: 'application/json; charset=utf-8',
                                data: JSON.stringify(values),
                                success: function (data) {
                                    console.log(data);
                                    if (data.rowid != "D") {
                                        var id = "'" + data.rowid + "'";
                                        var BudgetHead = $("#BudgetHeadID option:selected").text();
                                        var SubBudgetHead = "None";
                                        if ($("#SubBudgetHeadID option:selected").val() != "0") {
                                            SubBudgetHead = $("#SubBudgetHeadID option:selected").text();
                                        }
                                        var Circle = "None";
                                        var Division = "None";
                                        if ($(".ISCircleDivision:checked").val() == "Division" && $("#CIRCLE_CODE option:selected").val() != "") {
                                            Division = $("#Division option:selected").text();
                                            Circle = $("#CIRCLE_CODE option:selected").text();
                                        }
                                        else if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                                           // Division = $("#Division option:selected").text();
                                            Circle = $("#CIRCLE_CODE option:selected").text();
                                        }
                                        else if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                                            Circle = $("#CircleHQ option:selected").text();
                                        }

                                        var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td style=display:none;>" + data.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + data.BudgetHeadAllocationID + "</td><td>" + Circle + " / " + Division + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName + "/" + data.SubActivityName + "</td><td>" + BudgetHead + " / " + SubBudgetHead + "</td><td>" + parseFloat(data.AllocatedAmount).toFixed(2) + "</td><td>" + parseFloat(data.ExpenditureTilldate).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                                        $("#tblDetails").append(rowdata);
                                        $("#tblDetailsAdd").append(rowdata);

                                        //var previousAmount = parseFloat($('#AllocatedAmount').val());
                                        //$('#AllocatedAmount').val(parseFloat(previousAmount) + parseFloat(data.ExpenditureTilldate));
                                        $('#ExpenditureTilldate').val('');
                                        $('#ExpenditureMonths').val('');
                                    }
                                    else {
                                        alert("Records already added!!");
                                    }

                                }
                            });
                        }

                    });



                });

    function AvaliableAmount() {
        var Div_Code = $('#Division').val();
        var Cir_Code = $('#CIRCLE_CODE').val();
        if (!Div_Code) { Div_Code = 0; }
        if (!Cir_Code) { Cir_Code = 0; }
        if (Div_Code == 0 && Cir_Code == 0) {
            Cir_Code = $('#CircleHQ').val();
        }
        var values = {
            FY_ID: $('#FY_ID').val(),
            BudgetHeadID: $('#BudgetHeadID').val(),
            SubBudgetHeadID: $('#SubBudgetHeadID').val(),
            SchemeID: $('#SchemeID').val(),
            ActivityID: $('#ActivityID').val(),
            SubActivityID: $('#SubActivityID').val(),
            CIRCLE_CODE: Cir_Code,
            Division: Div_Code,
            ISCircleDivision: $(".ISCircleDivision:checked").val()
        }
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetAllocatedAmtDetails", "BudgetExpenditure")',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            success: function (data) {

                            $('#AvailableAmount').val(parseFloat(data.AvaliableAmount).toFixed(2));
                            $('#AllocatedAmount').val(parseFloat(data.AllocatedAmount).toFixed(2));
                            $('#BudgetHeadAllocationID').val(data.BudgetAllocationHeadId);
                        },
                    });
                }
                //function FilterTable() {
                //    $("#tblDetails").empty();
                //    var values = {
                //        FY_ID: $('#FY_ID').val(),
                //        BudgetHeadID: $('#BudgetHeadID').val(),
                //        SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                //        SchemeID: $('#SchemeID').val(),
                //        ActivityID: $('#ActivityID').val(),
                //        SubActivityID: $('#SubActivityID').val(),
                //        CIRCLE_CODE: $('#CIRCLE_CODE').val(),
                //    }
                //    $.ajax({
                //        type: 'POST',
                //        url: RootURl + 'BudgetExpenditure/BudgetAllocationFilterCircleList',
                //        contentType: 'application/json; charset=utf-8',
                //        data: JSON.stringify(values),
                //        success: function (data) {

                //            $.each(data, function (i, item) {

                //                var id = "'" + item.rowid + "'";                                                               
                //                var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName  + "</td><td>" + item.BudgetHead  + "</td><td>" +parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + parseFloat(item.ExpenditureTilldate).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                //                $("#tblDetails").append(rowdata);
                //            });

                //        },

                //    });

                //}

                function FilterTable(e) {
                    var cirlist = new Array();
                    $("#table2 tr:not(:first)").each(function () {
                        var tds = $(this).find("td");
                        var SStudent = { ID: $(tds[0]).html(), ISCircleDivision: $(tds[1]).html() }
                        cirlist.push(SStudent);
                    });
                    if (cirlist.length > 0) {

                        if (confirm('Added data will be lost do you want to proceed?')) {

                            $("#tblDetails").empty();
                            $('#tblDetailsAdd').empty();
                           
                            var values = {
                                FY_ID: $('#FY_ID').val(),
                                BudgetHeadID: $('#BudgetHeadID').val(),
                                SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                                SchemeID: $('#SchemeID').val(),
                                ActivityID: $('#ActivityID').val(),
                                SubActivityID: $('#SubActivityID').val(),
                                CIRCLE_CODE: $('#CIRCLE_CODE').val(),
                            }
                            $.ajax({
                                type: 'POST',
                                url: RootURl + 'BudgetExpenditure/BudgetAllocationFilterCircleList',
                                contentType: 'application/json; charset=utf-8',
                                data: JSON.stringify(values),
                                success: function (data) {

                                    $.each(data, function (i, item) {
                                        var id = "'" + item.rowid + "'";
                                        var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + item.BudgetHeadAllocationID + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + parseFloat(item.ExpenditureTilldate).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                                        $("#tblDetails").append(rowdata);
                                    });

                                },
                            });
                            return true;
                        }
                        else {

                            return false;
                        }
                    }
                    else {

                        $("#tblDetails").empty();
                        $('#tblDetailsAdd').empty();
                        var values = {
                            FY_ID: $('#FY_ID').val(),
                            BudgetHeadID: $('#BudgetHeadID').val(),
                            SubBudgetHeadID: $('#SubBudgetHeadID').val(),
                            SchemeID: $('#SchemeID').val(),
                            ActivityID: $('#ActivityID').val(),
                            SubActivityID: $('#SubActivityID').val(),
                            CIRCLE_CODE: $('#CIRCLE_CODE').val(),
                        }
                        $.ajax({
                            type: 'POST',
                            url: RootURl + 'BudgetExpenditure/BudgetAllocationFilterCircleList',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(values),
                            success: function (data) {

                                $.each(data, function (i, item) {

                                    var id = "'" + item.rowid + "'";
                                    //var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td>" + item.CIRCLE_NAME + "/" + item.Division + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
                                    //var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td>BUDGETALLOCATION-" + item.BudgetHeadAllocationID + "</td><td>" + item.SchemeName + "</td><td>" + item.BudgetHead + "</td><td>" + item.ActivityName + "</td><td>" + item.CIRCLE_NAME + "/" + item.Division + "</td><td>" + item.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
                                    var rowdata = "<tr><td style=display:none;>" + item.rowid + "</td><td style=display:none;>" + item.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + item.BudgetHeadAllocationID + "</td><td>" + item.CIRCLE_NAME + "</td><td>" + item.SchemeName + "</td><td>" + item.ActivityName + "</td><td>" + item.BudgetHead + "</td><td>" + parseFloat(item.AllocatedAmount).toFixed(2) + "</td><td>" + parseFloat(item.ExpenditureTilldate).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer ><i class='fa fa-times'></i></button>" + "</td></tr>";
                                    $("#tblDetails").append(rowdata);
                                });
                            },
                        });
                        return true;
                    }
                }

               

                $(document).on('click', '.btndelete', function () {

                    if (confirm("Are you sure you want to delete this?")) {
                        var $item = $(this).closest("tr").find('td');
                        var i = 0;
                        var ID;
                        var ISCircleDivision;
                        $.each($item, function (key, value) {
                            if (i == 0) {
                                ID = $(value).text();                               
                            }
                            if (i == 1) {
                                ISCircleDivision = $(value).text();                                
                                $(this).closest('tr').remove();
                            }
                            i++;
                        });

                        $.ajax({
                            type: 'POST',
                            url: RootURl + 'BudgetExpenditure/DeleteExpenditure',
                            dataType: 'json',
                            data: { Id: ID, ISCircleDivision: ISCircleDivision },
                            success: function (data) {

                                if (data == '1') {

                                    alert('Data deleted from table');

                                }
                                else {
                                    alert('Data not deleted from table please check!!!!');
                                }
                            },
                            traditional: true,
                            error: function (data) { console.log(data) }
                        });
                    }
                    else {
                        return false;
                    }

                });

                function reload() {
                    location.reload(true);
                }

                $(".ISCircleDivision").change(function () {
                    $('#AvailableAmount').val(0);
                    $('#AllocatedAmount').val(0);
                    $("#CIRCLE_CODE,#divisions").val('');
                    if ($(".ISCircleDivision:checked").val() == "HQ") {
                        var option = $("<option />");
                        option.attr("value", '0').text('--Select--');
                        $('#CircleHQ').append(option);
                        $("#divisions").attr("style", "display:none");
                        $("#CIRCLE_CODE").addClass('hide');
                        $("#CircleHQ").removeClass('hide');                       
                    }
                    else if ($(".ISCircleDivision:checked").val() == "Division") {
                        $("#divisions").attr("style", "display:block");
                        $("#CircleHQ").addClass('hide');
                        $("#CIRCLE_CODE").removeClass('hide');
                    }
                    else {
                        $("#divisions").attr("style", "display:none");
                        $("#CircleHQ").addClass('hide');
                        $("#CIRCLE_CODE").removeClass('hide');
                    }

                });
              
            </script>
