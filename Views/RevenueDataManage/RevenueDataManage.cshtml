@model IEnumerable<FMDSS.Models.Master.AuctionRevenueMaster>

@{
    ViewBag.Title = "RevenueDataManage";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/Forestlayout.cshtml";
}

<style>
    #page-wrapper-inn .table > thead > tr > th:last-child {
        width: 170px !important;
    }

    #myModal {
       z-index: 1050;
    }

    .ad-srl {
        overflow-y: auto;
        height: auto;
    }
</style>
<script src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script type="text/javascript">

    var RootUrl = '@Url.Content("~/")';

    $(document).ready(function () {

        $('#tbl_revenue').DataTable({
            responsive: true
        });


        $("#btn_update").hide();


        $('#revinueAmount').keypress(function (event) {

            return isNumberWithdot(event, this)

        });

        $('#txt_qty').keypress(function (event) {

            if ($('#produceUnit').val() == 'Piece') 
                return isNumber(event, this)
            else
                return isNumberWithdot(event, this)
           
        });

        
        $(document).on('change', '.radioTendupatta', function () {

            if ($(this).is(":checked")) {
                var val = $(this).val();
                alert(val);

                if (val == "Others")
                    $('#dvProduct').show();
                else
                    $('#dvProduct').hide();
            }
        });

        $('#depotId').change(function (e) {
            $("#producetype").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'ManageNotice/getForesProduce', // we are calling json method
                dataType: 'json',
                data: { depotId: 0 },
                success: function (produce) {

                    $.each(produce.list3, function (i, items) {
                        $("#producetype").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $('#ddl_rangeCode').change(function (e) {
            $.ajax({
                type: 'POST',
                url: RootUrl + 'RevenueDataManage/getDepot', // we are calling json method
                dataType: 'json',
                data: { rangeCode: $("#ddl_rangeCode").val() },
                success: function (produce) {

                    $.each(produce, function (i, items) {
                        $("#depotId").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $('#producetype').change(function (e) {
            $("#forestProductID").empty();
            $.ajax({
                type: 'POST',
                url: RootUrl + 'ManageNotice/getForesProduct', // we are calling json method
                dataType: 'json',
                data: { depotId: 0, producetype: $("#producetype").val() },
                success: function (produce) {
                    $.each(produce, function (i, items) {
                        $("#forestProductID").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });

        $('#forestProductID').change(function (e) {
            $("#produceUnit").val('');
            $("#produceUnit").text('');
            $.ajax({
                type: 'POST',
                url: RootUrl + 'ManageNotice/getForesProduceqty', // we are calling json method
                dataType: 'json',
                data: { rangeCode: $("#ddl_rangeCode").val(), depotId: 0, producetype: $("#producetype").val(), product: $("#forestProductID").val() },
                success: function (stockqty) {

                    $("#produceUnit").val(stockqty.list1.ProduceUnit);
                    $("#hdn_avQty").val(stockqty.list1.Qty);
                    $("#hdn_productRate").val(stockqty.list1.ProductRate);
                    $("#lbl_availableQty").text("");
                    $("#unitspan").text("(In " + stockqty.list1.ProduceUnit + ")");
                    $("#lbl_baserate").html("");

                    if ($("#chkSchedlrNotice").is(":checked")) {
                        BindProduct_Quantity_by_Scheduler(stockqty.list1.Qty);
                    }
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });


        $('#btn_Save').click(function () {


            if ($('#ddl_rangeCode option:selected').index() != 0) {
                if ($('#depotId option:selected').index() != 0) {
                    if ($('#producetype option:selected').index() != 0) {
                        if ($('#forestProductID option:selected').index() != 0) {
                            if ($('#revenueYearID option:selected').index() != 0) {
                                if ($('#txt_qty').val() != 0) {
                                    if ($('#revinueAmount').val() != 0 && $('#revinueAmount').val()!='.') {

                                    }
                                    else
                                    {
                                        alert('Kindly Enter valid Amount!');
                                        $('#revinueAmount').focus();
                                        $('#revinueAmount').val('');
                                        return false;
                                 }
                                }
                                else {

                                    alert('Kindly Enter Quantity!');
                                    $('#txt_qty').focus();
                                    return false;
                                }
                            }
                            else {
                                alert('Kindly select Revenue Year!');
                                $('#revenueYearID').focus();
                                return false;
                            }
                        }
                        else {
                            alert('Kindly select Product!');
                            $('#forestProductID').focus();
                            return false;
                        }
                    }
                    else {
                        alert('Kindly select Product Type!')
                        $('#producetype').focus();
                        return false;
                    }
                }
                else {
                    alert('Kindly select Depot!')
                    $('#depotId').focus();
                    return false;
                }

            }
            else {
                alert('Kindly select Range!')
                $('#ddl_rangeCode').focus();
                return false;
            }

            if (validateNumericTextbox(txtQty) && $("#chkfromWorkOrder").is(':checked')) {
                if ((parseFloat(txtQty) + parseFloat(txtDQty)) <= (parseFloat(hdnQty))) {
                    if (confirm('Are you sure you to proceed ahead?')) { return true; }
                }
                else {
                    alert('Quantity cannot be more than available one!');
                    $('#produceQty').focus();
                    return false;
                }
            }



        });



        function isNumberWithdot(evt, element) {

            var charCode = (evt.which) ? evt.which : event.keyCode

            if (
                 (charCode != 46 || $(element).val().indexOf('.') != -1) &&      // “.” CHECK DOT, AND ONLY ONE.
                (charCode < 48 || charCode > 57))
                return false;

            //return true;
        }


        function isNumber(e, element) {

            var kc = e.which;
            if (kc >= 48 && kc <= 57) {

            }
            else {
                e.preventDefault();
            }
        }



    });

    function EditRevenue(noticeId, actionLog) {

        $("#lbpl_header").text('Update Revenue');

        $("#depotId").empty();
        $("#producetype").empty();
        $("#forestProductID").empty();


        var collectionID = {
            collectionID: $.trim(noticeId)
        }

        //$("#tbdyScart").empty();
        $.ajax({
            type: 'POST',
            url: RootUrl + 'RevenueDataManage/EditDetails',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(collectionID),
            success: function (data) {

                var selectObj = document.getElementById('ddl_rangeCode');

                for (var i = 0; i < selectObj.options.length; i++) {
                    if (selectObj.options[i].value == data.RangeCode) {

                        selectObj.options[i].selected = true;
                        // return;
                    }
                }

                var selectObj1 = document.getElementById('revenueYearID');

                for (var i = 0; i < selectObj1.options.length; i++) {
                    if (selectObj1.options[i].value == data.RevenueYear) {

                        selectObj1.options[i].selected = true;
                        // return;
                    }
                }

                var r_Code = data.RangeCode;
                var p_Code = data.DepotId;
                var p_produce = data.ForestProduceID;
                var p_product = data.ForestProductID;


                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'RevenueDataManage/getDepot', // we are calling json method
                    dataType: 'json',
                    data: { rangeCode: r_Code },
                    success: function (produce) {

                        $.each(produce, function (i, items) {
                            $("#depotId").append('<option value="' + items.Value + '">' +
                             items.Text + '</option>');
                            if (items.Value == p_Code) {
                                $('#depotId option').filter(function () { return $(this).val() == p_Code }).attr('selected', true);
                                return;
                            }
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }

                });



                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'ManageNotice/getForesProduce', // we are calling json method
                    dataType: 'json',
                    data: { depotId: p_Code },
                    success: function (produce) {

                        $.each(produce.list3, function (i, items) {
                            $("#producetype").append('<option value="' + items.Value + '">' +
                             items.Text + '</option>');
                            if (items.Value == p_produce) {
                                $('#producetype option').filter(function () { return $(this).val() == p_produce }).attr('selected', true);
                                return;
                            }
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }

                });

                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'ManageNotice/getForesProduct', // we are calling json method
                    dataType: 'json',
                    data: { depotId: p_Code, producetype: p_produce },
                    success: function (produce) {
                        $.each(produce, function (i, items) {
                            $("#forestProductID").append('<option value="' + items.Value + '">' +
                             items.Text + '</option>');
                            if (items.Value == p_product) {
                                $('#forestProductID option').filter(function () { return $(this).val() == p_product }).attr('selected', true);
                                return;
                            }
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }

                });

                $("#btn_update").show();

                $("#btn_Save").hide();
                $("#collectionID").val(data.RowID);
                $("#txt_qty").val(data.Qty);
                $("#revinueAmount").val(data.RevinueAmount);
                $("#produceUnit").val(data.ProduceUnit);


            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
    }
</script>
<script type="text/javascript">
    function ClearField() {
        $("#lbpl_header").text('Add Revenue');
        $("#ddl_rangeCode").val('');
        $('#ddl_rangeCode').prop('selectedIndex', 0);
        $("#depotId").empty();
        $("#producetype").empty();
        $("#forestProductID").empty();
        $("#txt_qty").val('');
        $("#revinueAmount").val('');


    }

</script>

@using (Html.BeginForm("SubmitAuctionRevenueform", "RevenueDataManage", FormMethod.Post))
{
    <div id="page-wrapper-inn">
        <div class="col-lg-12 pad">
            <h1 class="page-header"><span>Auction Revenue Master</span></h1>

            @if (@TempData["Revenue_Status"] != null)
            {
                <div class="alert alert-success"><i class="fa fa-thumbs-o-up fa-fw"></i>@TempData["Revenue_Status"]</div>
            }
        </div>
        <!-- /.col-lg-12 -->
        <!-- Row -->
        <div class="row">
            <div class="col-lg-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <!--./Search-->
                        <!--Add New Btn-->
                        <div class="col-lg-3 rgt pull-right">
                            <button type="button" class="btn btn-success AddNewAuction pull-right" data-toggle="modal" id="addNewnotice" data-target="#myModal" title="Add New Notice" onclick="ClearField()">
                                <i class="fa fa-plus"></i> Add Revenue Data
                            </button>
                        </div>
                        <!--./Add New Btn-->
                        <div class="dataTable_wrapper">
                            <div id="tbl" class="table-responsive">
                                <table class="table table-striped table-bordered table-hover table-responsive" id="tbl_revenue">
                                    <thead>
                                        <tr>
                                            <th style="display:none;">S. No</th>
                                            <th>Range</th>
                                            <th>Depot</th>
                                            <th>Product</th>
                                            <th>Product Type</th>
                                            <th>Unit</th>
                                            <th>Year</th>
                                            <th>Quantity</th>
                                            <th>Revenue Amount</th>
                                            <th style="width:100px;">Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {

                                            <tr>
                                                <td style="display:none;">
                                                    @Html.DisplayFor(model => item.RowID)

                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.RangeCode)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.DepotName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.ForestProducename)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.ForestProductName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.ProduceUnit)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.RevenueYear)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.Qty)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.RevinueAmount)
                                                </td>
                                                <td>


                                                    <button type="button" class="btn btn-warning btn-circle" data-toggle="modal" data-target="#myModal" style="cursor:pointer" title="Edit" onclick="EditRevenue('@Html.DisplayFor(model => item.RowID)','Update')">
                                                        <i class="fa fa-edit"></i>
                                                    </button>


                                                    <a class="btn btn-danger btn-circle" title="Delete" onclick="return confirm('Are you absolutely sure you want to delete?')" href="@Url.Action("DeletRevenueeData", "RevenueDataManage", new { id = item.RowID })">

                                                        <i class="fa fa-times"></i>
                                                    </a>

                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                    <!-- /.panel-body -->
                </div>
                <!-- /.panel -->

                <div class="modal fade" id="myModal" role="dialog">
                    <div class="modal-dialog modal-lg">
                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">
                                    &times;
                                </button>
                                <h4 class="modal-title">
                                    <label id="lbpl_header"> </label>
                                </h4>
                            </div>
                            <div class="modal-body">
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Range Name: <span class="mandatory">*</span></label>
                                        @Html.DropDownList("RangeCode", (IEnumerable<SelectListItem>)ViewBag.RegionCode,"---Select---", new { @class = "form-control", id = "ddl_rangeCode" })
                                        <input type="hidden" id="collectionID" name="CollectionID" value="0" />

                                        <input type="hidden" id="hd_rangeCode" name="Hd_RangeCode" />
                                        <div id="rangeerrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Place/Depot of Auction: <span class="mandatory">*</span></label>
                                        @Html.DropDownList("DepotId", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", id = "depotId" })



                                        <input type="hidden" id="hd_depotId" name="Hd_DepotId" />
                                        <div id="depoterrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>



                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Product Type: <span class="mandatory">*</span></label>

                                        @Html.DropDownList("ForestProduceID", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", id = "producetype" })




                                        <input type="hidden" id="hd_producetype" name="Hd_ForestProduceID" />


                                        <div id="produceerrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Product: <span class="mandatory">*</span></label>
                                        @Html.DropDownList("ForestProductID", new SelectList(string.Empty, "Value", "Text"), new { @class = "form-control", id = "forestProductID" })




                                        <input type="hidden" id="hd_forestProductID" name="Hd_ForestProductID" />

                                        <div id="producterrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Name of Unit: <span class="mandatory">*</span></label>
                                        <input class="form-control" id="produceUnit" name="ProduceUnit" readonly="readonly">


                                        <div id="produceerrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Revenue Year: <span class="mandatory">*</span></label>
                                        @Html.DropDownList("RevenueYear", (IEnumerable<SelectListItem>)ViewBag.RevenueYear, "--Select--", new { @class = "form-control", id = "revenueYearID" })

                                        <div id="rangeerrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Revenue Quantity<span id="unitspan"></span>:<span class="mandatory">*</span></label>
                                        <input class="form-control" id="txt_qty" name="Qty" maxlength="15" />



                                        <input type="hidden" id="hd_Qty" name="Hd_Qty" />
                                        <input type="hidden" id="hdn_avQty" />

                                        <label id="lbl_availableQty" for="email" class="pull-left"></label>
                                        <label id="lbl_baserate" for="email" class="pull-right"></label>
                                        <div id="textqtyerrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="form-group">
                                        <label>Revenue Amount(INR): <span class="mandatory">*</span></label>
                                        <input class="form-control" id="revinueAmount" name="RevinueAmount" maxlength="15" />




                                        <div id="produceerrordiv" style="display:none" class="alert-danger1"></div>
                                    </div>
                                </div>

                                <div class="col-lg-12"></div>







                                <div class="form-group" id="btn-cont1">
                                    <div class="col-sm-offset-2 col-sm-10">
                                        <button type="button" class="btn btn-success" id="procedId" style="display:none">
                                            Proceed
                                        </button>


                                    </div>
                                </div>
                            </div>

                            <!--/.model body-->

                            <div class="modal-footer" style="clear: both">

                                <div id="btn" class="col-lg-12">
                                    <button type="submit" class="btn btn-success" name="Command" value="Submit" id="btn_Save">
                                        <i class="fa fa-check"></i>Submit
                                    </button>

                                    <button type="submit" class="btn btn-success" name="Command" value="Update" id="btn_update">
                                        <i class="fa fa-check"></i>Update
                                    </button>
                                    <button type="reset" class="btn btn-warning" value="reset">
                                        <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                                    </button>

                                    <button type="button" value="Cancel" class="btn btn-danger" data-dismiss="modal">
                                        <i class="fa fa-times fa-fw"></i> Cancel
                                    </button>

                                </div>
                            </div>

                        </div>

                    </div>
                </div>

            </div>


        </div>
    </div>

}