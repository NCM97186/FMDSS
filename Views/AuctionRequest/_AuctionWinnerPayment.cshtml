@model FMDSS.Entity.DOD.ViewModel.AuctionVM
@{
    var headerTitle = "Manage Auction Winner";
    Model.DODProductList = Model.DODProductList.Where(x => x.AuctionStatus.Equals("Won")).ToList();
}
@using (Ajax.BeginForm("UpdateAuctionWinner", "AuctionRequest", new AjaxOptions { HttpMethod = "POST", Confirm = FMDSS.Globals.Constant.ConfirmMsg, OnSuccess = "RedirectToOtherPage" }))
{
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title" id="myModalLabel"><label id="lbpl_header">@headerTitle</label></h4>
            </div>

            <div class="modal-body">
                <!-- From URL Get -->

                <table class="table table-striped table-bordered table-hover">
                    <tbody>
                        <tr><td>Notice Number</td><td>@Model.NoticeNumber</td></tr>
                        <tr><td>Region Name</td><td>@Model.RegionName</td></tr>
                        <tr><td>Circle Name</td><td>@Model.CircleName</td></tr>
                        <tr><td>Division Name</td><td>@Model.DivisionName</td></tr>
                        <tr><td>Range Name</td><td>@Model.RangeName</td></tr>
                        <tr><td>Depot Name</td><td>@Model.Depot_Name</td></tr>
                        <tr><td>Durations</td><td>@Model.NoticeDuration</td></tr>
                        <tr>
                            <td colspan="2">
                                <div class="col-lg-12">
                                    <label>Lot Wise Winner Details:</label>
                                    <div class="form-group">
                                        <table id="tblTPProductDetails" class="table table-striped table-bordered table-hover notranslate">
                                            <thead>
                                                <tr style="color:#999; background-color:#ddd;">
                                                    <td colspan="9"><i>Notice Lot Details</i></td>
                                                </tr>
                                                <tr>
                                                    <th>Lot Number</th>
                                                    <th>Product Type</th>
                                                    <th>Product</th>
                                                    <th>Unit Name</th>
                                                    <th>Notice Qty</th>
                                                    <th>Winner</th>
                                                    <th>Auction Status</th>
                                                    <th>Pending Amt</th>
                                                    <th>@Html.CheckBox("chkSelectAll", true, new { onchange = "SelectProduct(this,'All')" })</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbTPProductDetails" class="tbviewdet">

                                                @if (Model.DODProductList != null && Model.DODProductList.Count > 0)
                                                {
                                                    for (int i = 0; i < Model.DODProductList.Count; i++)
                                                    {
                                                        <tr>
                                                            <td>
                                                                @Html.HiddenFor(m => m.DODProductList[i].AuctionWinnerID)
                                                                @Model.DODProductList[i].DisplayLotNumber
                                                            </td>
                                                            <td>@Model.DODProductList[i].ProductType</td>
                                                            <td>@Model.DODProductList[i].ProductName</td>
                                                            <td>@Model.DODProductList[i].UnitName</td>
                                                            <td>@Model.DODProductList[i].Qty</td>
                                                            <td>@Model.DODProductList[i].WinnerName</td>
                                                            <td>@Model.DODProductList[i].AuctionStatus</td>
                                                            <td name="lIPendingAmount">@Model.DODProductList[i].PendingAmount</td>
                                                            <td>
                                                                @if (Model.DODProductList[i].PendingAmount > 0)
                                                                {
                                                                    @Html.CheckBox("DODProductList[" + i + "].IsSelected", true, new { onchange = "SelectProduct(this,'Single')" })
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                                else
                                                {
                                                    <tr class="rowSkip">
                                                        <td colspan="9">No record found.</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>

                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr><td>Total Bidding Amount</td><td>@Model.BiddingAmount</td></tr>
                        <tr><td>Total Paid Amount</td><td>@Model.PaidAmount</td></tr>
                        <tr><td>Total Pending Amount</td><td>@(Model.PendingAmount <= 0 ? 0 : Model.PendingAmount)</td></tr>
                        <tr>
                            <td>Payment Mode: <span class="mandatory">*</span></td>
                            <td>
                                @Html.DropDownListFor(m => m.PaymentMode, new List<SelectListItem>
                                                                           {
                                                                             new SelectListItem { Text = "CHEQUE", Value = "CHEQUE"},
                                                                             new SelectListItem { Text = "DD", Value = "DD"},
                                                                             new SelectListItem { Text = "CASH", Value = "CASH"},
                                                                          }, "--Select--", new { @class = "required", onchange = "OnChange_PaymentMode(this);" })
                                <span class="alert-danger1">@Html.ValidationMessageFor(m => m.PaymentMode)</span>
                            </td>
                        </tr>
                        <tr class="cheque">
                            <td>Bank Name: <span class="mandatory">*</span></td>
                            <td>
                                @Html.TextBoxFor(m => m.BankName, new { id = "txtBankName", @class = "required" })
                                <span class="alert-danger1">@Html.ValidationMessageFor(m => m.BankName)</span>
                            </td>
                        </tr>
                        <tr class="cheque">
                            <td>IFSC Code: <span class="mandatory">*</span></td>
                            <td>
                                @Html.TextBoxFor(m => m.IFSCCode, new { id = "txtIFSCCode", @class = "required" })
                                <span class="alert-danger1">@Html.ValidationMessageFor(m => m.IFSCCode)</span>
                            </td>
                        </tr>
                        <tr class="cheque">
                            <td>Banker Cheque/DD Number: <span class="mandatory">*</span></td>
                            <td>
                                @Html.TextBoxFor(m => m.ChequeNumber, new { id = "txtChequeNumber", @class = "required" })
                                <span class="alert-danger1">@Html.ValidationMessageFor(m => m.ChequeNumber)</span>
                            </td>
                        </tr>
                        <tr class="cheque">
                            <td>Cheque/DD Date: <span class="mandatory">*</span></td>
                            <td>
                                @Html.TextBoxFor(m => m.ChequeDate, new { id = "txtChequeDate", @class = "Calender required", autocomplete = "off", @readonly = "readonly" })
                                <span class="alert-danger1">@Html.ValidationMessageFor(m => m.ChequeDate)</span>
                            </td>
                        </tr>
                        <tr>
                            <td>Enter Amount To Pay <span class="mandatory">*</span></td>
                            <td>
                                @if (Model.DODProductList != null && Model.DODProductList.Count > 1)
                                {
                                    @Html.TextBoxFor(m => m.PayAmount, new { @class = "required", onkeypress = "AllowNumberOnly(event)", onchange = "ValidateAmount(this);", data_PendingAmount = Model.PendingAmount, Value = Model.PendingAmount, id = "txtPendingAmount", @readonly = "readonly" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.PayAmount, new { @class = "required", onkeypress = "AllowNumberOnly(event)", onchange = "ValidateAmount(this);", data_PendingAmount = Model.PendingAmount, Value = Model.PendingAmount, id = "txtPendingAmount" })
                                }
                                <span class="alert-danger1">@Html.ValidationMessageFor(m => m.PayAmount)</span>
                            </td>
                        </tr>
                    </tbody>
                </table>

                <!-- /. From URL Get -->
            </div>
            <!-- /.modal-body -->
            <div class="modal-footer" id="fot-f">
                <button id="btnDeclareAuctionWinner" name="button" class="btn btn-info" type="submit" value="Save" style="width: auto">
                    <i class="fa fa-check fa-fw"></i> Save
                </button>
                <button name="button" class="btn btn-danger" type="button" value="Cancel" data-dismiss="modal" style="width: auto">
                    <i class="fa fa-times fa-fw"></i> Close
                </button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    @Html.HiddenFor(m => m.AuctionID)
    @Html.Hidden("mode", "Dept")
}
<script src="~/Scripts/Controller/Common.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.Calender').datepicker({
            dateFormat: GetDatePickerFormat(),
            yearRange: GetYearRange(),
            changeMonth: true,
            changeYear: true,
        });
    })
    function RedirectToOtherPage(response) {
        if (!response.IsError) {
            BackToList(response.redirectURL);
        }
        else {
            alert(response.ReturnMsg);
        }
    }

    function ValidateAmount(cntrl) {
        var pendingAmt = 0;
        var payAmt = parseFloat(cntrl.value);
        $('#tbTPProductDetails').find('input[type="checkbox"]:checked').closest('tr').find('td[name="lIPendingAmount"]').each(function (i, j) {
            pendingAmt = pendingAmt + parseFloat(j.innerHTML);
        });
        if (payAmt <= 0) {
            alert("Amount should be grater than 0.");
            cntrl.value = pendingAmt;
        }
        else if (payAmt > pendingAmt) {
            alert("Amount should be less than pending amount.");
            cntrl.value = pendingAmt;
        }
    }

    function SetWinnerDetails(cntrl) {
        var cntr = $(cntrl).data("cntr");
        var totalLotWinnerCount = $("#tbTPProductDetails").find("input:checkbox:checked").length

        if (totalLotWinnerCount > 0) {
            $("#btnDeclareAuctionWinner").removeClass("hide");
        }
        else {
            $("#btnDeclareAuctionWinner").addClass("hide");
        }

        if ($(cntrl).is(":checked")) {
            $("#txtBiddingAmount_" + cntr + ",#ddlEmitraHeadCode_" + cntr).addClass("required");
        }
        else {
            $("#txtBiddingAmount_" + cntr + ",#ddlEmitraHeadCode_" + cntr).removeClass("required");
        }
    }

    function OnChange_PaymentMode(cntrl) {
        if (cntrl.value == 'CASH') {
            $('tr.cheque').find('input').removeClass('required');
            $('tr.cheque').addClass('hide');
        }
        else {
            $('tr.cheque').find('input').addClass('required');
            $('tr.cheque').removeClass('hide');
        }

    }

    function SelectProduct(cntrl, type) {
        var isChecked = $(cntrl).is(":checked");
        var pendingAmt = 0;
        var cntr = 0;
        if (type == "All") {
            $('#tbTPProductDetails').find('input[type="checkbox"]').prop("checked", isChecked);
            if (!isChecked) {
                $('#tbTPProductDetails').find('input[type="checkbox"]:first()').prop("checked", true);
            }
        }
        else {
            $('#chkSelectAll').prop("checked", false);
            var totalItem = $('#tbTPProductDetails').find('input[type="checkbox"]:checked').length;
            if (isChecked) {
                $('#tbTPProductDetails').find('input[type="checkbox"]').prop("checked", false);
                $(cntrl).prop("checked", isChecked);
            }
            else {
                if (totalItem == 1) {
                    $(cntrl).prop("checked", isChecked);
                }
                else if (totalItem > 1) {
                    $('#tbTPProductDetails').find('input[type="checkbox"]').prop("checked", false);
                    $(cntrl).prop("checked", true);
                }
                else
                    $(cntrl).prop("checked", true);
            }
        }
        $('#tbTPProductDetails').find('input[type="checkbox"]:checked').closest('tr').find('td[name="lIPendingAmount"]').each(function (i, j) {
            cntr++;
            pendingAmt = pendingAmt + parseFloat(j.innerHTML);
        });
        $('#txtPendingAmount').val(pendingAmt);
        if (cntr > 1) {
            $('#txtPendingAmount').prop("readonly", true);
        }
        else {
            $('#txtPendingAmount').removeAttr("readonly");
        }
    }
</script>

<style>
    span.alert-danger1 {
        padding: 4px 0 0 4px;
        right: auto;
    }

    .modal-dialog {
        width: 850px;
    }
</style>
