@model FMDSS.Models.MIS.MISCitizenModel
@{
    ViewBag.Title = "CSPermissionsWildLifeAndForest";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_SuperAdmin.cshtml";
}
<script>
    var RootUrl = '@Url.Content("~/")';
    var WebUrl = '@System.Configuration.ConfigurationManager.AppSettings["websiteUrl"].ToString()';
    function reqdetail(reqId) {
        $.ajax({
            type: 'GET',
            url: WebUrl + '/ForesterAction/getNocDetail',
            dataType: 'json',
            data: { requestId: reqId },
            success: function (data) {
                $('#tbReqDetail').empty().append(data.detail);
                $('#tbTrail').empty().append(data.trail);
                $('#myModalDfo').show();
            },
            error: function (ex) {
                alert('Failed to retrieve Request Data. ' + ex);
            }
        });
        return false;
    }
    $(document).ready(function () {
        $('.close').on('click', function () {
            $('#myModalDfo').hide();
        });
        $('.btnCancel').on('click', function () {
            $('#myModalDfo').hide();
        });
        $('#btnprint').click(function (e) {
            var divContents = $("#divPrint").html();
            var frame1 = $('<iframe />');
            frame1[0].name = "frame1";
            $("body").append(frame1);
            var frameDoc = frame1[0].contentWindow ? frame1[0].contentWindow : frame1[0].contentDocument.document ? frame1[0].contentDocument.document : frame1[0].contentDocument;
            frameDoc.document.open();
            frameDoc.document.write('<html><head><link href="../css/bootstrap.min.css" rel="stylesheet" />');
            frameDoc.document.write('<link href="../css/mobile.css" rel="stylesheet" />');
            frameDoc.document.write('<link href="../css/dashboard/main.css" rel="stylesheet" />');
            frameDoc.document.write('<link href="../css/dashboard/dashboard.css" rel="stylesheet" />');
            frameDoc.document.write('<link href="../css/dashboard/font-awesome.min.css" rel="stylesheet" />');
            frameDoc.document.write('</head><body>');
            frameDoc.document.write(divContents);
            frameDoc.document.write('</body></html>');
            frameDoc.document.close();
            setTimeout(function () {
                window.frames["frame1"].focus();
                window.frames["frame1"].print();
                frame1.remove();
            }, 500);
        });

        if ($('option:selected', $('#Duration')).index() == 1) {
            $("#divdate").css("display", "block");
        }
        else {
            $("#divdate").css("display", "none");
        }
        // date validation ========================================================================
        var currentYear = (new Date).getFullYear();
        var Range = '2008:' + (currentYear + 1)
        $("#FromDate,#ToDate").datepicker({ maxDate: new Date(), yearRange: Range, dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
        var currentDate = new Date();
        $("#FromDate").change(function () {
            $("#ToDate").val('');
        });
        $(document).on('keypress', '#FromDate,#ToDate', function (event) {
            event.preventDefault();
            return false;
        });
        $('#FromDate,#ToDate').keydown(function (event)
        { return cancelBackspace(event) });
        function cancelBackspace(event) {
            if (event.keyCode == 8 || event.keyCode == 46) {
                return false;
            }
        }
        $("#ToDate").change(function () {
            var str1 = $("#FromDate").val();
            var str2 = $("#ToDate").val();
            var L = 3, d1 = $("#FromDate").val().split('/'), d2 = $("#ToDate").val().split('/');
            d1 = new Date(+d1[2], parseInt(d1[1], 10) - 1, parseInt(d1[0], 10));
            d2 = new Date(+d2[2], parseInt(d2[1], 10) - 1, parseInt(d2[0], 10));
            if (new Date(d1) <= new Date(d2)) {
                // parseDate(str1, str2);
            }
            else {
                $("#ToDate").val('');
                alert('Date Must be GreaterThen From Date');
            }
        });
        // date validation ========================================================================
        $('#Duration').change(function (e) {
            if ($('option:selected', $('#Duration')).index() == 1) {
                $("#divdate").css("display", "block");
            }
            else {
                $("#divdate").css("display", "none");
            }
            $('#PermissionType_Text').val($("#PermissionType option:selected").text());
        });
        $('#Circle').change(function (e) {
            $('#Circle_Text').val($("#Circle option:selected").text());
            $("#Division").empty();
            $("#Range").empty();
            $("#Range").append('<option value="' + "0" + '">' + "--Select--" + '</option>');
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/DivisionData', // we are calling json method
                dataType: 'json',
                data: { circleCode: $("#Circle").val() },
                success: function (circle) {
                    $.each(circle, function (i, items) {
                        $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $('#Division').change(function (e) {
            $("#Range").empty();
            $('#Division_Text').val($("#Division option:selected").text());
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/RangeData', // we are calling json method
                dataType: 'json',
                data: { DivisionCode: $("#Division").val() },
                success: function (divCode) {
                    $.each(divCode, function (i, items) {
                        $("#Range").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $('#Range').change(function (e) {
            $('#Range_Text').val($("#Range option:selected").text());
        });
        $('#PermissionType').change(function (e) {
            $('#PermissionType_Text').val($("#PermissionType option:selected").text());
        });
        $("#ddl_Category").change(function (e) {

            var category = $("#ddl_Category").val();
            var Rt = $('#researchType').val();
            if (category == 'Any Other') {
                $('#divAnyOther2').show();
                $('#divAnyOther1').hide();
            }
            else {
                $('#divAnyOther2').hide();
                $('#divAnyOther1').show();
            }

            $('#ddlPlaceForResearch').empty().append('<option value="">--Select--</option>');
            var values = {
                Category: category,
                ReaserchType: Rt
            };

            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(values),
                url: RootUrl + 'ResearchStudy/DistrictbyCategory',
                success: function (data) {
                    if ($('#researchType').val().toString() == 'Research in Wildlife') {
                        $.each(data, function (i, items) {
                            $("#ddlPlaceForResearch").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                        });
                    } else if ($('#researchType').val().toString() == 'Research in Forest') {
                        $("#divDist").show();
                        $("#district").empty();
                        $.each(data, function (i, items) {
                            $("#district").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                        });
                    }
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });
        });
        $(document).on('click', '.RejectedRecords', function (e) {
            var Categorys = $(this).parents('tr').find('input[name=Categorys]').val();
            var StatusNames = $(this).parents('tr').find('input[name=StatusNames]').val();
            var StatusName = $(this).parents('tr').find('input[name=StatusName]').val();
            var PlaceId = $(this).parents('tr').find('input[name=index]').val();
            ('#btn_' + PlaceId).src = "images/minus.png";
            $('#ID_' + PlaceId).toggle();
            $('#ID_' + PlaceId).html("");
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/GetWildLifeAndForestRejectApplicationData', // we are calling json method
                dataType: 'json',
                data: { category: Categorys, status: StatusNames, },
                success: function (response) {
                    var str = '<thead><th>ApplicationNo</th><th>Remark</th></thead>';
                    $('#ID_' + PlaceId).append(str);
                    $.each(response, function (i, item) {
                        //$('#ID_' + PlaceId).append('<tbody><tr> <td>  <a id="btnAddModel" data-target="#myModalDfo" data-toggle="modal" href="javascript:void(0);" onclick=reqdetail("' + response[i].ApplicationNo + '") >' + response[i].ApplicationNo + ' </a></td> <td> ' + response[i].Remark + ' </td></tr></tbody>');
                        $('#ID_' + PlaceId).append('<tbody><tr> <td>  <a  href="#" onclick=reqdetail("' + response[i].ApplicationNo + '") >' + response[i].ApplicationNo + ' </a></td> <td> ' + response[i].Remark + ' </td></tr></tbody>');
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                }
            });

            $('#btn_submit1').click(function (e) {
                if ($('option:selected', $('#Duration')).index() == 0) {
                    $("#errDuration").css("display", "block");
                    $('#errDuration').focus();
                    return false;
                }
                else {
                    $("#errDuration").css("display", "none");
                    $("#errFromDate").css("display", "none");
                    $("#errToDate").css("display", "none");
                }
                if ($('option:selected', $('#Duration')).index() == 1) {
                    if ($('#FromDate').val() == '') {
                        $("#errFromDate").css("display", "block");
                        $('#errFromDate').focus();
                        return false;
                    }
                    else {
                        $("#errFromDate").css("display", "none");
                    }
                    if ($('#ToDate').val() == '') {
                        $("#errToDate").css("display", "block");
                        $('#errToDate').focus();
                        return false;
                    }
                    else {
                        $("#errToDate").css("display", "none");
                    }
                }
                if ($('option:selected', $('#Circle')).index() == 0) {
                    $("#errCircle").css("display", "block");
                    $('#errCircle').focus();
                    return false;
                }
                else {
                    $("#errCircle").css("display", "none");
                }
                if ($('option:selected', $('#Division')).index() == 0) {
                    $("#errDivision").css("display", "block");
                    $('#errDivision').focus();
                    return false;
                }
                else {
                    $("#errDivision").css("display", "none");
                }
                if ($('option:selected', $('#Range')).index() == 0) {
                    $("#errRange").css("display", "block");
                    $('#errRange').focus();
                    return false;
                }
                else {
                    $("#errRange").css("display", "none");
                }
                if ($('option:selected', $('#SubPermissionType')).index() == 0) {
                    $("#errPermissionTypeSubCategory").css("display", "block");
                    $('#errPermissionTypeSubCategory').focus();
                    return false;
                }
                else {
                    $("#errPermissionTypeSubCategory").css("display", "none");
                }
            });
        });
    });

</script>

<div class="row">
    <div class="col-lg-9 pad">
        <h1 class="page-header"><span>Report : WildLife And Forest Permissions Status</span></h1>
    </div>
    @using (Html.BeginForm("CSPermissionsWildLifeAndForest", "MISCitizen", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label>Duration:</label>
                            @Html.DropDownListFor(model => model.Duration, (IEnumerable<SelectListItem>)ViewBag.Duration, new { @class = "form-control", id = "Duration" })
                            <div id="errDuration" class="alert-danger1" style="display:none"> Duration is Required. </div>
                        </div>
                    </div>
                    <div id="divdate">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>From Date:<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control common datefield", id = "FromDate" })
                                <span id="errFromDate" style="display: none" class="alert-danger1">From Date is Required.</span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>To Date:<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control common datefield", id = "ToDate" })
                                <span id="errToDate" style="display: none" class="alert-danger1">To Date is Required.</span>
                            </div>
                        </div>
                    </div>
                    @*<div class="col-lg-6">
                            <div class="form-group">
                                <label>Circle:<span class="mandatory">*</span></label>
                                @Html.DropDownListFor(model => model.Circle, (IEnumerable<SelectListItem>)ViewBag.CIRCLE, new { @class = "form-control", id = "Circle" })
                                <div id="errCircle" style="display:none" class="alert-danger1">Circle is Required.</div>
                                @Html.Hidden("Circle_Text", new { @class = "form-control", id = "Circle_Text" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Division:<span class="mandatory">*</span></label>
                                @Html.DropDownListFor(model => model.Division, (IEnumerable<SelectListItem>)ViewBag.Division, new { @class = "form-control", id = "Division" })
                                <div id="errDivision" style="display:none" class="alert-danger1">Division is Required.</div>
                                @Html.Hidden("Division_Text", new { @class = "form-control", id = "Division_Text" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Range:<span class="mandatory">*</span></label>
                                @Html.DropDownListFor(model => model.Range, (IEnumerable<SelectListItem>)ViewBag.Range, new { @class = "form-control", id = "Range" })
                                <div id="errRange" style="display:none" class="alert-danger1">Range is Required.</div>
                                @Html.Hidden("Range_Text", new { @class = "form-control", id = "Range_Text" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Category:<span class="mandatory">*</span></label>
                                @Html.DropDownListFor(model => model.SubPermissionType, (IEnumerable<SelectListItem>)ViewBag.PremissionSubCategory, "--Select--", new { @class = "form-control", id = "SubPermissionType" })
                                <div id="errPermissionTypeSubCategory" style="display:none" class="alert-danger1">Category is Required.</div>
                                @Html.Hidden("PermissionTypeSubCategory_Text", new { @class = "form-control", id = "PermissionType_Text" })
                            </div>
                        </div>*@
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Reseach Type: </label>
                            @Html.DropDownListFor(model => model.ResearchType, new List<SelectListItem>
                            {
                           new SelectListItem { Text = "--Select--", Value = "--Select--", Selected=true},
                           new SelectListItem { Text = "Wildlife Research", Value = "Research in Wildlife"},
                           new SelectListItem { Text = "Forest Research", Value = "Research in Forest"},
                           new SelectListItem { Text = "Wildlife and Forest Research", Value = "Both"}
                             }, new { @class = "form-control common", id = "researchType" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Select Area Category: </label>
                            @Html.DropDownListFor(model => model.AreaCategory, (IEnumerable<SelectListItem>)ViewBag.Category_List, "--Select--", new { @class = "form-control common", id = "ddl_Category" })

                        </div>
                        <div class="alert-danger1">@Html.ValidationMessageFor(x => x.AreaCategory)</div>
                    </div>

                    <div class="col-lg-6" id="divAnyOther1">
                        <div class="form-group">
                            <label>Place for Research: </label>
                            @Html.DropDownListFor(model => model.PlaceForResearch, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", id = "ddlPlaceForResearch" })
                        </div>
                        <div class="alert-danger1">@Html.ValidationMessageFor(x => x.PlaceForResearch)</div>
                    </div>
                    <div class="col-lg-6" id="divAnyOther1">
                        <div class="form-group">
                            <label>Status: </label>
                            @Html.DropDownListFor(model => model.Status, (IEnumerable<SelectListItem>)ViewBag.Status, new { @class = "form-control", id = "ddlPermission" })
                        </div>
                        <div class="alert-danger1">@Html.ValidationMessageFor(x => x.Status)</div>
                    </div>
                    <div id="btn" class="col-lg-12">
                        <button type="submit" class="btn btn-success" name="Command" value="Save" id="btn_submit1">
                            <i class="fa fa-check"></i> Submit
                        </button>
                        <button type="button" class="btn btn-warning" id="btn_reset">
                            <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                        </button>
                    </div>
                </div>
            </div>
            @*<div class="col-lg-4 pull-right" id="place">
                    <a class="btn btn-success" title="Export to Excel" target="_blank" href='CSPermissionsWildLifeAndForestExport'><i class="fa fa-download"></i> Export to Excel</a>
                </div>
                <br /><br /><br />*@
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="dataTable_wrapper">
                        <div id="tbl" class="table-responsive">
                            <table class="table table-striped table-bordered table-hover table-responsive gridtable" id="dataTables-example">
                                <thead>
                                    <tr>
                                        <th width="5%">S.No</th>
                                        <th width="20%">RequestID</th>
                                        <th width="20%">Request Type</th>
                                        <th width="20%">Place</th>
                                        <th width="10%">Date</th>
                                        <th width="10%">Current Status</th>
                                        <th width="20%">Sent to GOI/GOR</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in ViewData["ListMISCitizenWildLifeAndForestSummary"] as IEnumerable<FMDSS.Models.MIS.MISCitizenModel>)
                                    {
                                        <tr>
                                            <td>
                                                @item.index
                                            </td>
                                            <td onclick="reqdetail('@item.RequestedId','1',false)" style="cursor:pointer;">
                                                <a>@item.RequestedId</a>
                                            </td>
                                            <td>
                                                @item.RequestedType
                                            </td>
                                            <td>
                                                @item.PlaceForResearch
                                            </td>
                                            <td>
                                                @item.ApplicationDate
                                            </td>
                                            <td>
                                                @item.StatusName
                                            </td>
                                            <td>
                                                @item.IsGORGOI
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="modal" id="myModalDfo" tabindex="-1" role="dialog" aria-hidden="false" style="display:none;">
        <div class="modal-dialog mdw">
            <div class="modal-content tbl-scroll" style="    width: 150%;height: 550px;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title" id="myModalLabel">
                        Request Details
                        <button type="button" name="btnprint" id="btnprint" onclick="Print();" class="btn btn-default pull-right">
                            <i class="fa fa-print"></i> Print
                        </button>
                    </h4>
                </div>
                <div id="divApprovalProcess"></div>
            </div>
        </div>
    </div>
</div>
<div class="modal fade in" data-backdrop="static" id="modalAEvidence" tabindex="1" role="dialog" aria-hidden="false"></div>

<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<link href="https://cdn.datatables.net/buttons/1.5.2/css/buttons.dataTables.min.css" rel="stylesheet" />
<link href="~/css/bootstrap-multiselect.css" rel="stylesheet" />
<script type="text/javascript" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
<script src="~/js/bootstrap-multiselect.js"></script>

<script type="text/javascript">
    var table;
    $(document).ready(function () {
        table = $('#dataTables-example').DataTable({
            "aaSorting": [],
            "iDisplayLength": 10,
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'excelHtml5',
                    title: 'Research Report',
                    exportOptions: {
                        columns: ':visible'

                    }
                }
                    ,
                {
                    extend: 'pdfHtml5',
                    title: 'Research Report',
                    orientation: 'landscape',
                    //pageSize: 'LEGAL',
                    exportOptions: {
                        columns: ':visible'

                    }
                }

            ]
        });

    });

</script>
@Html.Hidden("hdnRootURL", Url.Content("~/"))
<script src="~/Scripts/Controller/Common.js"></script>
<script type="text/javascript">
    var origin = '@System.Configuration.ConfigurationManager.AppSettings["websiteUrl"]'; 
     var rootURl = '@Url.Content("~/")';
    function reqdetail(reqId, level, IsShowAssign) {
        //debugger;
        $.ajax({
            type: 'GET',
            url: rootURl + 'MISCitizen/getNocDetail',
            dataType: 'html',
            data: { requestId: reqId },
            success: function (data) {
                //alert(data);
                $('#divApprovalProcess').html(data);
                $("#myModalDfo").modal("show");
                if (IsShowAssign) {
                    $('.divAssign').show();
                }
                else {
                    $('.divAssign').hide();
                }
            },
            error: function (ex) {
                alert('Failed to retrieve Request Data. ' + ex);
            }
        });
    }
    
</script>