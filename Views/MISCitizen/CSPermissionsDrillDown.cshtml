@model FMDSS.Models.MIS.MISCitizenModel
@{
    ViewBag.Title = "CSPermissionsDrillDown";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); //"~/Views/Shared/_SuperAdmin.cshtml";
}
<script>
    var RootUrl = '@Url.Content("~/")';
    $(document).ready(function () {
        if ($('option:selected', $('#Duration')).index() == 1) {
            $("#divdate").css("display", "block");
        }
        else {
            $("#divdate").css("display", "none");
        }
        // date validation ========================================================================
        var currentYear = (new Date).getFullYear();
        var Range = '2008:' + (currentYear + 1)
        $("#FromDate,#ToDate").datepicker({ maxDate: new Date(), yearRange: Range, dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
        var currentDate = new Date();
        $("#FromDate").change(function () {
            $("#ToDate").val('');
        });
        $(document).on('keypress', '#FromDate,#ToDate', function (event) {
            event.preventDefault();
            return false;
        });
        $('#FromDate,#ToDate').keydown(function (event)
        { return cancelBackspace(event) });
        function cancelBackspace(event) {
            if (event.keyCode == 8 || event.keyCode == 46) {
                return false;
            }
        }
        $("#ToDate").change(function () {
            var str1 = $("#FromDate").val();
            var str2 = $("#ToDate").val();
            var L = 3, d1 = $("#FromDate").val().split('/'), d2 = $("#ToDate").val().split('/');
            d1 = new Date(+d1[2], parseInt(d1[1], 10) - 1, parseInt(d1[0], 10));
            d2 = new Date(+d2[2], parseInt(d2[1], 10) - 1, parseInt(d2[0], 10));
            if (new Date(d1) <= new Date(d2)) {
                // parseDate(str1, str2);
            }
            else {
                $("#ToDate").val('');
                alert('Date Must be GreaterThen From Date');
            }
        });
        // date validation ========================================================================
        $('#Duration').change(function (e) {
            if ($('option:selected', $('#Duration')).index() == 1) {
                $("#divdate").css("display", "block");
            }
            else {
                $("#divdate").css("display", "none");
            }
            $('#PermissionType_Text').val($("#PermissionType option:selected").text());
        });
        $('#Circle').change(function (e) {
            $('#Circle_Text').val($("#Circle option:selected").text());
            $("#Division").empty();
            $("#Range").empty();
            $("#Range").append('<option value="' + "0" + '">' + "--Select--" + '</option>');
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/DivisionData', // we are calling json method
                dataType: 'json',
                data: { circleCode: $("#Circle").val() },
                success: function (circle) {
                    $.each(circle, function (i, items) {
                        $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $('#Division').change(function (e) {
            $("#Range").empty();
            $('#Division_Text').val($("#Division option:selected").text());
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/RangeData', // we are calling json method
                dataType: 'json',
                data: { DivisionCode: $("#Division").val() },
                success: function (divCode) {
                    $.each(divCode, function (i, items) {
                        $("#Range").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
        $('#Range').change(function (e) {
            $('#Range_Text').val($("#Range option:selected").text());
        });
        $('#PermissionType').change(function (e) {
            $('#PermissionType_Text').val($("#PermissionType option:selected").text());
        });
        $(document).on('click', '.RejectedRecords', function (e) {
            var Categorys = $(this).parents('tr').find('input[name=Categorys]').val();
            var StatusNames = $(this).parents('tr').find('input[name=StatusNames]').val();
            var PlaceId = $(this).parents('tr').find('input[name=indexN]').val();

            $('#btn_' + PlaceId).find('i').toggleClass("fa-plus fa-minus");

            //$('#btn_' + PlaceId).attr('src','images/minus.png');
            $('#ID_' + PlaceId).toggle();
            $('#ID_' + PlaceId).html("");
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/GetNOCsRejectApplicationData', // we are calling json method
                dataType: 'json',
                data: { category: Categorys, status: StatusNames, },
                success: function (response) {
                    var str = '<thead><th>ApplicationNo</th><th>Remark</th></thead>';
                    $('#ID_' + PlaceId).append(str);
                    $.each(response, function (i, item) {
                        $('#ID_' + PlaceId).append('<tbody><tr> <td>  <a id="btnAddModel" data-target="#myModal" data-toggle="modal" href="javascript:void(0);" onclick=CallApplicationNo("' + response[i].ApplicationNo + '_' + StatusNames + '") >' + response[i].ApplicationNo + ' </a></td> <td> ' + response[i].Remark + ' </td> </tr>  </tbody>');
                    });
                },
                error: function (ex) {
                    alert(ex.error);
                }
            });
        });
        $('#btn_submit1').click(function (e) {
            if ($('option:selected', $('#Duration')).index() == 0) {
                $("#errDuration").css("display", "block");
                $('#errDuration').focus();
                return false;
            }
            else {
                $("#errDuration").css("display", "none");
                $("#errFromDate").css("display", "none");
                $("#errToDate").css("display", "none");
            }
            if ($('option:selected', $('#Duration')).index() == 1) {
                if ($('#FromDate').val() == '') {
                    $("#errFromDate").css("display", "block");
                    $('#errFromDate').focus();
                    return false;
                }
                else {
                    $("#errFromDate").css("display", "none");
                }
                if ($('#ToDate').val() == '') {
                    $("#errToDate").css("display", "block");
                    $('#errToDate').focus();
                    return false;
                }
                else {
                    $("#errToDate").css("display", "none");
                }
            }
            if ($('option:selected', $('#Circle')).index() == 0) {
                $("#errCircle").css("display", "block");
                $('#errCircle').focus();
                return false;
            }
            else {
                $("#errCircle").css("display", "none");
            }
            if ($('option:selected', $('#Division')).index() == 0) {
                $("#errDivision").css("display", "block");
                $('#errDivision').focus();
                return false;
            }
            else {
                $("#errDivision").css("display", "none");
            }
            if ($('option:selected', $('#Range')).index() == 0) {
                $("#errRange").css("display", "block");
                $('#errRange').focus();
                return false;
            }
            else {
                $("#errRange").css("display", "none");
            }
            if ($('option:selected', $('#SubPermissionType')).index() == 0) {
                $("#errPermissionTypeSubCategory").css("display", "block");
                $('#errPermissionTypeSubCategory').focus();
                return false;
            }
            else {
                $("#errPermissionTypeSubCategory").css("display", "none");
            }
        });
        $('#tCircle').change(function (e) {
            $('#errTCircle').text('');          
            $('#errTCircle').hide();
            
        });
        $('#tDivision').change(function (e) {
            $('#errTDivision').text('');
            $('#errTDivision').hide();
        });
        $('#tCircle').change(function (e) {         
            $("#tDivision").empty();           
            let isFirst = false;
            $.ajax({
                type: 'POST',
                url: RootUrl + 'MISCitizen/DivisionData', // we are calling json method
                dataType: 'json',
                data: { circleCode: $("#tCircle").val() },
                success: function (circle) {
                    $.each(circle, function (i, items) {
                        if (items.Value != 'ALL')
                            $("#tDivision").append('<option value="' + items.Value + '">' + items.Text + '</option>');                       
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
    });
    function CallApplicationNo(id) {
        $.ajax({
            type: 'GET',
            url: RootUrl + 'MISCitizen/GetNOCApplicationDetails', // we are calling json method
            dataType: 'html',
            data: { ids: id },
            success: function (data) {
                $('#modelPlace').html(data);
            },
            error: function (ex) {
                alert(ex.error);
            }
        });
    };
    function TransferNOC() { 
        myDivObj = document.getElementById("nocRequestId");
        $("#TransferNoModal").modal({
            backdrop: 'static',
            keyboard: false,
        });
        var requestId = myDivObj.innerHTML;
        $.ajax({
            type: 'GET',
            url: RootUrl + 'MISCitizen/GetCurrentCircleDivision', // we are calling json method
            dataType: 'html',
            dataType: "json",
            contentType: "application/json; charset=utf-8",  
            data: { RequestId: requestId },
            success: function (data) {              
                $('#nocRequestNo').text(requestId);
                $('#applicantName').text(data.ApplicantName);
                $('#typeOfNOC').text(data.TypeOfNoc);
                $('#currentCircle').text(data.CIRCLE_NAME + '[' + data.CIRCLE_CODE+']');//CurCircleDiv.CIRCLE_NAME
                $('#currentDivision').text(data.DIV_NAME + '[' + data.DIV_CODE + ']');//CurCircleDiv.DIV_NAME
                $('#tCircle').val(null);
                $('#tDivision').val(null);
                $('#TransferNoModal').modal('show');
            },
            error: function (ex) {
                alert(ex.error);
            }
        });
       
    }
    function TransferClose() {
        $('#errTRequestNoc').text('');
        $('#errTRequestNoc').hide('');
        $('#applicantName').text('');
        $('#typeOfNOC').text('');
        $('#tCircle').val(null);
        $('#tDivision').val(null);
        $('#TransferNoModal').modal('hide');
       
    }
    function TransferNoc() {
        var isValid = true;
        var Circle = $('#tCircle').val();
        var division = $('#tDivision').val();
        var RequestIdNoc = $('#nocRequestNo').text();
        if (Circle == null || Circle == undefined) {
            $('#errTCircle').text('Please Enter Circle Name');
            $('#errTCircle').show();
            $("#tCircle").focus();
            isValid = false;
        }
        if (division == null || division == undefined) {
            $('#errTDivision').text('Please Enter Division Name');
            $('#errTDivision').show();
            $("#tDivision").focus();
            isValid = false;
        }
        if (RequestIdNoc == null || RequestIdNoc == undefined) {
            $('#errTRequestNoc').text('No Request Id Found');
            $('#errTRequestNoc').show();
            alert('No Request Id Found');
            isValid = false;
        }
        if (isValid == true) {
            if (confirm('Are you sure ?')) {        
                var myData = { RequestId: RequestIdNoc, tDiv_Code: division };
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'MISCitizen/TransferNocDivision', // we are calling json method
                    dataType: 'html',
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(myData),
                    success: function (data) {
                        $('#nocRequestNo').text('');
                        $('#applicantName').text('');
                        $('#typeOfNOC').text('');
                                                
                        $('#currentCircle').text('');//CurCircleDiv.CIRCLE_NAME
                        $('#currentDivision').text('');//CurCircleDiv.DIV_NAME
                        $('#tCircle').val(null);
                        $('#tDivision').val(null);
                        alert(data.Msg);
                        $('#TransferNoModal').modal('hide');
                    },
                    error: function (ex) {
                        alert(ex.error);
                    }
                });
            }
        }
    }
    
</script>
<div class="row">
    <div class="col-lg-9 pad">
        <h1 class="page-header"><span>Report : Report :NOCs Permissions Status</span></h1>
    </div>
    @using (Html.BeginForm("CSPermissionsDrillDown", "MISCitizen", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label>Duration:<span class="mandatory">*</span></label>
                            @Html.DropDownListFor(model => model.Duration, (IEnumerable<SelectListItem>)ViewBag.Duration, new { @class = "form-control", id = "Duration" })
                            <div id="errDuration" class="alert-danger1" style="display:none"> Duration is Required. </div>
                        </div>
                    </div>
                    <div id="divdate">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>From Date:<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(model => model.FromDate, new { @class = "form-control common datefield", id = "FromDate" })
                                <span id="errFromDate" style="display: none" class="alert-danger1">From Date is Required.</span>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>To Date:<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(model => model.ToDate, new { @class = "form-control common datefield", id = "ToDate" })
                                <span id="errToDate" style="display: none" class="alert-danger1">To Date is Required.</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Circle:<span class="mandatory">*</span></label>
                            @Html.DropDownListFor(model => model.Circle, (IEnumerable<SelectListItem>)ViewBag.CIRCLE, new { @class = "form-control", id = "Circle" })
                            <div id="errCircle" style="display:none" class="alert-danger1">Circle is Required.</div>
                            @Html.Hidden("Circle_Text", new { @class = "form-control", id = "Circle_Text" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Division:<span class="mandatory">*</span></label>
                            @Html.DropDownListFor(model => model.Division, (IEnumerable<SelectListItem>)ViewBag.Division, new { @class = "form-control", id = "Division" })
                            <div id="errDivision" style="display:none" class="alert-danger1">Division is Required.</div>
                            @Html.Hidden("Division_Text", new { @class = "form-control", id = "Division_Text" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Range:<span class="mandatory">*</span></label>
                            @Html.DropDownListFor(model => model.Range, (IEnumerable<SelectListItem>)ViewBag.Range, new { @class = "form-control", id = "Range" })
                            <div id="errRange" style="display:none" class="alert-danger1">Range is Required.</div>
                            @Html.Hidden("Range_Text", new { @class = "form-control", id = "Range_Text" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">
                            <label>Category:<span class="mandatory">*</span></label>
                            @Html.DropDownListFor(model => model.SubPermissionType, (IEnumerable<SelectListItem>)ViewBag.PremissionSubCategory, "--Select--", new { @class = "form-control", id = "SubPermissionType" })
                            <div id="errPermissionTypeSubCategory" style="display:none" class="alert-danger1">Category is Required.</div>
                            @Html.Hidden("PermissionTypeSubCategory_Text", new { @class = "form-control", id = "PermissionType_Text" })
                        </div>
                    </div>
                    <div id="btn" class="col-lg-12">
                        <button type="submit" class="btn btn-success" name="Command" value="Save" id="btn_submit1">
                            <i class="fa fa-check"></i> Submit
                        </button>
                        <button type="button" class="btn btn-warning" id="btn_reset">
                            <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                        </button>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 pull-right" id="place">
                <a class="btn btn-success" title="Export to Excel" target="_blank" href='CSPermissionsDrillDownExport'><i class="fa fa-download"></i> Export to Excel</a>
            </div>
            <br /><br /><br />
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="dataTable_wrapper">
                        <div id="tbl" class="table-responsive">
                            <table class="table table-striped table-bordered table-hover table-responsive gridtable">
                                <thead>
                                    <tr>
                                        <th width="20%">Category</th>
                                        <th width="20%">Status</th>
                                        <th width="60%"></th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var item in ViewData["ListMISCitizenModelSummary"] as IEnumerable<FMDSS.Models.MIS.MISCitizenModel>)
                                    {
                                        <tr>
                                            <td>

                                                @Html.Hidden("Categorys", item.Category)
                                                @Html.Hidden("StatusNames", item.StatusName)

                                                @Html.Hidden("index", item.index)
                                                @Html.Hidden("indexN", item.index)
                                                @if (item.CategoryStatus == "True")
                                                {
                                                    @Html.DisplayFor(model => item.Category)
                                                }
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.Status)
                                                @*<img src="~/images/Plus.png" />*@

                                                <button type="button" id="btn_@item.index" class="RejectedRecords" title="Expand for more details">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </td>
                                            <td>
                                                <table cellpadding="0" id="ID_@item.index" style="display:none;" class="table table-striped table-bordered table-hover table-responsive dataTable no-footer"></table>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
        <div class="modal fade" id="myModal" role="dialog">
            <div class="modal-dialog modal-lg" id="modelPlace">
                <!-- Modal content-->
            </div>
            <div class="row">
                <div class="modal fade" id="TransferNoModal" role="dialog" style="z-index: 1400;margin-right:15px;">
                    <div class="modal-dialog modal-lg" id="modelTransferNo" style="background-color:white;border: SOLID;BORDER-WIDTH: 1PX;">
                        <!-- Modal content-->
                        <div class="modal-header">
                            <button type="button" class="close" onclick="TransferClose();" aria-hidden="true">×</button>
                            <h3>Transfer NOC</h3>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12">
                            <div class="col-lg-12 col-md-12 col-sm-12 center">
                                <div class="form-group">

                                    <label>NOC Request No</label>
                                    <label><span class="Bold" id="nocRequestNo"></span></label>
                                    <div id="errTRequestNoc" class="alert-danger1" style="display:none"> Duration is Required. </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Applicant Name:</label>
                                    <label><span class="Bold" id="applicantName"></span></label>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Type of NOC:</label>
                                    <label><span class="Bold" id="typeOfNOC"></span></label>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Curent Circle:</label>
                                    <label><span class="Bold" id="currentCircle"></span></label>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Curent Division:</label>
                                    <label><span class="Bold" id="currentDivision"></span></label>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12">
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Circle:<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(model => model.Circle, (IEnumerable<SelectListItem>)ViewBag.TransferCircle, new { @class = "form-control", id = "tCircle" })
                                    <div id="errTCircle" class="alert-danger1" style="display:none"> Duration is Required. </div>
                                </div>
                            </div>
                            <div class="col-lg-6 col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Division:<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(model => model.Division, (IEnumerable<SelectListItem>)ViewBag.Division, new { @class = "form-control", id = "tDivision" })
                                    <div id="errTDivision" class="alert-danger1" style="display:none"> Duration is Required. </div>
                                </div>
                            </div>                           
                        </div>
                        <div class="modal-footer">
                            <button class="btn" onclick="TransferClose();" aria-hidden="true">Close</button>
                            <button class="btn btn-primary" onclick="TransferNoc();">Transfer NOC</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    
</div>


<form id="postData" name="postData" method="post" target="_blank">
    <input type="hidden" id="portalid" name="portalid" value="rajcomp123" />
    <input type="hidden" id="ssoid" name="ssoid" value="" />
    <input type="hidden" id="requestFor" name="requestFor" value="" />
    <input type="hidden" id="fileName" name="fileName" value="" />
</form>
<script type="text/javascript">
    $.noConflict(true);
</script>
<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
@*<script src="~/js/bootstrap.min.js"></script>*@
@*<script src="~/js/Common.js"></script>*@
@*<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />*@
<script>
    function ViewKML() {
        document.getElementById("portalid").value = 'rajcomp123';
        document.getElementById("ssoid").value = '@Session["SSOID"]';
        document.getElementById("requestFor").value = $("#NOCType").val();
        document.getElementById("fileName").value = $("#NOCID").val();
        document.getElementById("postData").action = "https://gis.rajasthan.gov.in/fmdssgis/gisview/viewongis.aspx";//'http://10.68.128.179/fmdssgis/gisview/viewongis.aspx';
        document.getElementById("postData").submit();
    }
</script>