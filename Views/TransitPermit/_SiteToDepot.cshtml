@model FMDSS.Models.ForestDevelopment.TransitPermit
<div class="border-add" id="dvSite">
    <fieldset class="scheduler-border" style="width: 100%;">
        <legend class="scheduler-border">From Site</legend>

        <div class="col-lg-6">
            <div class="form-group">
                <label for="GramPanchayat">
                    Range name:<span class="mandatory">*</span>
                </label>
                @Html.DropDownList("RangeCode", (IEnumerable<SelectListItem>
                    )ViewBag.FromRangeCode, "---Select---", new { @class = "form-control common", title = "Select Range Name", id = "ddl_rangeCode" })
                    <div id="errordiv4" style="display:none" class="alert-danger1"></div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                <label for="Village">
                    From Site:<span class="mandatory">*</span>
                </label>
                @Html.DropDownList("VillageCode", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control common", title = "Select Village", id = "ddlVillCode", onchange = "VillCode_OnChange(this)" })

                <div id="errordiv5" style="display:none" class="alert-danger1"></div>
            </div>
        </div>
        <div class="col-lg-6 OtherSiteName hide">
            <div class="form-group">
                <label for="Village"> 
                    Other Site Name:<span class="mandatory">*</span>
                </label> 
                @Html.TextBoxFor(x => x.OtherSiteName, new { @class = "form-control", @placeholder = "Other Site Name", @maxlength = 50, @id = "txtOtherSiteName" })
                <div id="errordivOtherSiteName" class="alert-danger1"></div>
            </div>
        </div>
    </fieldset>
</div>

<div class="border-add" id="dvdepotto">
    <fieldset class="scheduler-border">
        <legend class="scheduler-border">To Depot</legend>

        <div class="col-lg-6">
            <div class="form-group">
                <label>Division Name: <span class="mandatory">*</span></label>
                @Html.DropDownList("ToDivisionCode", (IEnumerable<SelectListItem>
                    )ViewBag.ToDivisionCode, "--Select--", new { @class = "form-control notranslate", title = "Division Name", id = "ToDivisionCode" })
                    <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.ToDivisionCode)</div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                <label>Range Name: <span class="mandatory">*</span></label>

                @Html.DropDownList("ToRangeCode", (IEnumerable<SelectListItem>
                    )ViewBag.ToRangeCode, "--Select--", new { @class = "form-control", title = "Select Range", id = "ddl_RangeCodeto" })
                    <span id="errorRange" style="color: Red; display: none" class="alert-danger1">* Please Select Range.</span>
                    <div id="errordiv19" style="display:none" class="alert-danger1"></div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="form-group">
                <label for="Village">
                    To Depot:<span class="mandatory">*</span>
                </label>
                @Html.DropDownList("ToDepotCode", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control common", title = "Select Depot Name", id = "ddlDepot" })

                <div id="errordiv20" style="display:none" class="alert-danger1"></div>

            </div>
        </div>

        <div class="col-lg-6">
            <div class="form-group">
                <label>Name of Depot Incharge:</label>
                <input readonly="" id="depotInchargeto" name="depotInchargeto" class="form-control">
            </div>
        </div>
    </fieldset>
</div>

<div class="col-lg-12">
    <label>Product Details:</label>
    <div id="errordivProductDetails" style="display:none" class="alert-danger1"></div>
    <div class="form-group"> 
        <table id="tblTPProductDetails" class="table table-striped table-bordered table-hover notranslate">
            <thead>
                <tr style="color:#999; background-color:#ddd;">
                    <td colspan="7"><i>Product Details</i></td>
                </tr> 
                <tr>
                    <th style="width:14%">Product Type<span class="mandatory">*</span></th>
                    <th style="width:14%">Product</th>
                    <th style="width:14%">Unit</th>
                    <th style="width:14%">Is Existing Lot</th>
                    <th style="width:14%">Lot Number</th>
                    <th style="width:14%">Lot Size</th>
                    <th style="width:14%">No of Lot</th>
                </tr>
            </thead>
            <tbody id="tbTPProductDetails" class="tbviewdet">
                @if (Model.DODProductList == null)
                {
                <tr class="rowSkip">
                    <td colspan="7">No record found.</td>
                </tr>
                }

                @*@if (Model.DODProductList != null)
                {
                for (int i = 0; i < Model.DODProductList.Count; i++)
                {
                <tr>
                    <td>
                        @Html.HiddenFor(x => Model.DODProductList[i].ID)
                        @Html.DropDownListFor(m => m.DODProductList[i].ProductTypeID, new SelectList(ViewBag.ProduceType_List, "Value", "Text"), "--Select--", new { @class = "form-control common", title = "Select product type to be transferred eg: Bamboo", id = "ddlProduceType_" + i })
                    </td>
                    <td>@Html.DropDownListFor(m => m.DODProductList[i].ProductID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", id = "ddlProduct_" + i })</td>
                    <td>@Html.TextBoxFor(s => Model.DODProductList[i].Qty, new { id = "txtQty_" + i, size = "15", onkeypress = "AllowNumberOnly(event)", autocomplete = "off" })</td>
                </tr>
                }
                }
                else
                {
                <tr class="rowSkip">
                    <td colspan="6">No record found.</td>
                </tr>
                }*@
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="7"><div><a onclick='AddNewRowOB(0)' href="javascript:void(0)">Add New Row</a></div></td>
                </tr>
            </tfoot>
        </table> 
    </div>
    
</div>

<div class="col-lg-6">
    <div class="form-group">
        <label>Mode Of Transport: <span class="mandatory">*</span></label>
        @Html.DropDownListFor(x => x.ModeofTransport, (IEnumerable<SelectListItem>
            )ViewBag.TransportMode, "--Select--", new { @class = "form-control common", title = "Select Mode Of Transport", id = "ddlModeOfTransport", onchange = "TransportMode_Change(this)" })
            <div id="errordiv24" style="display:none" class="alert-danger1"></div>
    </div>
</div>

<div class="col-lg-6" id="divVehicleNumber">
    <div class="form-group">
        <label>Vehicle Number: <span class="mandatory">*</span></label>
        @Html.TextBoxFor(x => x.VehicleNumber, new { @class = "form-control Alphanumeric", title = "Enter Vehicle Number eg: RJ14SD0223", @placeholder = "Enter Vehicle Number", @maxlength = 50, @id = "VehicleNumber" })
        <div id="errordiv25" style="display:none" class="alert-danger1"></div>

    </div>
    <div class="form-group hide">
        <button type="button" class="btn btn-success" title="Save" style="width:30%" name="Command" onclick="GetRTODetails()" value="Get RTO Details" id="BtnGetRTODetails">
            <i class="fa fa-plus"></i> Get RTO Details
        </button>
    </div>
</div>

<div class="col-lg-6">
    <div class="form-group">
        <label>Driver License No:</label>
        @Html.TextBoxFor(x => x.Driver_License_No, new { @class = "form-control Alphanumeric", title = "Enter Driver Licence Number eg: RJ05jsde78945613", @placeholder = "Enter Driver License No", @maxlength = 50, @id = "Driver_License_No" })
        <div id="errordiv26" style="display:none" class="alert-danger1"></div>
    </div>
</div>

<div class="col-lg-6">
    <div class="form-group">
        <label>Driver Name:</label>
        @Html.TextBoxFor(x => x.Driver_Name, new { @class = "form-control Alphanumeric", title = "Enter Driver Name eg: Narendra Singh", @placeholder = "Enter Driver Name", @maxlength = 50, @id = "Driver_Name" })
        <div id="errordiv27" style="display:none" class="alert-danger1"></div>
    </div>
</div>

<div class="col-lg-6">
    <div class="form-group">
        <label>Driver Mobile No:</label>
        @Html.TextBoxFor(x => x.Driver_MobNo, new { @class = "form-control Alphanumeric", title = "Enter Driver Mobile Number eg: 9568985698", @placeholder = "Enter Driver Mobile No", @maxlength = 10, @id = "Driver_MobNo" })
        <div id="errordiv28" style="display:none" class="alert-danger1"></div>
    </div>
</div>

<div class="col-lg-6">
    <div class="form-group">
        <label>Validity of Transit Permit:<span class="mandatory">*</span></label>
        <div data-date-format="mm-dd-yyyy" class="input-group date" id="datepicker">
            @Html.TextBoxFor(x => x.Permit_ValidUpto, new { @class = "form-control datefield", title = "Enter Date of Permit Validity eg: 02/21/2016", @maxlength = 50, @id = "Permit_ValidUpto", @readonly = "readonly" })
            <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
            <div id="errordiv29" style="display:none" class="alert-danger1"></div>
        </div>
    </div>
</div>

<div class="col-lg-6" style="display:none;">
    <div class="form-group">
        <label>Amount to be Paid (INR):</label>
        @Html.TextBoxFor(x => x.Amount_ToBePaid, new { @class = "form-control Numeric", title = "Enter Amt to be Paid eg: 7580.00", @placeholder = "Enter Amount to be Paid", @maxlength = 50, @id = "Amount_ToBePaid" })
        <div id="errordiv30" style="display:none" class="alert-danger1"></div>
    </div>
</div>

<div class="col-lg-6">
    <div class="form-group">
        <label>Remarks/Comment:</label>
        @Html.TextAreaFor(x => x.Comment, new { @class = "form-control" })
        <div id="errordiv30" style="display:none" class="alert-danger1"></div>
    </div>
</div>

@Html.Hidden("FromVillage_Code", "", new { id = "hdnFromVillage_Code" })

<script>
    $(document).ready(function () {
        $(".datefield").datepicker({ minDate: 0, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } }).datepicker("setDate", new Date());
        $(document).on('change', '#ddl_rangeCode', function () {
            $('#ddlVillCode').empty();
            $("#ddlVillCode").append('<option value="">' + "--Select--" + '</option>');
            if ($(this).val() != '') {
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'TransitPermit/GetDropdownData',
                    data: { key: "FromSite", parentID: $(this).val() },
                    success: function (response) {
                        $.each(response.data, function (i, items) {
                            $("#ddlVillCode").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                        });
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }
        });
    })

    function AddNewRowOB(objectID) {
        var isValid = true;
        var rootURl = $('#hdnRootURL').val();
        $('#tblTPProductDetails').find('input[id^="txtQty_"]').each(function () {
            if ($(this).val() == '') {
                alert('Please enter current row details first.');
                isValid = false;
                return false;
            }
        })

        if (isValid) {
            var cIndx = $('#tbTPProductDetails').find('tr:not(.rowSkip)').length;
            $.ajax({
                type: 'GET',
                data: { "currentRowIndex": cIndx, "objectID": objectID },
                url: rootURl + "TransitPermit/AddNewRowForTPProduct",
                dataType: 'html',
                success: function (data) {
                    $('#tbTPProductDetails').find('.rowSkip').remove();
                    $('#tbTPProductDetails').append(data);
                },
                error: function (ex) {
                    console.log(ex.error);
                }
            });
        }
    }

    function VillCode_OnChange(cntrl) {
        var cntrlValue = cntrl.value;
        $('#hdnFromVillage_Code').val(cntrlValue);
        if (cntrlValue == "Other") {
            $(".OtherSiteName").removeClass("hide").addClass('required');
        }
        else {
            $(".OtherSiteName").removeClass('required').addClass("hide");
        }
    }

    function OnChange_ProductType(cntrl) {
        var cntrlID = $(cntrl).closest('tr').find("select[id^='ddlProductName_']").attr("id");
        $("#" + cntrlID).empty().append('<option value="">' + "--Select--" + '</option>');
        var ddlProduceType = $(cntrl).val();
        $(cntrl).closest('tr').find("input.product,select.product").val(""); 
        $(cntrl).closest('tr').find("input[id^='txtPUnit_']").val("N/A");

        if (ddlProduceType != '') {
            $.ajax({
                type: 'POST',
                url: RootUrl + 'WorkOrder/SelectProductByProduceType',
                dataType: 'json',
                data: { ProduceTypeID: ddlProduceType },
                success: function (range) {

                    $.each(range, function (i, items) {
                        $("#" + cntrlID).append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                    });
                },
                error: function (ex) {
                }

            });
        }
    }

    function OnChange_Product(cntrl) {
        $(cntrl).closest('tr').find("input.productType,select.productType").val("");

        var labelId = $(cntrl).closest('tr').find("input[id^='txtPUnit_']").attr("id");
        var producttype = $(cntrl).closest('tr').find("select[id^='ddlProduceType_']").val();
        $.ajax({
            type: 'POST',
            url: RootUrl + 'WorkOrder/GetUnitByProduct',
            dataType: 'json',
            data: { ProduceTypeID: producttype },
            success: function (range) {
                $.each(range, function (i, items) {
                    $("#" + labelId).val(items.Text);
                });
            },
            error: function (ex) {
            }

        });
    }

    function OnChange_IsExistingLot(cntrl) {
        var rowIndex = $(cntrl).data('rowindex');
        var toDepot = $('#ddlDepot').val();
        var productID = $('#ddlProductName_' + rowIndex).val();
        var isExitingLot = $('#ddlIsExistingLot_' + rowIndex).val();
        $("#ddlDisplayLotNumber_" + rowIndex).empty().append('<option value="">' + "--Select--" + '</option>'); 

        if (isExitingLot == "True") {
            if (toDepot != '' && productID != "") {
                $('#txtNoOfLot_' + rowIndex).val('1').attr('readonly', true); 
                $("#ddlDisplayLotNumber_" + rowIndex).addClass('required');
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'TransitPermit/GetDropdownData',
                    dataType: 'json',
                    data: { key: "InventoryLot", parentID: toDepot, childID: productID },
                    success: function (response) { 
                        $.each(response.data, function (i, item) {
                            $("#ddlDisplayLotNumber_" + rowIndex).append('<option value="' + item.Value + '">    ' + item.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                    }

                });
            }
            else {
                alert('Please select To Depot & Product details first.');
                $('#ddlIsExistingLot_' + rowIndex).val('');
            }
        }
        else {
            $('#txtNoOfLot_' + rowIndex).val('1').removeAttr('readonly');
            $("#ddlDisplayLotNumber_" + rowIndex).removeClass('required');
        }
    }
</script>