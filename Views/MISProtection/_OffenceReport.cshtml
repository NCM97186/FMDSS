@model IEnumerable<FMDSS.Entity.Protection.ViewModel.ViewOffenceDetails>

<div class="panel panel-default">
    <div class="panel-heading">
        <strong>Select Columns</strong>
        <select id="demo" multiple="multiple">
            <option data-column="0" selected="selected">SNO</option>
            <option data-column="1" selected="selected">Circle Name</option>
            <option data-column="2" selected="selected">Division Name</option>
            <option data-column="3" selected="selected">Range Name</option>
            <option data-column="4" selected="selected">Naka Name</option>
            <option data-column="5" selected="selected">FIR Number</option>
            <option data-column="6" selected="selected">FIR Date</option>
            <option data-column="7" selected="selected">Request ID</option>
            <option data-column="8" selected="selected">Latitude</option>
            <option data-column="9" selected="selected">Longitude</option>
            <option data-column="10" selected="selected">Offender Name</option>
            <option data-column="11" selected="selected">Offender Address</option>
            <option data-column="12" selected="selected">Description</option>
            <option data-column="13" selected="selected">Investigator Officer</option>
            <option data-column="14" selected="selected">Total Item Seized</option>
            <option data-column="15" selected="selected">Compound Amount</option>
            <option data-column="16" selected="selected">Court Name</option>
            <option data-column="17" selected="selected">Court Case No</option>
            <option data-column="18" selected="selected">Next Hearing Date</option>
            <option data-column="19" selected="selected">Date Of Final Report</option>
            <option data-column="20" selected="selected">Special Remarks</option>
            <option data-column="21" selected="selected">Status</option>
        </select>
        <button class="btn btn-info pull-right" style="width:12%;" onclick="tablesToExcel(['tblOffenceReport'], ['tblOffenceReport'], 'OffenceReport', 'Excel')">Export to Excel</button>
    </div>

    <div class="panel-body">
        <div id="tbl" class="table-responsive">
            
            <span style="display:block;">Select All to download all records.</span><br />
            <table class="table table-striped table-bordered table-hover" id="tblOffenceReport">
                <thead>
                    <tr>
                        <th>SNO</th>
                        <th>Circle Name</th>
                        <th>Division Name</th>
                        <th>Range Name</th>
                        <th>Naka Name</th>
                        <th>FIR Number</th>
                        <th>FIR Date</th>
                        <th>Request ID</th>
                        <th>Latitude</th>
                        <th>Longitude</th>
                        <th>Offender Name</th>
                        <th>Offender Address</th>
                        <th>Offence Description</th>
                        <th>Investigator Officer</th>
                        <th>Total Item Seized</th>
                        <th>Compound Amount</th>
                        <th>Court Name</th>
                        <th>Court Case No</th>
                        <th>Next Hearing Date</th>
                        <th>Date Of Final Report</th>
                        <th>Special Remarks</th>
                        <th>Status</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Count() > 0)
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(model => item.RowID)</td>
                                <td>@Html.DisplayFor(model => item.CIRCLE_NAME)</td>
                                <td>@Html.DisplayFor(model => item.DIV_NAME)</td>
                                <td>@Html.DisplayFor(model => item.RANGE_NAME)</td>
                                <td>@Html.DisplayFor(model => item.NakaName)</td>
                                <td>@Html.DisplayFor(model => item.FIRNumber)</td>
                                <td>@Html.DisplayFor(model => item.FIRDate)</td>
                                <td>@Html.DisplayFor(model => item.OffenceDetailsID)</td>
                                <td>@Html.DisplayFor(model => item.Latitude)</td>
                                <td>@Html.DisplayFor(model => item.Longitude)</td>
                                <td>@Html.DisplayFor(model => item.OffenderName)</td>
                                <td>@Html.DisplayFor(model => item.OffenderAddress)</td>
                                <td>@Html.DisplayFor(model => item.OffenceDescription)</td>
                                <td>@Html.DisplayFor(model => item.InvestigatorOfficer)</td>
                                <td>@Html.DisplayFor(model => item.TotalItemSeized)</td>
                                <td>@Html.DisplayFor(model => item.CompoundAmount)</td>
                                <td>@Html.DisplayFor(model => item.CourtName)</td>
                                <td>@Html.DisplayFor(model => item.CourtCaseNumber)</td>
                                <td>@Html.DisplayFor(model => item.NextHearingDate)</td>
                                <td>@Html.DisplayFor(model => item.DateOfFinalReport)</td>
                                <td>@Html.DisplayFor(model => item.SpecialRemarks)</td>
                                <td>@Html.DisplayFor(model => item.StatusName)</td>
                            </tr>
                        }
                    }
                </tbody>
                @*else
                    {
                        <tr>
                            <td colspan="20">No record found.</td>
                        </tr>
                    }*@

            </table>
        </div>
    </div>

</div>
<script src="~/js/jquery.min.js"></script>
<script src="~/js/bootstrap-multiselect.js"></script>

<script type="text/javascript">
    var table;
    $(document).ready(function () {
        table = $('#tblOffenceReport').DataTable({
            "paging": true,
            "aLengthMenu": [[10, 25, 50, 75, 100, 500, -1], [10, 25, 50, 75, 100, 500, "All"]],
            "iDisplayLength": 10
        });
    });

    $('#demo').multiselect({
        enableFiltering: true,
        enableCaseInsensitiveFiltering: true,
        includeSelectAllOption: true,
        includeSelectAllIfMoreThan: 0,

        maxHeight: 250,
        onChange: function (element, checked) {
            var column = table.column($(element).attr('data-column'));
            if (checked) {
                column.visible(true);
            }
            else {
                column.visible(false);
            }
        },
        onSelectAll: function () {
            table.columns().every(function () {
                var data = this.visible(true);
            });
        },
        onDeselectAll: function () {
            table.columns().every(function () {
                var data = this.visible(false);
            });
        }
    });




    //$('#demo').change(function () {
    //    alert($(this).val());
    //});

    //$('a.toggle-vis').on('click', function (e) {
    //    e.preventDefault();

    //    // Get the column API object
    //    var column = table.column($(this).attr('data-column'));

    //    // Toggle the visibility
    //    column.visible(!column.visible());
    //});
    //$('#tblOffenceReport').DataTable({
    //    "responsive": true,
    //    "bSort": true,
    //    "aLengthMenu": [[10, 25, 50, 75,100, -1], [10, 25, 50, 75,100, "All"]],
    //    "iDisplayLength": 10
    //});

    $.noConflict(true);

    var tablesToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
            , tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
                + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'
                + '<Styles>'
                + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
                + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
                + '</Styles>'
                + '{worksheets}</Workbook>'
            , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
            , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
            , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (tables, wsnames, wbname, appname) {
            var ctx = "";
            var workbookXML = "";
            var worksheetsXML = "";
            var rowsXML = "";
            console.log(tables);
            var getFilterFromDate = document.getElementById('txtFromDate').value;
            var getFilterToDate = document.getElementById('txtToDate').value;
            wbname = wbname + "FromDate:-" + getFilterFromDate + "- ToDate:-" + getFilterToDate + '.xls';

            for (var i = 0; i < tables.length; i++) {
                if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);
                for (var j = 0; j < tables[i].rows.length; j++) {
                    rowsXML += '<Row>'
                    for (var k = 0; k < tables[i].rows[j].cells.length; k++) {
                        var dataType = tables[i].rows[j].cells[k].getAttribute("data-type");
                        var dataStyle = tables[i].rows[j].cells[k].getAttribute("data-style");
                        var dataValue = tables[i].rows[j].cells[k].getAttribute("data-value");
                        dataValue = (dataValue) ? dataValue : tables[i].rows[j].cells[k].innerHTML.trim();
                        if (dataValue.indexOf('button') == -1) {
                            var dataFormula = tables[i].rows[j].cells[k].getAttribute("data-formula");
                            dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                            ctx = {
                                attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date') ? ' ss:StyleID="' + dataStyle + '"' : ''
                                , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                                , data: (dataFormula) ? '' : dataValue
                                , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : ''
                            };
                            rowsXML += format(tmplCellXML.trim(), ctx);
                        }
                    }
                    rowsXML += '</Row>'

                }
                ctx = { rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i };
                worksheetsXML += format(tmplWorksheetXML, ctx);
                rowsXML = "";
            }

            ctx = { created: (new Date()).getTime(), worksheets: worksheetsXML };
            workbookXML = format(tmplWorkbookXML, ctx);

            console.log(workbookXML);

            var link = document.createElement("A");
            link.href = uri + base64(workbookXML);
            link.download = wbname || 'OffenceDetails.xls';
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    })();
</script>
<style>
    .padding-bottom {
        padding-bottom: 7px;
    }

    table {
        display: block;
        overflow: auto;
        white-space: nowrap;
        /*max-height: 450px;*/
    }
</style>