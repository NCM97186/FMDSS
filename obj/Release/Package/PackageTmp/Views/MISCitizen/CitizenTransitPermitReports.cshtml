@model FMDSS.Models.MIS.CitizenTransitPermitModel
@{
    ViewBag.Title = "Report";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
}




@*<script>



        var RootUrl = '@Url.Content("~/")';

        $(document).ready(function () {


            if ($('option:selected', $('#Duration')).index() == 1) {
                $("#divdate").css("display", "block");
            }
            else {
                $("#divdate").css("display", "none");
            }



            // date validation ========================================================================
            var currentYear = (new Date).getFullYear();

            var Range = '2008:' + (currentYear + 1)

            $("#FromDate,#ToDate").datepicker({ maxDate: new Date(), yearRange: Range, dateFormat: 'dd/mm/yy', changeMonth: true, changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
            var currentDate = new Date();

            $("#FromDate").change(function () {
                $("#ToDate").val('');
            });

            $(document).on('keypress', '#FromDate,#ToDate', function (event) {

                event.preventDefault();
                return false;

            });

            $('#FromDate,#ToDate').keydown(function (event)
            { return cancelBackspace(event) });
            function cancelBackspace(event) {
                if (event.keyCode == 8 || event.keyCode == 46) {
                    return false;
                }
            }

            $("#ToDate").change(function () {
                var str1 = $("#FromDate").val();
                var str2 = $("#ToDate").val();

                var L = 3, d1 = $("#FromDate").val().split('/'), d2 = $("#ToDate").val().split('/');
                d1 = new Date(+d1[2], parseInt(d1[1], 10) - 1, parseInt(d1[0], 10));
                d2 = new Date(+d2[2], parseInt(d2[1], 10) - 1, parseInt(d2[0], 10));

                if (new Date(d1) <= new Date(d2)) {
                    // parseDate(str1, str2);
                }
                else {
                    $("#ToDate").val('');
                    alert('Date Must be GreaterThen From Date');
                }
            });

            // date validation ========================================================================


            $('#Duration').change(function (e) {

                if ($('option:selected', $('#Duration')).index() == 1) {
                    $("#divdate").css("display", "block");
                }
                else {
                    $("#divdate").css("display", "none");
                }

                $('#PermissionType_Text').val($("#PermissionType option:selected").text());
            });



            $('#Circle').change(function (e) {

                $('#Circle_Text').val($("#Circle option:selected").text());


                $("#Division").empty();
                $("#Range").empty();
                $("#Range").append('<option value="' + "0" + '">' + "--Select--" + '</option>');
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'MISCitizen/DivisionData', // we are calling json method
                    dataType: 'json',
                    data: { circleCode: $("#Circle").val() },
                    success: function (circle) {
                        $.each(circle, function (i, items) {
                            $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }

                });
                return false;
            });

            //$('#Division').change(function (e) {
            //    $("#Range").empty();
            //    $('#Division_Text').val($("#Division option:selected").text());

            //    $.ajax({
            //        type: 'POST',
            //        url: RootUrl + 'MISCitizen/RangeData', // we are calling json method
            //        dataType: 'json',
            //        data: { DivisionCode: $("#Division").val() },
            //        success: function (divCode) {
            //            $.each(divCode, function (i, items) {
            //                $("#Range").append('<option value="' + items.Value + '">' +
            //                 items.Text + '</option>');
            //            });
            //        },
            //        error: function (ex) {
            //            alert('Failed to retrieve states.' + ex);
            //        }

            //    });
            //    return false;
            //});

            $('#Range').change(function (e) {
                $('#Range_Text').val($("#Range option:selected").text());
            });



            $('#PermissionType').change(function (e) {
                $('#PermissionType_Text').val($("#PermissionType option:selected").text());
            });



            $(document).on('click', '.RejectedRecords', function (e) {

                var Categorys = $(this).parents('tr').find('input[name=Categorys]').val();
                var StatusNames = $(this).parents('tr').find('input[name=StatusNames]').val();
                var PlaceId = $(this).parents('tr').find('input[name=index]').val();

                ('#btn_' + PlaceId).src = "images/minus.png";
                $('#ID_' + PlaceId).toggle();

                $('#ID_' + PlaceId).html("");
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'MISCitizen/GetNOCsRejectApplicationData', // we are calling json method
                    dataType: 'json',
                    data: { category: Categorys, status: StatusNames, },
                    success: function (response) {
                        var str = '<thead><th>ApplicationNo</th><th>Remark</th></thead>';
                        $('#ID_' + PlaceId).append(str);
                        $.each(response, function (i, item) {
                            $('#ID_' + PlaceId).append('<tbody><tr> <td>  <a id="btnAddModel" data-target="#myModal" data-toggle="modal" href="javascript:void(0);" onclick=CallApplicationNo("' + response[i].ApplicationNo + '_' + StatusNames + '") >' + response[i].ApplicationNo + ' </a></td> <td> ' + response[i].Remark + ' </td> </tr>  </tbody>');
                        });
                    },
                    error: function (ex) {
                        alert(ex.error);
                    }
                });

            });


            $('#btn_submit1').click(function (e) {

                if ($('option:selected', $('#Duration')).index() == 0) {
                    $("#errDuration").css("display", "block");
                    $('#errDuration').focus();
                    return false;
                }
                else {
                    $("#errDuration").css("display", "none");
                    $("#errFromDate").css("display", "none");
                    $("#errToDate").css("display", "none");
                }

                if ($('option:selected', $('#Duration')).index() == 1) {

                    if ($('#FromDate').val() == '') {
                        $("#errFromDate").css("display", "block");
                        $('#errFromDate').focus();
                        return false;
                    }
                    else {
                        $("#errFromDate").css("display", "none");
                    }

                    if ($('#ToDate').val() == '') {
                        $("#errToDate").css("display", "block");
                        $('#errToDate').focus();
                        return false;
                    }
                    else {
                        $("#errToDate").css("display", "none");
                    }
                }




                var isSummary = $("#action").val().toLowerCase();
                if (isSummary == "details") {
                    if ($('option:selected', $('#Circle')).index() == 0) {
                        $("#errCircle").css("display", "block");
                        $('#errCircle').focus();
                        return false;
                    }
                    else {
                        $("#errCircle").css("display", "none");
                    }

                    if ($('option:selected', $('#Division')).index() == 0) {
                        $("#errDivision").css("display", "block");
                        $('#errDivision').focus();
                        return false;
                    }
                    else {
                        $("#errDivision").css("display", "none");
                    }

                    if ($('option:selected', $('#Range')).index() == 0) {
                        $("#errRange").css("display", "block");
                        $('#errRange').focus();
                        return false;
                    }
                    else {
                        $("#errRange").css("display", "none");
                    }

                    if ($('option:selected', $('#SubPermissionType')).index() == 0) {
                        $("#errPermissionTypeSubCategory").css("display", "block");
                        $('#errPermissionTypeSubCategory').focus();
                        return false;
                    }
                    else {
                        $("#errPermissionTypeSubCategory").css("display", "none");
                    }
                }
            });


            $("#action").change(function () {
                CheckActionType();
            });



        });

        $(document).ready(function () { CheckActionType(); });
        function CheckActionType()
        {
            var val = $("#action").val();
            $(".isdetailornot").attr("style", "display:block");
            if (val.toLowerCase() == "summary") {
                $(".isdetailornot").attr("style", "display:none");
            }
        }
        function CallApplicationNo(id) {


            $.ajax({
                type: 'GET',
                url: RootUrl + 'MISCitizen/GetNOCApplicationDetails', // we are calling json method
                dataType: 'html',
                data: { ids: id },
                success: function (data) {
                    $('#modelPlace').html(data);
                },
                error: function (ex) {
                    alert(ex.error);
                }
            });

        };



    </script>*@

<script type="text/javascript">
    //$.noConflict(true);
    var tablesToExcel = (function () {

        var uri = 'data:application/vnd.ms-excel;base64,'
        , tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
          + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'
          + '<Styles>'
          + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
          + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
          + '</Styles>'
          + '{worksheets}</Workbook>'
        , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
        , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
        , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
        , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (tables, wsnames, wbname, appname) {
            var ctx = "";
            var workbookXML = "";
            var worksheetsXML = "";
            var rowsXML = "";
            //var getFilterFromDate = document.getElementById('FromDate').value;
            //var getFilterToDate = document.getElementById('ToDate').value;
            wbname = wbname + '.xls';
            for (var i = 0; i < tables.length; i++) {
                if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);
                for (var j = 0; j < tables[i].rows.length; j++) {
                    rowsXML += '<Row>'
                    for (var k = 0; k < tables[i].rows[j].cells.length; k++) {
                        var dataType = tables[i].rows[j].cells[k].getAttribute("data-type");
                        var dataStyle = tables[i].rows[j].cells[k].getAttribute("data-style");
                        var dataValue = tables[i].rows[j].cells[k].getAttribute("data-value");
                        dataValue = (dataValue) ? dataValue : tables[i].rows[j].cells[k].innerHTML.trim();
                        if (dataValue.indexOf('button') == -1) {
                            var dataFormula = tables[i].rows[j].cells[k].getAttribute("data-formula");
                            dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                            ctx = {
                                attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date') ? ' ss:StyleID="' + dataStyle + '"' : ''
                                   , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                                   , data: (dataFormula) ? '' : dataValue
                                   , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : ''
                            };
                            rowsXML += format(tmplCellXML.trim(), ctx);
                        }
                    }
                    rowsXML += '</Row>'

                }
                ctx = { rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i };
                worksheetsXML += format(tmplWorksheetXML, ctx);
                rowsXML = "";
            }

            ctx = { created: (new Date()).getTime(), worksheets: worksheetsXML };
            workbookXML = format(tmplWorkbookXML, ctx);

            console.log(workbookXML);

            var link = document.createElement("A");
            link.href = uri + base64(workbookXML);
            link.download = wbname || 'CitizenTransitPermitReport.xls';
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    })();
</script>

<div class="row">
    <div class="col-lg-9 pad">
        <h1 class="page-header"><span> Citizen Transit Permit Reports</span></h1>
    </div>

    @using (Html.BeginForm("CitizenTransitPermitReports", "MISCitizen", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-body">



                    <div class="col-lg-6 isdetailornot">
                        <div class="form-group">
                            <label>Division:<span class="mandatory"></span></label>
                            @Html.DropDownListFor(model => model.Division, (IEnumerable<SelectListItem>)ViewBag.Division, "--ALL--", new { @class = "form-control", id = "Division" })
                            <div id="errDivision" style="display:none" class="alert-danger1">Division is Required.</div>
                            @Html.Hidden("Division_Text", new { @class = "form-control", id = "Division_Text" })
                        </div>
                    </div>


                    <div id="btn" class="col-lg-12">
                        <button type="submit" class="btn btn-success" name="Command" value="Save" id="btn_submit1">
                            <i class="fa fa-check"></i> Submit
                        </button>
                        <button type="button" class="btn btn-warning" id="btn_reset">
                            <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                        </button>

                        <button class="btn btn-info pull-right" onclick="tablesToExcel(['CitizenListTotal', 'CitizenListPending', 'CitizenListApproved', 'CitizenListReject', 'CitizenListReviwed'], ['CitizenListTotal', 'CitizenListPending', 'CitizenListApproved', 'CitizenListReject', 'CitizenListReviwed'], 'CitizenTransitPermitReport', 'Excel')">Export to Excel</button>
                    </div>
                </div>
            </div>



            <div class="panel panel-default">
                <div class="panel with-nav-tabs panel-default">
                    <div class="panel-heading">
                        <ul class="nav nav-tabs" id="myTab">
                            <li class="active"><a href="#tab1default" data-toggle="tab"><i class="fa fa-star fa-fw"></i>Total</a></li>
                            <li class=""><a href="#tab2default" data-toggle="tab"><i class="fa fa-user fa-fw"></i>Pending</a></li>
                            <li class=""><a href="#tab3default " data-toggle="tab"><i class="fa fa-comment fa-fw"></i>Approved</a></li>
                            <li class=""><a href="#tab4default" data-toggle="tab"><i class="fa fa-user fa-fw"></i>Rejected</a></li>
                            <li class=""><a href="#tab5default " data-toggle="tab"><i class="fa fa-comment fa-fw"></i>Reviewed</a></li>
                        </ul>
                    </div>
                    <div class="panel-body">
                        <div class="tab-content">

                            <div class="tab-pane fade  in tbl-scroll active" id="tab1default">
                                <div class="panel-body">

                                    <div class="table-responsive request-id">
                                        <table class="table table-striped table-bordered table-hover table-responsive" id="CitizenListTotal">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>
                                                        Div Name
                                                    </th>
                                                    <th>
                                                        Status
                                                    </th>
                                                    <th>
                                                        Count
                                                    </th>
                                                    <th>
                                                        Fees
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CitizenListTotal.Select((value, index) => new { Value = value, Index = index + 1 }))
                                                {
                                                    <tr>
                                                        <td>
                                                            <span>@item.Index</span>

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.DIV_NAME)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Status)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Counts)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Fees)
                                                        </td>


                                                    </tr>
                                                }


                                            </tbody>

                                        </table>

                                    </div>
                                    <!-- /.table-responsive -->
                                </div>
                            </div>

                            <div class="tab-pane fade  in tbl-scroll" id="tab2default">
                                <div class="panel-body">

                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover table-responsive" id="CitizenListPending">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>
                                                        Div Name
                                                    </th>
                                                    <th>
                                                        Status
                                                    </th>
                                                    <th>
                                                        Count
                                                    </th>
                                                    <th>
                                                        Fees
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CitizenListPending.Select((value, index) => new { Value = value, Index = index + 1 }))
                                                {
                                                    <tr>
                                                        <td>
                                                            <span>@item.Index</span>

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.DIV_NAME)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Status)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Counts)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Fees)
                                                        </td>


                                                    </tr>
                                                }


                                            </tbody>

                                        </table>


                                    </div>
                                    <!-- /.table-responsive -->
                                </div>

                            </div>


                            <div class="tab-pane fade in tbl-scroll" id="tab3default">

                                <div class="panel-body">

                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover table-responsive" id="CitizenListApproved">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>
                                                        Div Name
                                                    </th>
                                                    <th>
                                                        Status
                                                    </th>
                                                    <th>
                                                        Count
                                                    </th>
                                                    <th>
                                                        Fees
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CitizenListApproved.Select((value, index) => new { Value = value, Index = index + 1 }))
                                                {
                                                    <tr>
                                                        <td>
                                                            <span>@item.Index</span>

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.DIV_NAME)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Status)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Counts)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Fees)
                                                        </td>


                                                    </tr>
                                                }


                                            </tbody>

                                        </table>

                                    </div>
                                    <!-- /.table-responsive -->
                                </div>
                            </div>
                            <!-- /.Tab3 -->

                            <div class="tab-pane fade in tbl-scroll" id="tab4default">

                                <div class="panel-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover table-responsive" id="CitizenListReject">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>
                                                        Div Name
                                                    </th>
                                                    <th>
                                                        Status
                                                    </th>
                                                    <th>
                                                        Count
                                                    </th>
                                                    <th>
                                                        Fees
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CitizenListReject.Select((value, index) => new { Value = value, Index = index + 1 }))
                                                {
                                                    <tr>
                                                        <td>
                                                            <span>@item.Index</span>

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.DIV_NAME)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Status)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Counts)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Fees)
                                                        </td>


                                                    </tr>
                                                }


                                            </tbody>
                                        </table>

                                    </div>
                                    <!-- /.table-responsive -->
                                </div>
                            </div>

                            <div class="tab-pane fade in tbl-scroll" id="tab5default">

                                <div class="panel-body">

                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered table-hover table-responsive" id="CitizenListReviwed">
                                            <thead>
                                                <tr>
                                                    <th>
                                                        #
                                                    </th>
                                                    <th>
                                                        Div Name
                                                    </th>
                                                    <th>
                                                        Status
                                                    </th>
                                                    <th>
                                                        Count
                                                    </th>
                                                    <th>
                                                        Fees
                                                    </th>


                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.CitizenListReviwed.Select((value, index) => new { Value = value, Index = index + 1 }))
                                                {
                                                    <tr>
                                                        <td>
                                                            <span>@item.Index</span>

                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.DIV_NAME)
                                                        </td>

                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Status)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Counts)
                                                        </td>
                                                        <td>
                                                            @Html.DisplayFor(modelItem => item.Value.Fees)
                                                        </td>


                                                    </tr>
                                                }


                                            </tbody>

                                        </table>

                                    </div>
                                    <!-- /.table-responsive -->
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>



        </div>
    }

</div>

<script type="text/javascript">
    $.noConflict(true);
</script>

<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>

<script type="text/javascript">
    var tableToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
          , template = '<html xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:x="urn:schemas-microsoft-com:office:excel" xmlns="http://www.w3.org/TR/REC-html40"><head><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table>{table}</table></body></html>'
          , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
          , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (table, name) {
            if (!table.nodeType) table = document.getElementById(table)
            var ctx = { worksheet: name || 'Worksheet', table: table.innerHTML }
            window.location.href = uri + base64(format(template, ctx))
        }
    })()
</script>
