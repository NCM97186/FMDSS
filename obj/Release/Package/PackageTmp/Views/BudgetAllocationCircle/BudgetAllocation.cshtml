@model FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.BudgetAllocationModel
@{
    ViewBag.Title = "BudgetAllocation";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script>
    var RootURl = '@Url.Content("~/")';
</script>
<style>
    .hide {
        display: none;
    }

    .center {
        margin-top: 50%;
    }
    #tab1default, #tab2default, #tab3default {
    min-height: 700px;
}
</style>
<script type="text/javascript">
    var $ = jQuery.noConflict();



    $(function () {

        $(document).ready(function () {

            $("#AllocatedAmount").val("0.00");
        });

        $("#AllocatedAmount").change(function () {
            if (parseFloat($("#AllocatedAmount").val()).toFixed(2) == "0.00") {
                $("#AllocatedAmount").val("0.00");
            }
        });

        $("#modal-window").on("click", "#btn-close", function () {
            $("#modal-window").modal("hide");
        });

        $('.gridtable').DataTable({
            responsive: true,
            "bSort": true
        });

        $("#Savepermission").click(function () {

            if ($("#BudgetList > tbody >tr").length < 1) {
                alert('Please add atleast one record');
                return false;
            }
        });
        $('#btnDetails').click(function () {

            if ($('#AllocatedAmount').val() == '' || parseFloat($('#AllocatedAmount').val()) == 0) {

                $('#AllocatedAmount').focus();
                return false;
            }
            if (parseFloat($('#AllocatedAmount').val()) > parseFloat($('#RemaningAmount').val())) {
                alert('Allocated amount cannot be exceed than remaning amount!!!');
                $('#AllocatedAmount').focus();
                return false;
            }
            else {
                if (parseFloat($("#AllocatedAmount").val()) <= parseFloat($("#RemaningAmount").val())) {
                    //$("#RemaningAmount").val(parseFloat($("#RemaningAmount").val()) - parseFloat($("#AllocatedAmount").val()));
                }
                else {
                    alert('Allocated amount cannot be exceed than remaning amount!!!');
                    $('#AllocatedAmount').focus();
                    return false;
                }
                var Division = '0';
                if ($("#divisions").attr("style") == 'display:block' && $(".ISCircleDivision:checked").val() == "Division") {
                    if ($('#Division').val() != '' && $('#Division').val() != '0' && $('#Division').val() != 'undefined') {
                        Division = $('#Division').val();
                        Circles = $("#CIRCLE_CODE").val();
                    }
                    else {
                        $('#Division').focus();
                        return false;
                    }
                }
                if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                    Circles = $("#CIRCLE_CODE").val();
                }
                if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                    Circles = $("#CircleHQ").val();
                }



                var values = {
                    SchemeID: $('#BudgetAllocationModels_SchemeID').val(),
                    SchemeName: $('#SchemeID').val(),
                    ActivityID: $('#BudgetAllocationModels_ActivityID').val(),
                    ActivityName: $("#ActivityID").val(),
                    SubActivityID: $('#BudgetAllocationModels_SubActivityID').val(),
                    SubActivityName: $("#SubActivityID").val(),
                    AllocatedAmount: $('#AllocatedAmount').val(),
                    TotalAllocatedAmount: $('#TotalAllocatedAmount').val(),
                    FY_ID: $('#BudgetAllocationModels_FY_ID').val(),
                    BudgetHeadID: $('#BudgetAllocationModels_BudgetHeadID').val(),
                    BudgetHead: $('#BudgetHeadID').val(),
                    SubBudgetHeadID: $('#BudgetAllocationModels_SubBudgetHeadID').val(),
                    SubBudgetHead: $('#SubBudgetHeadID').val(),
                    CIRCLE_CODE: Circles,
                    ISCircleDivision: $('.ISCircleDivision:checked').val(),
                    Division: Division,
                    BudgetHeadAllocationID: $('#BudgetHeadAllocationID').val(),
                    IsRecurring: $('#BudgetAllocationModels_IsRecurring:checked').val(),
                    SiteName: $('#SiteName').val()
                };
                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetAllocationCircle/AddBudgetAllocation',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    success: function (data) {

                        if (data.rowid != "D") {
                            var id = "'" + data.rowid + "'";
                            var BudgetHead = values.BudgetHead;
                            var SubBudgetHead = "None";
                            if ($("#SubBudgetHeadID option:selected").val() != "0") {
                                SubBudgetHead = values.SubActivityName;
                            }
                            var Circle = "None";
                            var Division = "None";
                            if ($(".ISCircleDivision:checked").val() == "Division" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Division = $("#Division option:selected").text();
                            }
                            else if ($(".ISCircleDivision:checked").val() == "Circle" && $("#CIRCLE_CODE option:selected").val() != "") {
                                Circle = $("#CIRCLE_CODE option:selected").text();
                            }
                            else if ($(".ISCircleDivision:checked").val() == "HQ" && $("#CircleHQ option:selected").val() != "") {
                                Circle = $("#CircleHQ option:selected").text();
                            }
                            var AllocatedAmount = $("#AllocatedAmount").val();

                            var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td style=display:none;>" + data.ISCircleDivision + "</td><td>" + 'BUDGETALLOCATION-' + data.BudgetHeadAllocationID + "</td><td>" + Circle + " / " + Division + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName + "/" + data.SubActivityName + "</td><td>" + BudgetHead + " / " + SubBudgetHead + "</td><td>" + parseFloat(AllocatedAmount).toFixed(2) + "</td><td>" + "<button type=button class='btn btn-danger btn-circle btndelete' style=cursor:pointer><i class='fa fa-times'></i></button>" + "</td></tr>";

                            $("#tblDetails").append(rowdata);
                            $('#tblDetailsAdd').append(rowdata);
                            var remaningAmount = (parseFloat($('#RemaningAmount').val()) - parseFloat($('#AllocatedAmount').val()))
                            $('#RemaningAmount').val(parseFloat(remaningAmount).toFixed(2));
                            $("#AllocatedAmount").val("0.00");

                        }
                        else {

                            alert("Records already added!!");
                        }
                    }
                });
            }
        });
        $(".ISCircleDivision").change(function () {
            $("#CIRCLE_CODE").val('');
            if ($(".ISCircleDivision:checked").val() == "HQ") {

                $("#divisions").attr("style", "display:none");
                $("#CIRCLE_CODE").addClass('hide');
                $("#CircleHQ").removeClass('hide');

            }
            else if ($(".ISCircleDivision:checked").val() == "Division") {
                $("#divisions").attr("style", "display:block");
                $("#CircleHQ").addClass('hide');
                $("#CIRCLE_CODE").removeClass('hide');
            }
            else {
                $("#divisions").attr("style", "display:none");
                $("#CircleHQ").addClass('hide');
                $("#CIRCLE_CODE").removeClass('hide');
            }

        });
        $(document).on('click', '.btndelete', function () {

            if (confirm("Are you sure you want to delete this?")) {

                var $item = $(this).closest("tr").find('td');
                var i = 0;
                var ID;
                var ISCircleDivision;
                $.each($item, function (key, value) {
                    if (i == 0) {
                        ID = $(value).text();
                    }
                    if (i == 1) {
                        ISCircleDivision = $(value).text();
                        $(this).closest('tr').remove();
                    }
                    i++;
                });

                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetAllocationCircle/DeleteBudgetAllocation',
                    dataType: 'json',
                    data: { Id: ID, ISCircleDivision: ISCircleDivision },
                    success: function (data) {

                        if (data == '1') {
                            AvaliableAmount();
                            alert('Data deleted successfully');


                        }
                        else {
                            alert('Data not deleted from table please check!!!!');
                        }
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });

            }
            else {

                return false;
            }


        });




        $('#CIRCLE_CODE').change(function (e) {
            if ($(".ISCircleDivision:checked").val() == "Division") {
                $("#Division").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Content("~/")' + 'MISCitizen/DivisionData', // we are calling json method
                    dataType: 'json',
                    data: { circleCode: $("#CIRCLE_CODE").val() },
                    success: function (circle) {
                        $.each(circle, function (i, items) {
                            $("#Division").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }

                });
                return false;
            }
        });
    });
    function reload() {
        location.reload(true);
    }
    function DeleteBudgetAllocation(ID) {
        if (confirm("Are you sure you want to delete this?")) {

            if (ID != null && ID > 0) {
                $.ajax({
                    type: 'POST',
                    url: RootURl + 'BudgetAllocationCircle/DeleteBudgetAllocatedEntry',
                    dataType: 'json',
                    data: { Id: ID },
                    success: function (data) {
                        if (data == '1') {
                            alert('Data deleted successfully');
                            reload();
                        }
                        else {
                            alert('Data not deleted from table please check!!!!');
                        }
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }
        }
        else {

            return false;
        }
    }

    function AvaliableAmount() {
        var values = {
            FY_ID: $('#BudgetAllocationModels_FY_ID').val(),
            BudgetHeadID: $('#BudgetAllocationModels_BudgetHeadID').val(),
            SubBudgetHeadID: $('#BudgetAllocationModels_SubBudgetHeadID').val(),

            SchemeID: $('#BudgetAllocationModels_SchemeID').val(),
            ActivityID: $('#BudgetAllocationModels_ActivityID').val(),
            SubActivityID: $('#BudgetAllocationModels_SubActivityID').val()

        }
        $.ajax({
            type: 'POST',
            url: RootURl + 'BudgetAllocationCircle/GetAllocatedAmtDetails',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            success: function (data) {
                console.log(data);
                $('#AvailableAmount').val(parseFloat(data.AvaliableAmount).toFixed(2));
                $('#RemaningAmount').val(parseFloat(data.RemaningAmount).toFixed(2));
                $('#BudgetHeadAllocationID').val(data.BudgetAllocationHeadId);
                if(parseFloat($("#RemaningAmount").val())==0)
                {
                    $("#Savepermission").addClass('hide');
                    $("#errorRemaining").text("All Remaining Amount has been Allocated");
                }
                else
                {
                    $("#errorRemaining").text("");
                    $("#Savepermission").removeClass('hide');
                }
            },

        });

    }
    function GetBudgetAllocatedID(ID) {
        //$("#BudgetAllocationModels_FY_ID").val(FY_ID);
        //$("#BudgetAllocationModels_SchemeID").val(SchemeID);
        //$("#BudgetAllocationModels_BudgetHeadID").val(BudgetHeadID);
        //$("#BudgetAllocationModels_SubBudgetHeadID").val(SubBudgetHeadID);
        //$("#BudgetAllocationModels_ActivityID").val(ActivityID);
        //$("#BudgetAllocationModels_SubActivityID").val(SubActivityID);
        //$("#AvailableAmount").val(AllocatedAmount);
        //$("#FY_ID").val(FinancialYear);
        //$("#SchemeID").val(SchemeName.replace(/~/g, " "));
        //$("#BudgetHeadID").val(BudgetHeadName.replace(/~/g, " "));
        //$("#SubBudgetHeadID").val(SubBudgetHeadName.replace(/~/g, " "));
        //$("#ActivityID").val(ActivityName.replace(/~/g, " "));
        //$("#SubActivityID").val(SubActivityName.replace(/~/g, " "));
        //AvaliableAmount();
        //$("#modal-window").modal("show");
        if (ID > 0) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("BudgetAllocationDetails", "BudgetAllocationCircle")',
                contentType: 'application/json; charset=utf-8',
                data: { ID: ID },
                success: function (result) {
                    $("#BudgetAllocationModels_FY_ID").val(result.FY_ID);
                    $("#BudgetAllocationModels_SchemeID").val(result.SchemeID);
                    $("#BudgetAllocationModels_BudgetHeadID").val(result.BudgetHeadID);
                    $("#BudgetAllocationModels_SubBudgetHeadID").val(result.SubBudgetHeadID);
                    $("#BudgetAllocationModels_ActivityID").val(result.ActivityID);
                    $("#BudgetAllocationModels_SubActivityID").val(result.SubActivityID);
                    $("#AvailableAmount").val(result.AllocatedAmount);
                    $("#FY_ID").val(result.FinancialYear);
                    $("#SchemeID").val(result.SchemeName);
                    $("#BudgetHeadID").val(result.BudgetHead);
                    $("#SubBudgetHeadID").val(result.SubBudgetHead);
                    $("#ActivityID").val(result.ActivityName);
                    $("#SubActivityID").val(result.SubActivityName);
                    AvaliableAmount();
                    $("#modal-window").modal("show");

                },

            });

        }
    }

</script>

@using (Html.BeginForm("BudgetAllocation", "BudgetAllocationCircle", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
{

    <div id="modal-window" style="display:none;" title="Transation" class="modal fade">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Budget Allocation</h4>
                </div>
                <div class="modal-body">

                    <div class="panel-body">
                        @Html.HiddenFor(x => x.BudgetAllocationModels.BudgetHeadAllocationID, new { @id = "BudgetHeadAllocationID", name = "BudgetHeadAllocationID" })
                        @Html.HiddenFor(x => x.BudgetAllocationModels.FY_ID)
                        @Html.HiddenFor(x => x.BudgetAllocationModels.SchemeID)
                        @Html.HiddenFor(x => x.BudgetAllocationModels.BudgetHeadID)
                        @Html.HiddenFor(x => x.BudgetAllocationModels.SubBudgetHeadID)
                        @Html.HiddenFor(x => x.BudgetAllocationModels.ActivityID)
                        @Html.HiddenFor(x => x.BudgetAllocationModels.SubActivityID)
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Financial Year: <span class="mandatory">*</span></label>
                                @Html.TextBox("FY_ID", null, new { @class = "form-control", @id = "FY_ID", name = "FY_ID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Scheme: <span class="mandatory">*</span></label>
                                @Html.TextBox("SchemeID", null, new { @class = "form-control", @id = "SchemeID", name = "SchemeID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Budget Head: <span class="mandatory">*</span></label>
                                @Html.TextBox("BudgetHeadID", null, new { @class = "form-control", @id = "BudgetHeadID", name = "BudgetHeadID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Budget Sub Head: <span class="mandatory"></span></label>
                                @Html.TextBox("SubBudgetHeadID", null, new { @class = "form-control", @id = "SubBudgetHeadID", name = "SubBudgetHeadID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Activity : <span class="mandatory">*</span></label>
                                @Html.TextBox("ActivityID", null, new { @class = "form-control", @id = "ActivityID", name = "ActivityID", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Sub Activity: <span class="mandatory">*</span></label>
                                @Html.TextBox("SubActivityID", null, new { @class = "form-control", @id = "SubActivityID", name = "SubActivityID", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label>Site Name: <span class="mandatory"></span></label>
                                    @Html.TextBoxFor(x => x.BudgetAllocationModels.SiteName, new { @class = "form-control", @id = "SiteName", name = "SiteName" })
                                </div>
                            </div>
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <label><span class="mandatory"></span></label><br />
                                    @Html.RadioButtonFor(s => s.BudgetAllocationModels.IsRecurring, "0", new { @class = "IsRecurring", @checked = "checked" }) Recurring
                                    @Html.RadioButtonFor(s => s.BudgetAllocationModels.IsRecurring, "1", new { @class = "IsRecurring" }) Non–Recurring

                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Select Any option <span class="mandatory"></span></label><br />
                                @Html.RadioButtonFor(s => s.BudgetAllocationModels.ISCircleDivision, "Circle", new { @class = "ISCircleDivision", @checked = "checked" }) Circle
                                @Html.RadioButtonFor(s => s.BudgetAllocationModels.ISCircleDivision, "Division", new { @class = "ISCircleDivision" }) Division
                                @Html.RadioButtonFor(s => s.BudgetAllocationModels.ISCircleDivision, "HQ", new { @class = "ISCircleDivision" }) HQ
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Office: <span class="mandatory">*</span></label>
                                @Html.DropDownListFor(x => x.BudgetAllocationModels.CIRCLE_CODE, (IEnumerable<SelectListItem>
                                )ViewBag.Circle, "--Select--", new { @class = "form-control", @id = "CIRCLE_CODE", name = "CIRCLE_NAME" })

                                @Html.DropDownListFor(model => model.BudgetAllocationModels.CIRCLE_CODE, new List<SelectListItem>
                                    {
                                    new SelectListItem{Text="HQ",Value="HQ"}}, new { @class = "form-control hide", @id = "CircleHQ" })
                            </div>
                        </div>

                        <div class="col-lg-6" id="divisions" style="display:none">
                            <div class="form-group">
                                <label>Division: <span class="mandatory">*</span></label>
                                @Html.DropDownListFor(x => x.BudgetAllocationModels.Division, (IEnumerable<SelectListItem>
                                )ViewBag.Division, "--Select--", new { @class = "form-control ", @id = "Division", name = "DIV_CODE" })
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Available Amount: (lakh)<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetAllocationModels.TotalAmount, new { @class = "form-control", @id = "AvailableAmount", name = "AvailableAmount", @readonly = "@readonly" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetAllocationModels.TotalAmount)</div>

                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Remaning Amount: (lakh)<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetAllocationModels.RemaningAmount, new { @class = "form-control", @id = "RemaningAmount", name = "RemaningAmount", @readonly = "@readonly" })
                                <div id="errorRemaining" class="alert-danger1"></div>
                            </div>
                        </div>

                        <div class="col-lg-4">
                            <div class="form-group">
                                <label>Allocated Amount: (lakh)<span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetAllocationModels.AllocatedAmount, new { @class = "form-control", @id = "AllocatedAmount", name = "AllocatedAmount" })
                            </div>
                        </div>
                        <label>Get Details:</label><br>
                        <button type="button" class="btn btn-success" title="Save" name="Command" value="Submit" id="btnDetails" style="width:auto">
                            <i class="fa fa-plus"></i> Add
                        </button>
                        <div class="dataTable_wrapper table-responsive scroll-x simplebar horizontal">
                            <table class="table table-striped table-bordered table-hover" id="BudgetList">
                                <thead>
                                    <tr>
                                        <th>
                                            Budget Master Grouping ID
                                        </th>
                                        <th>
                                            Circle/Division
                                        </th>
                                        <th>
                                            Scheme
                                        </th>
                                        <th>
                                            Activity/Sub Activity
                                        </th>
                                        <th>
                                            Budget/Sub Budget Head
                                        </th>
                                        <th>
                                            Allocated Amount (lakh)
                                        </th>
                                        <th>
                                            Action
                                        </th>
                                    </tr>
                                </thead>
                                <tbody id="tblDetails"></tbody>
                            </table>

                        </div>
                        <div id="BudgetCir"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success" id="Savepermission">Submit</button>
                    <button type="button" id="btn-close" class="btn btn-danger">Close</button>
                </div>
            </div><!-- /.modal-content -->

        </div><!-- /.modal-dialog -->
    </div>
}


<div class="panel-heading"> <span>@Html.Raw(TempData["Message"]) </span> </div>
@Html.Partial("_PartialBudgetLink")
<div class="col-lg-9 pad">
    <div class="col-lg-10">
        <h1 class="page-header">Budget Allocation (@Session["User"].ToString())</h1>
    </div>
    <div class="col-lg-2">
        <button type="button" class="btn btn-success confirm-toggle" name="Command" value="0" id="AddMaster">
            <i class="fa fa-check"></i> Show Master
        </button>
    </div>
</div>

<div class="row">
   
    <div class="col-md-9">


        <div class="panel with-nav-tabs panel-default">

            <div class="panel-heading">
                <ul class="nav nav-tabs" id="myTab">
                    <li class="active"><a href="#tab2default" data-toggle="tab"><i class="fa fa-user fa-fw"></i>Budget Head Master List</a></li>
                    <li class=""><a href="#tab3default " data-toggle="tab"><i class="fa fa-comment fa-fw"></i>Budget Allocated List</a></li>
                </ul>

            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <div class="tab-pane fade  in tbl-scroll active" id="tab2default">
                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover gridtable" id="dataTables-example">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Financial Year
                                                </th>
                                                <th>
                                                    Scheme
                                                </th>
                                                <th>
                                                    Budget/Sub Budget Head
                                                </th>
                                                <th>
                                                    Activity/SubActivity
                                                </th>
                                                <th>
                                                    Allocated Amount
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var item in Model.BudgetHeadMasterList)
                                            {

                                                <tr>
                                                    <td>

                                                        @Html.DisplayFor(model => item.FinancialYear)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.SchemeName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.BudgetHead) \ @Html.DisplayFor(model => item.SubBudgetHead)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ActivityName)\ @Html.DisplayFor(model => item.SubActivityName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.AllocatedAmount)
                                                    </td>
                                                    <td>
                                                        @*<input type="button" id="GetBudgetAllocated" value="Budget Allocation" class="btn btn-info"
                                                               onclick=GetBudgetAllocatedID('@item.FinancialYear','@item.FY_ID','@item.SchemeID','@item.BudgetHeadID','@item.SubBudgetHeadID','@item.ActivityID','@item.SubActivityID','@item.AllocatedAmount','@item.SchemeName','@item.BudgetHead','@item.SubBudgetHead','@item.ActivityName','@item.SubActivityName')>*@

                                                        <input type="button" id="GetBudgetAllocated" value="Budget Allocation" class="btn btn-info"
                                                               onclick=GetBudgetAllocatedID('@item.ID')>
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>


                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>

                    </div>


                    <div class="tab-pane fade in tbl-scroll " id="tab3default">

                        <div class="panel-body">
                            <div class="col-lg-8">
                                <div class="form-group">
                                </div>
                            </div>

                            <div class="col-lg-12">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover gridtable" id="dataTables-example">
                                        <thead>
                                            <tr>
                                                <th>
                                                    Budget Master Grouping ID
                                                </th>
                                                <th>
                                                    Scheme
                                                </th>
                                                <th>
                                                    Budget/Sub Budget Head
                                                </th>
                                                <th>
                                                    Activity/Sub Activity
                                                </th>

                                                <th>
                                                    Circle/Division
                                                </th>
                                                <th>
                                                    Total Amount (lakh)
                                                </th>
                                                <th>
                                                    Allocated Amount (lakh)
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                            </tr>
                                        </thead>
                                        <tbody>

                                            @foreach (var item in Model.BudgetAllocationList)
                                            {

                                                <tr>
                                                    <td>
                                                        BUDGETALLOCATION-@item.BudgetHeadAllocationID (@item.FinancialYear)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.SchemeName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.BudgetHead)\ @Html.DisplayFor(model => item.SubBudgetHead)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.ActivityName)\ @Html.DisplayFor(model => item.SubActivityName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.CIRCLE_NAME) \ @Html.DisplayFor(model => item.Division)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.TotalAmount)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(model => item.AllocatedAmount)
                                                    </td>
                                                    <td>
                                                        <button type=button class='btn btn-danger btn-circle' onclick="DeleteBudgetAllocation('@item.ID')" style=cursor:pointer><i class='fa fa-times'></i></button>
                                                    </td>
                                                </tr>
                                            }

                                        </tbody>
                                    </table>



                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>
                    </div>


                    <!-- /.Tab3 -->
                </div>
            </div>
        </div>
    </div>
    <!-- /.Tab1 -->




</div>



<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

