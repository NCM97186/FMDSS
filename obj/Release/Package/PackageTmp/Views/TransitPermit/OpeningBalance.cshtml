@model FMDSS.Models.ForestDevelopment.OpeningBalance
<div id="page-wrapper-inn">
    <div class="col-lg-12 pad">
        <h1 class="page-header">Opening Balance</h1>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                @using (Html.BeginForm("OpeningBalance", "TransitPermit", FormMethod.Post, new { data_behavior = "confirm" }))
                {
                    @Html.Partial("_ErrorMsg")
                    <div class="panel-body">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="GramPanchayat">
                                    Range name:<span class="mandatory">*</span>
                                </label>
                                @Html.DropDownList("RangeCode", (IEnumerable<SelectListItem>)ViewBag.FromRangeCode, "---Select---", new { @class = "form-control common", title = "Select Range Name", id = "ddlRangeCode" })
                                <div class="alert-danger1">@Html.ValidationMessageFor(x => x.RangeCode)</div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label for="Village">
                                    To Depot:<span class="mandatory">*</span>
                                </label>
                                @Html.DropDownList("DepotID", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control common", title = "Select Depot Name", id = "ddlToDepot" })
                                <div class="alert-danger1">@Html.ValidationMessageFor(x => x.DepotID)</div>

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <label>Product Details:</label>
                            <div class="form-group">
                                <table id="tblTPProductDetails" class="table table-striped table-bordered table-hover notranslate">
                                    <thead>
                                        <tr style="color:#999; background-color:#ddd;">
                                            <td colspan="7"><i>Product Details</i></td>
                                        </tr>
                                        <tr>
                                            <th style="width:14%">Product Type<span class="mandatory">*</span></th>
                                            <th style="width:14%">Product</th>
                                            <th style="width:14%">Unit</th>
                                            <th style="width:14%">Is Existing Lot</th>
                                            <th style="width:14%">Lot Number</th>
                                            <th style="width:14%">Lot Size</th>
                                            <th style="width:14%">No of Lot</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbTPProductDetails">
                                        @if (Model.DODProductList == null)
                {
                                            <tr class="rowSkip">
                                                <td colspan="7">No record found.</td>
                                            </tr>
                                        }
                                        @*@if (Model.DODProductList != null)
                                            {
                                                for (int i = 0; i < Model.DODProductList.Count; i++)
                                                {
                                                    <tr>
                                                        <td>
                                                            @Html.HiddenFor(x => Model.DODProductList[i].ID)
                                                            @Html.DropDownListFor(m=>m.DODProductList[i].ProductTypeID, new SelectList(ViewBag.ProduceType_List, "Value", "Text"), "--Select--", new { @class = "form-control common", title = "Select product type to be transferred eg: Bamboo", id = "ddlProduceType_"+i })
                                                        </td>
                                                        <td>@Html.DropDownListFor(m => m.DODProductList[i].ProductID, new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control", id = "ddlProduct_"+i })</td>
                                                        <td>@Html.TextBoxFor(s => Model.DODProductList[i].Qty, new { id = "txtQty_" + i, size = "15", onkeypress = "AllowNumberOnly(event)" })</td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr class="rowSkip">
                                                    <td colspan="4">No record found.</td>
                                                </tr>
                                            }*@
                                    </tbody>
                                    <tfoot>
                                        <tr>
                                            <td colspan="7"><div><a onclick='AddNewRowOB(0)' href="javascript:void(0)">Add New Row</a></div></td>
                                        </tr>
                                    </tfoot>
                                </table>

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label> Comment<span id="unitspan"></span>:<span class="mandatory">*</span></label>
                                @Html.TextAreaFor(x => x.Comment, new { @class = "form-control Numeric", title = "Enter QTY", @placeholder = "Enter Comment", @maxlength = 500 })
                                <div class="alert-danger1">@Html.ValidationMessageFor(x => x.Comment)</div>
                            </div>
                        </div>
                        <div class="col-lg-12"></div>
                        <div class="btn-padd">
                            <div class="col-lg-12" id="btn">
                                <button id="btn_submit1" value="Submit" name="Command" class="btn btn-success" type="submit">
                                    <i class="fa fa-check"></i> Submit
                                </button>
                                <button class="btn btn-danger" value="Cancel" name="Command" type="button" onclick="location.href='@Url.Action("index", "TransitPermit")'">
                                    <i class="fa fa-times fa-fw"></i> Cancel
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    @Html.Hidden("hdnRootURL", Url.Content("~/"))
</div>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>
<script src="~/Scripts/Controller/Common.js" type="text/javascript"></script>
<script type="text/javascript">
    var RootUrl = $("#hdnRootURL").val();

    $(document).on('change', '#ddlRangeCode', function (e) {
        $("#ddlToDepot").empty().append('<option value="">--Select--</option>');
        $.ajax({
            type: 'POST',
            url: RootUrl + 'TransitPermit/getDepotData', // we are calling json method
            dataType: 'json',
            data: { rangeCode: $("#ddlRangeCode").val() },
            success: function (response) {

                $.each(response, function (i, items) {
                    $("#ddlToDepot").append('<option value="' + items.Value + '">' +
                        items.Text + '</option>');
                });
            },
            error: function (ex) {
            }

        });
    });

    function AddNewRowOB(objectID) {
        var isValid = true;
        var rootURl = $('#hdnRootURL').val();
        $('#tblTPProductDetails').find('input[id^="txtQty_"]').each(function () {
            if ($(this).val() == '') {
                alert('Please enter current row details first.');
                isValid = false;
                return false;
            }
        })

        if (isValid) {
            var cIndx = $('#tbTPProductDetails').find('tr:not(.rowSkip)').length;
            $.ajax({
                type: 'GET',
                data: { "currentRowIndex": cIndx, "objectID": objectID },
                url: rootURl + "TransitPermit/AddNewRowForTPProduct",
                dataType: 'html',
                success: function (data) {
                    $('#tbTPProductDetails').find('.rowSkip').remove();
                    $('#tbTPProductDetails').append(data);
                },
                error: function (ex) {
                    console.log(ex.error);
                }
            });
        }
    }

    function OnChange_ProductType(cntrl) {
        var cntrlID = $(cntrl).closest('tr').find("select[id^='ddlProductName_']").attr("id");
        $("#" + cntrlID).empty().append('<option value="">' + "--Select--" + '</option>');
        var ddlProduceType = $(cntrl).val();
        $(cntrl).closest('tr').find("input.product,select.product").val("");
        $(cntrl).closest('tr').find("input[id^='txtPUnit_']").val("N/A");

        $.ajax({
            type: 'POST',
            url: RootUrl + 'WorkOrder/SelectProductByProduceType',
            dataType: 'json',
            data: { ProduceTypeID: ddlProduceType },
            success: function (range) {

                $.each(range, function (i, items) {
                    $("#" + cntrlID).append('<option value="' + items.Value + '">    ' + items.Text + '</option>');
                });
            },
            error: function (ex) {
            }

        });
    }

    function OnChange_Product(cntrl) {
        $(cntrl).closest('tr').find("input.productType,select.productType").val("");
        var labelId = $(cntrl).closest('tr').find("input[id^='txtPUnit_']").attr("id");
        var producttype = $(cntrl).closest('tr').find("select[id^='ddlProduceType_']").val();
        $.ajax({
            type: 'POST',
            url: RootUrl + 'WorkOrder/GetUnitByProduct',
            dataType: 'json',
            data: { ProduceTypeID: producttype },
            success: function (range) {
                $.each(range, function (i, items) {
                    $("#" + labelId).val(items.Text);
                });
            },
            error: function (ex) {
            }

        });

    }

    function OnChange_IsExistingLot(cntrl) {
        var rowIndex = $(cntrl).data('rowindex');
        var toDepot = $('#ddlToDepot').val();
        var productID = $('#ddlProductName_' + rowIndex).val();
        var isExitingLot = $('#ddlIsExistingLot_' + rowIndex).val();
        $("#ddlDisplayLotNumber_" + rowIndex).empty().append('<option value="">' + "--Select--" + '</option>');

        if (isExitingLot == "True") {
            if (toDepot != '' && productID != "") {
                $('#txtNoOfLot_' + rowIndex).val('1').attr('readonly', true);
                $("#ddlDisplayLotNumber_" + rowIndex).addClass('required');
                $.ajax({
                    type: 'POST',
                    url: RootUrl + 'TransitPermit/GetDropdownData',
                    dataType: 'json',
                    data: { key: "InventoryLot", parentID: toDepot, childID: productID },
                    success: function (response) {
                        $.each(response.data, function (i, item) {
                            $("#ddlDisplayLotNumber_" + rowIndex).append('<option value="' + item.Value + '">    ' + item.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                    }

                });
            }
            else {
                alert('Please select To Depot & Product details first.');
                $('#ddlIsExistingLot_' + rowIndex).val('');
            }
        }
        else {
            $('#txtNoOfLot_' + rowIndex).val('1').removeAttr('readonly');
            $("#ddlDisplayLotNumber_" + rowIndex).removeClass('required');
        }
    }
</script>

