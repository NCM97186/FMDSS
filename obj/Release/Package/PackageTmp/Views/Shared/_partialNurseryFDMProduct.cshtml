@model FMDSS.Models.Master.NurseryFDMProduct

<link href="~/css/timepicki.css" rel="stylesheet" />
<script src="~/js/timepicki.js"></script>
<script>
    var $j = jQuery.noConflict();
    $j('.timepicker').timepicki();

</script>

<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script>
    var RootUrl = '@Url.Content("~/")';
    $(document).ready(function () {

         @*$("#BaseProduceTypeID").bind("change", function () {

        
                var values = {
                    objectType: 'in',
                    ID: $("#BaseProduceTypeID").val()
                };

                $.ajax({
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    url: '@Url.Content("~/")' + 'Master/getHeadDetails',
                    data: JSON.stringify(values),
                    success: function (data) {

                        $('#VehicleDIV').html(data.VehiclePartialView);

                        if (data.VehicleStatus == "TRUE") {
                            $('#VehicleIDSS').show();


                        }
                        else {
                            $('#VehicleIDSS').hide();

                        }

                    }
                });
         });*@
        $("#ProductNamesID").bind("change", function () {
            //alert($("#ProductNamesID option:selected").text());
            var selectItem = $("#ProductNamesID option:selected").text();
            $("#ProductName").val(selectItem);
        });
        $("#ProduceCategory").bind('change', function () {
            $("#ProduceCategory").val(1);
            var produceTypeId = $("#ProduceTypeID").val() | 0;           
            var produceCatId = $("#ProduceCategory").val() | 0;
            produceCatId = 1;
            $("#BaseProduceTypeID").empty();
            $("#ProductNamesID").empty();
            getBaseProductAndProductNameId(produceTypeId, produceCatId);
        });
        $("#ProduceTypeID").bind("change", function () {
            var produceTypeId = $("#ProduceTypeID").val() | 0;
            var produceCatId = $("#ProduceCategory").val() | 0;
            produceCatId = 1;
            $("#BaseProduceTypeID").empty();
            $("#ProductNamesID").empty(); 
            getBaseProductAndProductNameId(produceTypeId, produceCatId);
                return false;
        });
        function getBaseProductAndProductNameId(produceTypeId, produceCatId) {
            $.ajax({
                type: 'POST',
                url: RootUrl + 'Master/getBaseProductType', // we are calling json method
                dataType: 'json',
                data: {
                    ProduceTypeID: produceTypeId, ProductCategoryId: produceCatId
                },
                success: function (data) {
                    $.each(data.BaseProductList, function (i, items) {
                        $("#BaseProduceTypeID").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                    });
                    if (parseInt(produceTypeId)>0 && parseInt(produceCatId)>0) {
                        $.each(data.ProductNameList, function (i, items) {
                            $("#ProductNamesID").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                        });
                    }                    
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }

            });
        }
        $('#DiscountCitizen,#DiscountDepartment ,#DiscountNGO').keypress(function (event) {
            return $.isNumeric(event, this)
        });

        $('#btn_submit1').click(function (e) {
            
            //if ($('#ProduceCategory').val() <= 0 || $('#ProduceCategory').val() == 'undefined' || $('#ProduceCategory').val() == null) {
            //    $("#errProduceCategory").css("display", "block");
            //    $('#errProduceCategory').focus();
            //    return false;
            //}
            //else {
            //    $("#errProduceCategory").css("display", "none");
            //}
            
            if ($('#ProduceTypeID').val() <= 0 || $('#ProduceTypeID').val() == 'undefined' || $('#ProduceTypeID').val() == null) {
                $("#errProduceTypeID").css("display", "block");
                $('#errProduceTypeID').focus();
                return false;
            }
            else {
                $("#errProduceTypeID").css("display", "none");
            }

            //if ($('option:selected', $('#BaseProduceTypeID')).length == 0) {

            //    $("#errBaseProduceTypeID").css("display", "block");
            //    $('#errBaseProduceTypeID').focus();
            //    return false;
            //}
            //else {
            //    $("#errBaseProduceTypeID").css("display", "none");
            //}
            if ($('#ProductNamesID').val() <= 0 || $('#ProductNamesID').val() == 'undefined' || $('#ProductNamesID').val() == null) {
                $("#errProductNamesID").css("display", "block");
                $('#errProductNamesID').focus();
                return false;
            }
            else {
                $('#errProductNamesID').css("display", "none");
            }

            //if ($('#NumberofVehicle').val().trim() == "") {
            //    $("#errNumberofVehicle").css("display", "block");
            //    $('#errNumberofVehicle').focus();
            //    return false;
            //}
            //else {
            //    $('#errNumberofVehicle').css("display", "none");
            //}






            //if ($('#DiscountCitizen').val().trim() == "") {
            //    $("#errDiscountCitizen").css("display", "block");
            //    $('#errDiscountCitizen').focus();
            //    return false;
            //}
            //else {
            //    $('#errDiscountCitizen').css("display", "none");
            //}

            //if ($('#DiscountDepartment').val().trim() == "") {
            //    $("#errDiscountDepartment").css("display", "block");
            //    $('#errDiscountDepartment').focus();
            //    return false;
            //}
            //else {
            //    $('#errDiscountDepartment').css("display", "none");
            //}

            //if ($('#DiscountNGO').val().trim() == "") {
            //    $("#errDiscountNGO").css("display", "block");
            //    $('#errDiscountNGO').focus();
            //    return false;
            //}
            //else {
            //    $('#errDiscountNGO').css("display", "none");
            //}

            if ($('option:selected', $('#Isactive')).index() == 0) {
                $("#errIsactive").css("display", "block");
                $('#errIsactive').focus();
                return false;
            }
            else {
                $("#errIsactive").css("display", "none");
            }

        });




    });




</script>

@*<span style="color:darkred">@TempData["msg"]</span>*@
@using (Html.BeginForm("ADDUpdateNurseryFDMProduct", "Master", FormMethod.Post, new { enctype = "multipart/form-data", data_behavior = "confirm" }))
{
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal">
                &times;
            </button>
            <h4 class="modal-title">
                @*<label id="lbl_dpt">Add/Edit Place</label>*@
                @ViewBag.OpType
            </h4>
        </div>

        <div class="modal-body">
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.ProduceFor)
            @Html.Hidden("ProductName")
           
            
            
            <div class="col-md-12">
                <div class="col-lg-6" hidden="hidden">
                    <div class="form-group" hidden="hidden">
                        <label>Plant Category: <span class="mandatory">*</span></label>                       
                        @Html.DropDownListFor(Model => Model.ProducTCategoryID, (IEnumerable<SelectListItem>)ViewBag.ddlProductCategory, "--Select--", new { @class = "form-control common", id = "ProduceCategory" })                        
                        <div id="errProduceCategory" style="display:none" class="alert-danger1">Product Category is Required.</div>
                    </div>
                </div>
               
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Plant Type : <span class="mandatory">*</span></label>
                        @Html.DropDownListFor(Model => Model.ProduceTypeID, (IEnumerable<SelectListItem>)ViewBag.ddlNurseryFDMProduct, "--Select--", new { @class = "form-control common", id = "ProduceTypeID" })
                        <div id="errProduceTypeID" style="display:none" class="alert-danger1">Product Type is Required.</div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Plant Common Name(English/Hindi): <span class="mandatory">*</span></label>
                        @*@Html.DropDownListFor(Model => Model.ProductName, null, "--Select--", new { @class = "form-control common", id = "ProduceName" })*@
                        @Html.DropDownListFor(Model => Model.ProductNamesID, (IEnumerable<SelectListItem>)ViewBag.ddlProductName, "--Select--", new { @class = "form-control common", id = "ProductNamesID" })
                        @*@Html.TextBoxFor(model => model.ProductName, new { @class = "form-control common", @maxlength = "50" })*@
                        <div id="errProductNamesID" style="display:none" class="alert-danger1">Product Name is Required.</div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
               
                <div class="col-lg-6">
                    <div class="form-group" >
                        <label>Base Plant Type : <span class="mandatory">*</span></label>
                        @Html.ListBoxFor(Model => Model.BaseProduceTypeIDs, (IEnumerable<SelectListItem>)TempData["BaseProductType"], new { @class = "form-control common", id = "BaseProduceTypeID" })
                        <div id="errBaseProduceTypeID" style="display:none" class="alert-danger1">Base Produce Type is Required.</div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Active / Deactive : <span class="mandatory">*</span></label>
                        @Html.DropDownListFor(Model => Model.IsActive, (IEnumerable<SelectListItem>)ViewBag.ISactivelst, "--Select--", new { @class = "form-control common", id = "IsActive" })
                        <div id="errIsactive" style="display:none" class="alert-danger1">Active / Deactive  is Required.</div>

                    </div>
                </div>
            </div>
           

           



            @*<div class="col-lg-4">
                <div class="form-group">
                    <label>Thumb Image: <span class="mandatory">*</span></label>
                    <input type="file" class="form-control common fileToUpload" id="thumbImage" name="thumbImage">
                    <label><span style="display: none; color: #a94442;" class="spanmark" id="erroruploadfile"> </span></label>

                    @Html.HiddenFor(d => d.ProductThumbImage)
                </div>
            </div>

            <div class="col-lg-6">
                <div class="form-group">
                    <label>Full Image: <span class="mandatory">*</span></label>
                    <input type="file" class="form-control common fileToUpload" id="fullImage" name="fullImage">
                    <label><span style="display: none; color: #a94442;" class="spanmark" id="erroruploadfile"> </span></label>
                    @Html.HiddenFor(d => d.ProductFullImage)
                </div>
            </div>*@



            @*<div class="col-lg-6">
            <div class="form-group">
                <label>Discount for Citizen (%): <span class="mandatory">*</span></label>
                @Html.TextBoxFor(model => model.DiscountCitizen, new { @class = "form-control common", @maxlength = "2" })
                <div id="errDiscountCitizen" style="display:none" class="alert-danger1">Discount for Citizen is Required.</div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="form-group">
                <label>Discount for Department (%): <span class="mandatory">*</span></label>
                @Html.TextBoxFor(model => model.DiscountDepartment, new { @class = "form-control common", @maxlength = "2" })
                <div id="errDiscountDepartment" style="display:none" class="alert-danger1">Discount for Department is Required.</div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="form-group">
                <label>Discount for NGO (%): <span class="mandatory">*</span></label>
                @Html.TextBoxFor(model => model.DiscountNGO, new { @class = "form-control common", @maxlength = "2" })
                <div id="errDiscountNGO" style="display:none" class="alert-danger1">Discount for NGO is Required.</div>
            </div>
        </div>*@
           <div class="col-md-12">
               <div class="col-lg-6">
                   <div class="form-group" hidden="hidden">
                       <label>Plant Age: <span class="mandatory">*</span></label>
                       @Html.DropDownListFor(Model => Model.PlantAge, (IEnumerable<SelectListItem>)ViewBag.TreeAgeList, "--Select--", new { @class = "form-control common", id = "TreeAge" })
                       <div id="errTreeAge" style="display:none" class="alert-danger1">Plant Age is Required.</div>
                   </div>
               </div>
               
           </div>
          






            <div class="col-lg-12"></div>


            <!-- /.Btn Groping -->


        </div>
                            <div class="modal-footer" style="clear:both">
                                <div id="btn" class="col-lg-12">

                                    <button type="submit" class="btn btn-success" value="Save" id="btn_submit1">
                                        <i class="fa fa-check"></i> Save
                                    </button>

                                    <button type="button" id="btn_cancel" name="Command" value="Cancel" class="btn btn-danger" data-dismiss="modal">
                                        <i class="fa fa-times fa-fw"></i> Close
                                    </button>

                                </div>

                            </div>
                        </div>

}


    <script>

        $(function () {
            $(":file").attr('title', '  ');
            var $loading = $('#loadingDiv').hide();
            $("#fileToUpload1").change(function (e) {
                doReCreate1(e);
            });

            $("#fileToUpload").change(function (e) {
                doReCreate1(e);
            });
        });

        function FileVal(file) {
            var iSize = (file.size / 1048576);
            if (iSize > 2) {
                $('.fileToUpload').val('');
                $('#erroruploadfile').show();
                $('#erroruploadfile').html("2MB से बड़ा नहीं होना चाहिए!" + "<i class='fa fa-times fa-fw' style='float: right;padding: 2px;'></i>");
                $('#fileToUpload').focus();
                return false;
            }
            var exts = ['jpeg', 'jpg', 'pdf', 'png', 'gif'];
            if (file) {
                // split file name at dot
                var get_ext = file.name.split('.');
                // reverse name to check extension
                get_ext = get_ext.reverse();
                // check file type is valid as given in 'exts' array
                if ($.inArray(get_ext[0].toLowerCase(), exts) == -1) {
                    $('.fileToUpload').val('');
                    $('#erroruploadfile').show();
                    $('#erroruploadfile').html("कृपया Image फील्ड में केवल jpeg या jpg या png या gif फ़ाइल प्रारूप अपलोड करें !" + "<i class='fa fa-times fa-fw' style='float: right;padding: 2px;'></i>");
                    $('.fileToUpload').focus();
                    return false;
                } else {
                    $('#erroruploadfile').hide();
                }
            }
            else { $('#erroruploadfile').hide(); }
        }
        var nowTemp = new Date();
        var now = new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDate(), 0, 0, 0, 0);
        var files;
        var storedFiles = [];
        var upc = 0;
        $(function () {
            $(":file").attr('title', '  ');
            var $loading = $('#loadingDiv').hide();
            $(".fileToUpload").change(function (e) {
                doReCreate(e);
            });
            selDiv = $("#selectedFiles");
        });
        function doReCreate(e) {
            upc = upc + 1;
            handleFileSelect(e);
        }
        function handleFileSelect(e) {
            if (!e.target.files) return;
            files = e.target.files;
            for (var i = 0; i < files.length; i++) {
                var ret = FileVal(files[i]);
                if (ret != false) {
                    var f = files[i];
                    storedFiles.push(f.name);
                }
                else {
                    $(".fileToUpload").val('');
                }
            }
        }
        function removeAtt(t) {
            var serEle = $(t).parent().text().slice(0, -3);
            var index = storedFiles.indexOf(serEle);
            if (index !== -1) {
                storedFiles.splice(index, 1);
            }
            $(t).parent().remove();
        }
       
    </script>