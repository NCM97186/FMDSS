@{
    ViewBag.Title = "MappingUserForOffice";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_SuperAdmin.cshtml";
}

@model FMDSS.Models.Master.OfficeMapping

<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script>

    $(document).ready(function () {

        $('#dataTables-example').DataTable({
            responsive: true
        });

    });

    $(document).ready(function () {

        $('#dataTables-example2').DataTable({
            responsive: true
        });

    });


    var RootUrl = '@Url.Content("~/")';
    $(document).ready(function () {

    $("#OffcLevel").change(function () {
        debugger;
        
        $('#ForestBoundaries').empty();
        if ($("#OffcLevel").val() == 'ST') {
            $("#ForestBoundaries").append('<option value=0>--Select Boundary--</option>');
            $("#ForestBoundaries").append('<option value=ST001>State HQ</option>');
        }
        else {
            $("#ForestBoundaries").append('<option value=0>--Select Boundary--</option>');
            $('#ForestOffices').empty();
            $("#ForestOffices").append('<option value=0>--Select Office--</option>');
        
            $.ajax({
                type: 'POST',
                url: RootUrl + 'UserManagementMaster/GetForestBoundaries',
                dataType: 'json',
                data: { OfficeLevel: $("#OffcLevel").val() },
                success: function (states) {
                    $.each(states, function (i, items) {
                        $("#ForestBoundaries").append('<option value="' + items.Value + '">' +
                         items.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
        }
        return false;
    })

    $("#ForestBoundaries").change(function () {
        $('#ForestOffices').empty();
        $("#ForestOffices").append('<option value=0 >--Select Office--</option>');
        $.ajax({
            type: 'POST',
            url: RootUrl + 'UserManagementMaster/GetForestOffices',
            dataType: 'json',
            data: { ForestCode: $("#ForestBoundaries").val() },
            success: function (states) {
                $.each(states, function (i, items) {
                    $("#ForestOffices").append('<option value="' + items.Value + '">' +
                     items.Text + '</option>');
                });
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }
        });
        return false;
    });

    });


    function postUnMappedUserRequest(USERID) {
        debugger;
        var r = confirm('Are you sure you wish to map this Office ?');
        if (r == false) {
            return false;
        }
        var Status = $('#' + USERID).is(":checked");

        $.ajax({
            type: 'POST',
            url: RootUrl + 'UserManagementMaster/MappingOffice', // we are calling json method
            dataType: 'json',
            data: { USERIDs: USERID, ForestOffices: $('#ForestOffices').val(), STATUS: Status },
            success: function (circle) {
                $('#INDEX_' + USERID).hide();
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }

        });

    }


    function postMappedUserRequest(USERID) {
        debugger;
        var r = confirm('Are you sure you wish to Unmap this User ?');
        if (r == false) {
            return false;
        }

        var Status = $('#' + USERID).is(":checked");

        $.ajax({
            type: 'POST',
            url: RootUrl + 'UserManagementMaster/MappingOffice', // we are calling json method
            dataType: 'json',
            data: { USERIDs: USERID, ForestOffices: $('#ForestOffices').val(), STATUS: Status },
            success: function (circle) {
                $('#INDEX_' + PageID).hide();
            },
            error: function (ex) {
                alert('Failed to retrieve states.' + ex);
            }

        });
    }

    function CallForMapUserData(id) {
      
        
        var Office = $('#ForestOffices').val();
       
        var OffcLevel = $('#OffcLevel').val();

        var ForestBoundaries = $('#ForestBoundaries').val();
      
        $.ajax({
            type: 'GET',
            url: RootUrl + "UserManagementMaster/GetREPORTINGTO?USERID="+id+"&Office="+Office+"&ForestBoundaries="+ForestBoundaries+"&OffcLevel="+OffcLevel ,
            dataType: 'html',
            success: function (data) {
                $('#modelPlace1').html(data);
            },
            error: function (ex) {
                alert(ex.error);
            }
        });

    };

    function CallForMapPlace(id) {
      
        
        var Office = $('#ForestOffices').val();
       
        var OffcLevel = $('#OffcLevel').val();

        var ForestBoundaries = $('#ForestBoundaries').val();
      
        $.ajax({
            type: 'GET',
            url: RootUrl + "UserManagementMaster/MappingPlaceWithForestOffice?USERID=" + id + "&OfficeID=" + Office + "&ForestBoundaries=" + ForestBoundaries + "&OffcLevel=" + OffcLevel,
            dataType: 'html',
            success: function (data) {
                $('#modelPlace2').html(data);
            },
            error: function (ex) {
                alert(ex.error);
            }
        });

    };
</script>

<script src="~/Content/jquery-2.1.3.js"></script>
<link href="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/css/bootstrap-multiselect.css" rel="stylesheet" type="text/css" />
<script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js" type="text/javascript"></script>
<script type="text/javascript">

    $.ajaxPrefilter(function (options, original_Options, jqXHR) {
        options.async = true;
    });

    $(function () {
        $('#PLCAEIDss').multiselect({
            includeSelectAllOption: true
        });
    });
</script>

<div class="row">

    <div class="modal fade" id="myModal1" role="dialog">
        <div class="modal-dialog modal-lg" id="modelPlace1">
            <!-- Modal content-->
        </div>
    </div>

    <div class="modal fade" id="myModal2" role="dialog">
        <div class="modal-dialog modal-lg" id="modelPlace2">
            <!-- Modal content-->
        </div>
    </div>

    <div class="col-lg-9 pad">
        <h1 class="page-header"><span>Mapping Forest User With Office</span></h1>
    </div>

    @using (Html.BeginForm("MappingUserForOffice", "UserManagementMaster", FormMethod.Post))
    {
        <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-body">

                    <div class="col-lg-2">
                        <div class="form-group">
                            <label>Find Office <span class="mandatory">*</span></label>
                        </div>
                    </div>

                    <div class="col-lg-3">
                        <div class="form-group">                           
                            @Html.DropDownListFor(model => Model.OffcLevel, new List<SelectListItem>
                                 { new SelectListItem { Text = "HQ Level", Value = "ST"},
                                   new SelectListItem { Text = "Region Level", Value = "REG"},
                                   new SelectListItem { Text = "Circle Level", Value = "CIR"},
                                   new SelectListItem { Text = "Division Level", Value = "DIV"},
                                    new SelectListItem { Text = "Range Level", Value = "RNG"},                                   
                                   }, "--Select Office Level--", new { @class = "form-control common", id = "OffcLevel" })
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.DropDownListFor(model => Model.ForestBoundaries, (IEnumerable<SelectListItem>)ViewBag.lstForestBoundaries, "--Select Boundary--", new { @class = "form-control common", id = "ForestBoundaries" })
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="form-group">
                            @Html.DropDownListFor(model => Model.OfficeID, (IEnumerable<SelectListItem>)ViewBag.lstOfficeID, "--Select Office--", new { @class = "form-control common", id = "ForestOffices" })

                        </div>
                    </div>
                    <div class="col-lg-1">
                        <div class="form-group">
                            <input type="submit" class="btn btn-success" value="View" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel with-nav-tabs panel-default">
                <div class="panel-heading">
                    <ul class="nav nav-tabs">
                        <li class=""><a href="#tab2default" data-toggle="tab"><i class="fa fa-user fa-fw"></i> UnMapped Office User</a></li>
                        <li class="active"><a href="#tab1default" data-toggle="tab"><i class="fa fa-star fa-fw"></i> Mapped Office User</a></li>
                    </ul>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <div class="tab-pane fade " id="tab2default">
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <table class="table table-striped table-bordered table-hover table-responsive" id="dataTables-example">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>SSO ID</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.UnMappedOfficeLIST)
                                            {
                                                <tr id="INDEX_@item.USERID">

                                                    <td>@Html.DisplayFor(model => item.Index)  </td>
                                                    <td>@Html.DisplayFor(model => item.SSOID, new { id = "SSOID" })   </td>
                                                    <td>
                                                        <button type="button" class="btn btn-success btn-circle ObjectLinking" data-toggle="modal" data-target="#myModal1" title="Mapping Forest User With Office" onclick="return CallForMapUserData(@item.USERID);">
                                                            <i class="fa fa-plus"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            }


                                        </tbody>
                                    </table>

                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>
                        <div class="tab-pane fade active in " id="tab1default">
                            <div class="panel-body">
                                <div class="table-responsive request-id">


                                    <table class="table table-striped table-bordered table-hover table-responsive" id="dataTables-example2">
                                        <thead>
                                            <tr>
                                                <th>#</th>
                                                <th>SSO ID</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var item in Model.MappedOfficeLIST)
                                            {
                                                <tr id="INDEX_@item.USERID">

                                                    <td>@Html.DisplayFor(model => item.Index) </td>
                                                    <td>@Html.DisplayFor(model => item.SSOID, new { id = "SSOID" })   </td>
                                                    <td>
                                                        <input onclick='return postMappedUserRequest(@item.USERID)' type="checkbox" id="@item.USERID" value="true" @(item.IsactiveView ? "checked=\"checked\"" : "") />
                                                       
                                                         <button type="button" class="btn btn-success btn-circle ObjectLinking" data-toggle="modal" data-target="#myModal2" title="Mapping Forest User With Places" onclick="return CallForMapPlace(@item.USERID);">
                                                            <i class="fa fa-plus"></i>
                                                        </button>

                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>

                                </div>
                                <!-- /.table-responsive -->
                            </div>
                        </div>

                    </div>
                </div>
            </div>









        </div>
    }
</div>
