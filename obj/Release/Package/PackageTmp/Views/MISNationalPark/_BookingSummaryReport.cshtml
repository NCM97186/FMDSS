@model FMDSS.Entity.NPVM.OBookingSummaryDetails

<div class="panel panel-default">
    <div class="panel-heading">
        <strong>Booking Report</strong>
    </div>
    <div class="panel-body">
        <div id="tbl" class="table-responsive">
            <div class="col-lg-3 padding-bottom" style="float:right;"><button class="btn btn-info pull-right" onclick="tablesToExcel(['tblBookingReport'], ['tblBookingReport'], 'ZooBookingReport', 'Excel')">Export to Excel</button></div>
            <table class="table table-striped table-bordered table-hover" id="tblBookingReport">
                <thead>
                    <tr>
                        <th>Head Name</th>
                        <th>Head Amount</th>
                    </tr>
                    <tr>
                        <td><label>Report Publish Date Time</label></td>
                        <td>@DateTime.Now</td>
                    </tr>
                    <tr>
                        <td><label>Date</label></td>
                        <td>@Model.FromDate To @Model.ToDate</td>
                    </tr>
                    <tr>
                        <td><label>Place</label></td>
                        <td><span id="spanPlace"></span></td>
                    </tr>
                    <tr>
                        <td><label>Booking Type</label></td>
                        <td><span id="spanBookingType"></span></td>
                    </tr>
                    <tr>
                        <td><label>Students(@Model.StudentVisitors)</label></td>
                        <td>@Model.StudentVisitorsHeadAmt</td>
                    </tr>
                    <tr>
                        <td><label>Indian Visitors(@Model.IndianVisitors)</label></td>
                        <td>@Model.IndianVisitorsHeadAmt</td>
                    </tr>
                    <tr>
                        <td><label>Non-Indian Visitors(@Model.NonIndianVisitors)</label></td>
                        <td>@Model.NonIndianVisitorsHeadAmt</td>
                    </tr>
                    <tr>
                        <td><label>@Model.HeadName</label></td>
                        <td><b><i>@string.Format("{0:N}", Model.HeadAmount)</i></b></td>
                    </tr>
                    <tr>
                        <td><label>Emitra Charges</label></td>
                        <td>@string.Format("{0:N}", Model.EmitraCharges)</td>
                    </tr>
                    <tr>
                        <td><label>Grand Total</label></td>
                        <td>@string.Format("{0:N}", Model.GrandTotal)</td>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>
<script type="text/javascript" src="~/js/jquery.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        SetDefaultValue();
    });
    $.noConflict(true);
    var tablesToExcel = (function () {
        var uri = 'data:application/vnd.ms-excel;base64,'
            , tmplWorkbookXML = '<?xml version="1.0"?><?mso-application progid="Excel.Sheet"?><Workbook xmlns="urn:schemas-microsoft-com:office:spreadsheet" xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">'
                + '<DocumentProperties xmlns="urn:schemas-microsoft-com:office:office"><Author>Axel Richter</Author><Created>{created}</Created></DocumentProperties>'
                + '<Styles>'
                + '<Style ss:ID="Currency"><NumberFormat ss:Format="Currency"></NumberFormat></Style>'
                + '<Style ss:ID="Date"><NumberFormat ss:Format="Medium Date"></NumberFormat></Style>'
                + '</Styles>'
                + '{worksheets}</Workbook>'
            , tmplWorksheetXML = '<Worksheet ss:Name="{nameWS}"><Table>{rows}</Table></Worksheet>'
            , tmplCellXML = '<Cell{attributeStyleID}{attributeFormula}><Data ss:Type="{nameType}">{data}</Data></Cell>'
            , base64 = function (s) { return window.btoa(unescape(encodeURIComponent(s))) }
            , format = function (s, c) { return s.replace(/{(\w+)}/g, function (m, p) { return c[p]; }) }
        return function (tables, wsnames, wbname, appname) {
            var ctx = "";
            var workbookXML = "";
            var worksheetsXML = "";
            var rowsXML = "";
            console.log(tables);
            var getFilterFromDate = document.getElementById('txtFromDate').value;
            var getFilterToDate = document.getElementById('txtToDate').value;
            wbname = wbname + "FromDate:-" + getFilterFromDate + "- ToDate:-" + getFilterToDate + '.xls';

            for (var i = 0; i < tables.length; i++) {
                if (!tables[i].nodeType) tables[i] = document.getElementById(tables[i]);
                for (var j = 0; j < tables[i].rows.length; j++) {
                    rowsXML += '<Row>'
                    for (var k = 0; k < tables[i].rows[j].cells.length; k++) {
                        var dataType = tables[i].rows[j].cells[k].getAttribute("data-type");
                        var dataStyle = tables[i].rows[j].cells[k].getAttribute("data-style");
                        var dataValue = tables[i].rows[j].cells[k].getAttribute("data-value");
                        dataValue = (dataValue) ? dataValue : tables[i].rows[j].cells[k].innerHTML.trim();
                        if (dataValue.indexOf('button') == -1) {
                            var dataFormula = tables[i].rows[j].cells[k].getAttribute("data-formula");
                            dataFormula = (dataFormula) ? dataFormula : (appname == 'Calc' && dataType == 'DateTime') ? dataValue : null;
                            ctx = {
                                attributeStyleID: (dataStyle == 'Currency' || dataStyle == 'Date') ? ' ss:StyleID="' + dataStyle + '"' : ''
                                , nameType: (dataType == 'Number' || dataType == 'DateTime' || dataType == 'Boolean' || dataType == 'Error') ? dataType : 'String'
                                , data: (dataFormula) ? '' : dataValue
                                , attributeFormula: (dataFormula) ? ' ss:Formula="' + dataFormula + '"' : ''
                            };
                            rowsXML += format(tmplCellXML.trim(), ctx);
                        }
                    }
                    rowsXML += '</Row>'

                }
                ctx = { rows: rowsXML, nameWS: wsnames[i] || 'Sheet' + i };
                worksheetsXML += format(tmplWorksheetXML, ctx);
                rowsXML = "";
            }

            ctx = { created: (new Date()).getTime(), worksheets: worksheetsXML };
            workbookXML = format(tmplWorkbookXML, ctx);

            console.log(workbookXML);

            var link = document.createElement("A");
            link.href = uri + base64(workbookXML);
            link.download = wbname || 'Zoobooking.xls';
            link.target = '_blank';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    })();

    function SetDefaultValue() {
        $('#spanPlace').html($('#Place').find('option:selected').text());
        $('#spanBookingType').html($('#BookingType').find('option:selected').text());
    }
</script>
<style>
    .padding-bottom {
        padding-bottom: 7px;
    }
</style>