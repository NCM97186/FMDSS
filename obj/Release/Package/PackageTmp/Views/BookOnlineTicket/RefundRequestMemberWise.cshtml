@{
    ViewBag.Title = "RefundRequest";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
}
@model FMDSS.Models.BookOnlineTicket.BookOnTicket
<script src="~/js/jquery.min.js"></script>

@*<script>
    $(document).ready(function () {

        $("#myModal").modal();

    });
</script>*@
<script>
    var RootUrl = '@Url.Content("~/")';


    $(document).ready(function () {


        $('#btn_Submit').click(function (e) {


            if ($('.MemberTableID:checked').length > 0) {
                var str = "";
                $('.MemberTableID:checked').each(function (i) {
                    str = str + $(this).val()+",";
                });
                $("#MemberSLNo").val(str);
            }
            else {
                alert("Atleast one member delete");
                return false;
            }


            if ($('#BankName').val().trim() == "") {
                $('#errBankName').css("display", "block");
                $('#errBankName').focus();
                return false;
            }
            else {
                $('#errBankName').css("display", "none");
            }

            if ($('#BranchName').val().trim() == "") {
                $('#errBranchName').css("display", "block");
                $('#errBranchName').focus();
                return false;
            }
            else {
                $('#errBranchName').css("display", "none");
            }

            if ($('#IFSCCode').val().trim() == "") {
                $('#errIFSCCode').css("display", "block");
                $('#errIFSCCode').focus();
                return false;
            }
            else {
                $('#errIFSCCode').css("display", "none");
            }

            if ($('#AccountHolderName').val().trim() == "") {
                $('#errAccountHolderName').css("display", "block");
                $('#errAccountHolderName').focus();
                return false;
            }
            else {
                $('#errAccountHolderName').css("display", "none");
            }


            if ($('option:selected', $('#AccountType')).index() == 0) {
                $("#errAccountType").css("display", "block");
                $('#errAccountType').focus();
                return false;
            }
            else {
                $("#errAccountType").css("display", "none");
            }

            if ($('#AccountNo').val().trim() == "") {
                $('#errAccountNo').css("display", "block");
                $('#errAccountNo').focus();
                return false;
            }
            else {
                $('#errAccountNo').css("display", "none");
            }




            if (jQuery("#ConfirmRefundByCitizen").prop("checked")) {
                $('#errConfirmRefundByCitizen').css("display", "none");
            }
            else {
                $('#errConfirmRefundByCitizen').css("display", "block");
                $('#errConfirmRefundByCitizen').focus();
                return false;
            }

        });



    });


</script>

<style>
    #myModal .modal-header {
        background-color: #5cb85c;
    }

        #myModal .modal-header h4, .close {
            color: #ffffff;
            text-align: center;
            font-size: 30px;
        }

    #myModal .modal-footer {
        background-color: #f9f9f9;
    }
</style>



<div class="modal fade" id="myModal" role="dialog">

    <div class="modal-dialog">


        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4><i class="fa-fw"></i>Ticket Cancellation Policy</h4>
            </div>
            <div class="modal-body" style="padding:40px 50px;">

                <ul class="a">
                    @*<li> As per the policy, if you cancel the booking then 50% amount of charged fees excluding emitra & bank charges will be refunded.</li>*@
                    <li> As per the policy, if you cancel the booking then below amount of charged fees excluding emitra & bank charges will be refunded.</li>
                    <table class="table table-striped table-bordered table-hover">
                        <tr>
                            <th>अवधि बुकिंग दिवस को शामिल करते हुए <br />(Including period bookings day) </th>
                            <th>रिफंड टिकट राशि का प्रतिशत <br />(Percent of refund ticket amount)</th>
                        </tr>
                        <tr>
                            <td>बुकिंग दिवस से 90 दिन तक<br /> (Up to 90 days from booking day)</td>
                            <td>75</td>
                        </tr>
                        <tr>
                            <td>91 से 180 दिवस तक <br /> (From 91 to 180 days)</td>
                            <td>50</td>
                        </tr>
                        <tr>
                            <td>181 से 270 दिवस तक <br /> (From 181 to 270 days)</td>
                            <td>25</td>
                        </tr>
                        <tr>
                            <td>270 दिवस अधिक <br /> (270 days more)</td>
                            <td>0</td>
                        </tr>
                    </table>



                    <li>Before proceeding please keep ready the required bank details i.e. Bank Name, Branch Name, IFSC Code, Account Type (Saving) & Account No. etc.</li>

                </ul>
            </div>
            <div class="modal-footer" style="clear:both">
                <div id="btn" class="col-lg-12">

                    <button type="button" id="btn_cancel" class="btn btn-success" data-dismiss="modal">
                        Confirm
                    </button>

                    <a class="btn btn-danger" href='@Url.Action("BookOnlineTicket", "BookOnlineTicket" )'>
                        Exit
                    </a>

                </div>
            </div>
        </div>

    </div>


</div>



<div class="row">
    <div class="col-lg-9 pad">
        <h1 class="page-header"><span>WildLife Ticket Booking : Refund Process Member Wise </span></h1>
    </div>
    @using (Html.BeginForm("RefundRequestMemberWise", "BookOnlineTicket", FormMethod.Post))
    {
         
        <div class="col-lg-9">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-xs-12 table-responsive">
                            <table class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Action</th>
                                        <th>Member Name</th>
                                        <th>Member ID</th>
                                        <th>Member Fee</th>
                                        <th>Camera Fees</th>
                                        <th>Safari Fees</th>
                                        <th>Vehicle Rent Fees</th>
                                        <th>GST on Vehicle Rent Fees</th>
                                        <th>Guide Fees</th>
                                        <th>GST on Guide Fees</th>
                                        <th>Grand Total</th>
                                        <th>Refund Amount</th>
                                        <th>Enter By</th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @if (TempData["ListCurrentBookingMemberDetails"] != null)
                                    {
                                        foreach (var item in (IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>)TempData["ListCurrentBookingMemberDetails"])
                                        {
                                            <tr style="color:Black">
                                                <td> <input type="checkbox" value="@item.MemberTableID" class="MemberTableID"> </td>
                                                <td>@Html.DisplayFor(model => item.MemberName)  </td>
                                                <td>@Html.DisplayFor(model => item.MemberIdNo)  </td>
                                                <td>@Html.DisplayFor(model => item.TotalMemberFees)  </td>
                                                <td>@Html.DisplayFor(model => item.TotalCameraFees)  </td>
                                                <td>@Html.DisplayFor(model => item.TotalSafariFees)  </td>
                                                <td>@Html.DisplayFor(model => item.VehicleRent)  </td>
                                                <td>@Html.DisplayFor(model => item.GSTonVehicleRent)  </td>
                                                <td>@Html.DisplayFor(model => item.GuideFee)  </td>
                                                <td>@Html.DisplayFor(model => item.GSTGuideFee)  </td>
                                                <td>@Html.DisplayFor(model => item.GrandTotal)  </td>
                                                <td>@Html.DisplayFor(model => item.RefundAmount)  </td>
                                                <td>
                                                    @Html.DisplayFor(model => item.SSOID)
                                                    @Html.HiddenFor(model => item.TicketID)
                                                  
                                                </td>

                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>



                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>Request Id:</label>
                            @Html.TextBoxFor(model => model.RequestId, new { @class = "form-control common datefield", id = "RequestId", @readonly = "readonly" })
                            @Html.HiddenFor(model => model.RequestId)
                            <div id="errPermission" style="display:none" class="alert-danger1">Permission is Required.</div>
                        </div>
                    </div>



                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>Bank Name:</label>
                            @Html.TextBoxFor(model => model.BankName, new { @class = "form-control common datefield", id = "BankName" })

                            <div id="errBankName" style="display:none" class="alert-danger1">Bank Name is Required.</div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>Branch Name:</label>
                            @Html.TextBoxFor(model => model.BranchName, new { @class = "form-control common datefield", id = "BranchName" })

                            <div id="errBranchName" style="display:none" class="alert-danger1">Branch Name is Required.</div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>IFSC Code:</label>
                            @Html.TextBoxFor(model => model.IFSCCode, new { @class = "form-control common datefield", id = "IFSCCode" })

                            <div id="errIFSCCode" style="display:none" class="alert-danger1">IFSC Code is Required.</div>
                        </div>
                    </div>

                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>Account Holder Full Name:</label>
                            @Html.TextBoxFor(model => model.AccountHolderName, new { @class = "form-control common datefield", id = "AccountHolderName" })

                            <div id="errAccountHolderName" style="display:none" class="alert-danger1">Account Holder Full Name is Required.</div>
                        </div>
                    </div>



                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>Account Type:</label>

                            @Html.DropDownListFor(model => model.AccountType,
                                                                           new SelectList(new List<SelectListItem> {
                                                                                                                                     new SelectListItem { Text = "Current", Value = "Current"},
                                                                                                                                     new SelectListItem { Text = "Saving", Value = "Saving"}
                                                                                }, "Value", "Text"),
                                                                            "Select Account Type",
                                                                             new { @class = "form-control common datefield", id = "AccountType" })
                            <div id="errAccountType" style="display:none" class="alert-danger1">Account Type is Required.</div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group">

                            <label>Account No:</label>
                            @Html.TextBoxFor(model => model.AccountNo, new { @class = "form-control common datefield", id = "AccountNo" })

                            <div id="errAccountNo" style="display:none" class="alert-danger1">Account No is Required.</div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="form-group">

                            @Html.CheckBoxFor(model => model.ConfirmRefundByCitizen, new { id = "ConfirmRefundByCitizen" }) I hereby confirm my request of cancellation of the ticket and want my refundable amount in the above mentioned bank account.
                            <div id="errConfirmRefundByCitizen" style="display:none;" class="alert-danger1">Confirm Refund is Required.</div>
                        </div>
                    </div>

                    <div id="btn" class="col-lg-12">

                        <button type="submit" class="btn btn-success" name="Command" value="Submit" id="btn_Submit">
                            @Html.HiddenFor(model => model.MemberSLNo, new { @id= "MemberSLNo" })

                            Process To Refund
                        </button>
                        <a id="btn_Previous" style="float:none" class="btn btn-warning" href='@Url.Action("BookOnlineTicket", "BookOnlineTicket")'>
                            Back
                        </a>

                    </div>


                </div>
            </div>



        </div>
    }

</div>