@{
    ViewBag.Title = "BookOnlineTicket";
    Layout = Convert.ToString(HttpContext.Current.Session["CurrentLayout"].ToString()); // "~/Views/Shared/_Layout.cshtml";
}
@model IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>
@using CaptchaMvc.HtmlHelpers

<style>
    #myModal .modal-header {
        background-color: #5cb85c;
    }

        #myModal .modal-header h4, .close {
            color: #ffffff;
            text-align: center;
            font-size: 30px;
        }

    #myModal .modal-footer {
        background-color: #f9f9f9;
    }

    #myModal .btn-success {
        width: 100%;
        padding: 10px;
    }

    ul.a {
        list-style-type: circle;
    }
</style>


<style>
    #myModalRefund .modal-header {
        background-color: #5cb85c;
    }

        #myModalRefund .modal-header h4, .close {
            color: #ffffff;
            text-align: center;
            font-size: 30px;
        }

    #myModalRefund .modal-footer {
        background-color: #f9f9f9;
    }

    #myModalRefund .btn-success {
        width: 100%;
        padding: 10px;
    }

    ul.a {
        list-style-type: circle;
    }
</style>
<script src="~/Scripts/jquery_d_1.7.3.js"></script>
@if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"]) == "False")
{
    @*<meta http-equiv="refresh" content="600;url=http://fmdss.forest.rajasthan.gov.in/SessionExpire/Index">*@
}
<script src="~/js/jquery.min.js"></script>
<script type="text/javascript">


    $(document).ready(function () {

        $('input:text,select,textarea').focusin(function () {
            $(this).css({ 'background-color': 'lightgray' });
        });

        $('input:text,select,textarea').focusout(function () {
            $(this).css({ 'background-color': 'white' });
        });



    });
     function TicketRefund(id) {
        // alert(id);
        $("#myModal_TicketRefund").modal('show');
        var RootUrl = '@Url.Content("~/")';
        $('#TicketID').val(id);
        $('#btn_Refund').attr('href', RootUrl + 'BookOnlineTicket/Refund?TicketId=' + id);
        
    };

    var RootURl = '@Url.Content("~/")';

    $(function (e) {
        $(".datefield").keypress(function (e) {
            e.preventDefault();
        });
        //$('.MemberName').keypress(function (e) {
        //    if (e.ctrlKey || e.altKey) {
        //        e.preventDefault();
        //    } else {
        //        var key = (e.which) ? e.which : e.keyCode
        //        if (e.shiftKey) {
        //            if (key == 64 || key == 33 || key == 35 || key == 36 || key == 37 || key == 94 || key == 38 || key == 42 || key == 40 || key == 41) {
        //                e.preventDefault();
        //            }
        //        }
        //        if (!((key == 8) || (key == 32) || (key == 46) || (key >= 35 && key <= 40) || (key >= 65 && key <= 90) || (key >= 97 && key <= 122))) {
        //            e.preventDefault();
        //        }
        //    }
        //});


        $('.MemberIdNo').keypress(function (e) {
            var kc = e.which;
            if (e.shiftKey) {
                if (kc == 64 || kc == 33 || kc == 35 || kc == 36 || kc == 37 || kc == 94 || kc == 38 || kc == 42 || kc == 40 || kc == 41) {
                    e.preventDefault();
                }
            }
            if ((kc >= 97 && kc <= 122) || (kc >= 65 && kc <= 90) || (kc == 0 || kc == 8 || kc == 13 || kc == 95) || (kc >= 47 && kc <= 57) || (kc >= 44 && kc < 46) || (kc >= 40 && kc < 42) || (kc >= 96 && kc <= 105) || (kc == 32)) {

            }
            else {
                e.preventDefault();
            }
        });

        $('.MemberTotalCamera').bind('keypress', function (evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode
            // var charCode = evt.which;

            if ((charCode == 46) || (charCode >= 97 && charCode <= 122) || (charCode >= 65 && charCode <= 90)) {
                return false;
            }
            else {
                if (charCode >= 48 && charCode <= 57 || charCode == 46) {
                    return true;
                }
                else {
                    evt.preventDefault();
                }
            }
        });


        //   Captcha();Remove Old Captcha ///Change my Amit for load testing
        var placeChange;
        $("#ddl_place").bind("click", function (e) {
            placeChange = $(this).val();
        }).bind("change", function (e) {

            //if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {
            if (1 == 1) {
                $('#txt_dateofarrival').val('');
                $('#ddl_Shift').val(0);
                $('#ddl_vehicle').val(0);
                $('#hdn_availTicket,#hdn_availvehicle,#hdn_vehiclefee,#hdn_vehicleSeatAvailable').val('');
                $('#lbl_NumberofMembersavailable,#lbl_Numberofvehicleavailable,#lbl_feePerVehicle,#lbl_vehicleSeatAvailable,#lbl_ExtraAmount,#lbl_FeePerMember').text('');
                $("#ddl_Zone").empty();

                var placeID = $("#ddl_place").val();
                var values = {
                    PlaceID: placeID
                };
                if ($("#ddl_place option:selected").text() != '--Select--') {
                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(values),
                        url: RootURl + 'BookOnlineTicket/CheckSafariAccomoAvailabilityVIPOnlineBookingHDFD',
                        success: function (data) {
                            $("#txt_dateofarrival").datepicker("destroy");


                            if (data.NEWDATEOPEN != "") {



                                $("#PlaceAndTime").text("" + $("#ddl_place option:selected").text() + " new day open (" + data.NEWDATEOPEN + ") ");

                                $("#getting-started").css("display", "none");
                            }
                            else {

                                $("#PlaceAndTime").val('');
                                $("#getting-started").css("display", "none");
                            }

                            if (data.list1 == "1") {
                                $('#divSafariHead').css("display", "block");
                                $('#IsSafari').css("display", "block");
                                $('#hdnSafari').val('F');
                            }
                            else {
                                $('#divSafariHead').css("display", "none");
                                $('#IsSafari').css("display", "none");
                                $('#hdnSafari').val('NF');
                                $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').show();
                                for (var i = 0; i < 6; i++) {
                                    var row = 'trRow' + i;
                                    $('#' + row).show();
                                }
                            }
                            if (data.list2 == "1") {
                                $('#divAccomoHead').css("display", "block");
                                $('#IsAccommodation').css("display", "block");
                            }
                            else {
                                $('#divAccomoHead').css("display", "none");
                                $('#IsAccommodation').css("display", "none");
                            }
                            if (data.list3.length > 0) {
                                $(".zone").show();
                                $('#hdZone').val('F');
                                $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                                for (var i = 0; i < data.list3.length; i++) {
                                    $("#ddl_Zone").append('<option value="' + data.list3[i].Value + '">' + data.list3[i].Text + '</option>');
                                }
                            }
                            else {
                                $(".zone").hide();
                                $('#hdZone').val('NF');
                                $("#ddl_Zone").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                                if ($('#hdnDeptKiosk').val() != '') {
                                    //$("#txt_dateofarrival").datepicker("destroy");
                                    //$(".datefield").datepicker({ minDate: new Date(), maxDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                    //$("#txt_dateofarrival").datepicker("setDate", new Date());
                                    CurrentShift();
                                }
                                // Vichelcategory();
                            }

                            if (data.list9 == 1) {
                                $(".ddl_Quota_me").show();
                                $("#ddl_Quota").empty();

                                if (data.list8.length > 0) {
                                    $("#ddl_Quota").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                                    for (var i = 0; i < data.list8.length; i++) {
                                        $("#ddl_Quota").append('<option value="' + data.list8[i].Value + '">' + data.list8[i].Text + '</option>');
                                    }
                                }

                            }
                            else {
                                $("#ddl_Quota").empty();
                                $(".ddl_Quota_me").hide();
                            }

                            // start change by arvind K sharma [ logic correct after reachecd last date of month ]
                            if (data.list4 != "NF" && data.list5 != "NF") {
                                var d = new Date();
                                d.setDate(d.getDate() + 90);
                                var day = d.getDate();
                                var month = d.getMonth() + 1;
                                var year = d.getFullYear();
                                if (day < 10) {
                                    day = "0" + day;
                                }
                                if (month < 10) {
                                    month = "0" + month;
                                }
                                var tdate = day + "/" + month + "/" + year;
                                var tddate = month + "/" + day + "/" + year;
                                var minDate = data.list4;
                                var maxDate = data.list5;
                                var mdate = maxDate.split('/');
                                var mxdate = mdate[1] + "/" + mdate[0] + "/" + mdate[2];
                                var midate = minDate.split('/');
                                var mndate = midate[1] + "/" + midate[0] + "/" + midate[2];
                                var minimumdate = Date.parse(mndate);
                                var todaydateplusNinty = Date.parse(tddate);
                                var maximumdate = Date.parse(mxdate);
                                var currentdate = new Date();

                                ////Change for Keoladeo National Park
                                if ($("#ddl_place").val() == '1') {
                                    var cday = currentdate.getDate();
                                    var cmonth = currentdate.getMonth() + 1;
                                    var cyear = currentdate.getFullYear();
                                }
                                else {
                                    var PlusOneDay = new Date((new Date()).valueOf() + 1000 * 3600 * 24);
                                    var cday = PlusOneDay.getDate();
                                    var cmonth = PlusOneDay.getMonth() + 1;
                                    var cyear = PlusOneDay.getFullYear();
                                }
                                //////End for Keoladeo National Park

                                if (cday < 10) {
                                    cday = "0" + cday;
                                }
                                if (cmonth < 10) {
                                    cmonth = "0" + cmonth;

                                }
                                var ctdate = cmonth + "/" + cday + "/" + cyear;
                                var crntdate = Date.parse(ctdate);
                                if (crntdate > minimumdate) {
                                    //var minDateSet = cday + "/" + cmonth + "/" + cyear;
                                    var minDateSet = data.list7;

                                }
                                else {
                                    var minDateSet = data.list4;
                                }


                                //Working by Rajveer
                                //var disabledDays = [7, 8, 9];
                                var disabledDays = [7];

                                function nationalDays(date) {
                                    var m = date.getMonth(), d = date.getDate(), y = date.getFullYear();
                                    //console.log('Checking (raw): ' + m + '-' + d + '-' + y);
                                    for (i = 0; i < disabledDays.length; i++) {
                                        if ($.inArray((m + 1), disabledDays) != -1) {

                                            //console.log('bad:  ' + (m+1) + '-' + d + '-' + y + ' / ' + disabledDays[i]);
                                            return [false];
                                        }
                                    }
                                    //console.log('good:  ' + (m+1) + '-' + d + '-' + y);
                                    return [true];
                                }
                                function noWeekendsOrHolidays(date) {
                                    //var noWeekend = jQuery.datepicker.noWeekends(date);
                                    //return noWeekend[0] ? nationalDays(date) : noWeekend;
                                    return nationalDays(date);
                                }

                                //End


                                if (todaydateplusNinty > minimumdate && todaydateplusNinty <= maximumdate) {
                                    //$(".datefield").datepicker({ minDate: minDateSet, maxDate: "89", dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                    $(".datefield").datepicker({
                                        beforeShowDay: noWeekendsOrHolidays,
                                        minDate: minDateSet, maxDate: data.list6, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); }
                                    });
                                }
                                else if (todaydateplusNinty > minimumdate && todaydateplusNinty > maximumdate) {
                                    $(".datefield").datepicker({ minDate: minDateSet, maxDate: data.list5, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                }
                                else {
                                    $("#txt_dateofarrival").attr('disabled', true);
                                }

                            }
                                // end change by arvind K sharma [ logic correct after reachecd last date of month ]
                            else {
                                //  $(".datefield").datepicker({ minDate: new Date(), maxDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                                if ($('#hdnDeptKiosk').val() != '') {
                                    //  $("#txt_dateofarrival").datepicker("setDate", new Date());
                                    CurrentShift();
                                }
                            }
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });
                }
            }
            else {
                $(this).val(placeChange);
                alert('You can not change the Protected Area. Please delete your member entry.');
                return false;
            }
        });
        $("#ddl_Shift").bind("change", function (e) {
            Vichelcategory();
        });
        var zoneChange;
        $("#ddl_Zone").bind("click", function (e) {
            zoneChange = $(this).val();
        }).bind("change", function (e) {

            //if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {
            if (1 == 1) {

                $('#txt_dateofarrival').val('');
                $('#ddl_Shift').val(0);
                $('#ddl_vehicle').val(0);
                $('#txt_Totalseat').val('');
                $('#txt_NoOfTicket').val('');
                $('#hdn_availTicket,#hdn_availvehicle,#hdn_vehiclefee,#hdn_vehicleSeatAvailable').val('');
                $('#lbl_NumberofMembersavailable,#lbl_Numberofvehicleavailable,#lbl_feePerVehicle,#lbl_vehicleSeatAvailable,#lbl_ExtraAmount,#lbl_FeePerMember').text('');
                if ($('#hdnDeptKiosk').val() != '') {
                    //$("#txt_dateofarrival").datepicker("destroy");
                    //$(".datefield").datepicker({ minDate: new Date(), maxDate: new Date(), dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                    //$("#txt_dateofarrival").datepicker("setDate", new Date());
                    CurrentShift();
                }
                //  Vichelcategory();
            }
            else {
                $(this).val(zoneChange);
                alert('You can not change the zone. Please delete your member entry.');
                return false;
            }
        });


        var datechange;
        $("#txt_dateofarrival").bind("click", function (e) {
            datechange = $(this).val();
        }).bind("change", function (e) {


            var arrivaldate = this.value;


            if ($('#hdnDeptKiosk').val() == '') {

                //if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {
                if (1 == 1) {
                    $('#lbl_NumberofMembersavailable').text('');
                    $('#lbl_Numberofvehicleavailable').text('');
                    $('#ddl_Shift').empty();
                    var placeID = $("#ddl_place").val();
                    var Zone = $('#ddl_Zone').val();
                    if (!Zone) { Zone = 0; }
                    var values = {
                        PlaceID: placeID,
                        Zone: Zone,
                        ArrivalDate: arrivaldate
                    };

                    var values = {
                        PlaceID: placeID,
                        Zone: Zone,
                        ArrivalDate: arrivaldate
                    };
                    var CheckBookingDurationsvalues = {
                        PlaceID: placeID,
                        Date: $("#txt_dateofarrival").val()
                    };

                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(CheckBookingDurationsvalues),
                        url: RootURl + 'BookOnlineTicket/CheckBookingDurations',
                        success: function (data) {
                            if (data.Dstatus == "0") {
                                alert(data.DMessage);

                                location.href = "BookOnlineTicket";


                            }
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });



                    $.ajax({
                        type: 'POST',
                        headers: {
                            __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                        },
                        contentType: 'application/json; charset=utf-8',
                        data: JSON.stringify(values),
                        url: RootURl + 'BookOnlineTicket/BindShiftByPlaceZoneOnlineBooking',
                        success: function (data) {

                            var hours = new Date().getHours();
                            var minutes = new Date().getMinutes();
                            var ampm = hours >= 12 ? 'pm' : 'am';
                            hours = hours % 12;
                            hours = hours ? hours : 12; // the hour '0' should be '12'
                            minutes = minutes < 1 ? '0' + minutes : minutes;
                            $('#ddl_Shift').empty();
                            $("#ddl_Shift").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                            for (var x = 0; x < data.list1.length; x++) {
                                if (data.list1[x].isHalfDay == 'True') {
                                    $("#ddl_Shift").append('<option value="' + 4 + '">' + "Half Day" + '</option>');
                                }
                                if (data.list1[x].isFullDay == 'True') {
                                    $("#ddl_Shift").append('<option value="' + 3 + '">' + "Full Day" + '</option>');
                                }
                                if (data.list1[x].isMorning == 'True') {
                                    $("#ddl_Shift").append('<option value="' + 1 + '">' + "Morning (Half Day)" + '</option>');
                                }
                                if (data.list1[x].isEvening == 'True') {
                                    $("#ddl_Shift").append('<option value="' + 2 + '">' + "Evening (Half Day)" + '</option>');
                                }
                            }
                            $('#ddl_Accomo').empty();
                            $("#ddl_Accomo").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                            for (var i = 0; i < data.list2.length; i++) {
                                $("#ddl_Accomo").append('<option value="' + data.list2[i].Value + '">' + data.list2[i].Text + '</option>');
                            }
                            // });
                        },
                        traditional: true,
                        error: function (data) { console.log(data) }
                    });
                    document.getElementById("errorPlace").style.display = 'none';
                }
                else {
                    $(this).val(datechange);
                    alert('You can not change the date. Please delete your member entry.');
                    return false;
                }
            }
        });


        var shift;
        $("#ddl_Shift").bind("click", function (e) {
            shift = $(this).val();
        }).bind("change", function (e) {
            //if ($('#MemberName0').val() == '' && $('#MemberGender0').val() == 0 && $('#MemberNationality0').val() == 0 && $('#MemberIdType0').val() == 0 && $('#MemberIdNo0').val() == '') {
            if (1 == 1) {
                $("#ddl_vehicle").val(0);
                var arrivalDate = $("#txt_dateofarrival").val();
                if (arrivalDate) {
                    var placeID = $("#ddl_place").val();
                    var shiftTime = $("#ddl_Shift").val();
                    var Zone = $('#ddl_Zone').val();
                    if (!Zone) { Zone = 0; }
                    var values = {
                        PlaceID: placeID,
                        ArrivalDate: arrivalDate,
                        ShiftTime: shiftTime,
                        Zone: Zone,
                        vehicleID: 0
                    };
                    if ($("#ddl_Shift option:selected").text() != '--Select--' && $('#hdnSafari').val() == 'NF') {
                        $.ajax({
                            type: 'POST',
                            headers: {
                                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                            },
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify(values),
                            url: RootURl + 'BookOnlineTicket/CheckTicketAvailabilityForVIPSeatsOnlineBooking',
                            success: function (data) {
                                var d = data.strStatus.split('#');
                                if (d[0] != '') {
                                    $('#lbl_NumberofMembersavailable').text("Currently available tickets: " + d[0]);
                                    $('#lbl_Numberofvehicleavailable').text("Currently available vehicle:" + d[0] / d[5]);
                                    $('#hdn_availTicket').val(d[0]);
                                    $('#hdn_availvehicle').val(d[0] / d[5]);
                                    //$('#lbl_FeeTigerProject').text("Currently available tickets: " + d[1]);
                                    //$('#hdn_FeeTigerProject').val(d[1]);
                                    //$('#lbl_FeeSurcharge').text("Currently available tickets: " + d[2]);
                                    //$('#hdn_FeeSurcharge').val(d[2]);
                                }
                            },
                            traditional: true,
                            error: function (data) { console.log(data) }
                        });
                    }

                }
                document.getElementById("errorShift").style.display = 'none';
            }
            else {
                $(this).val(shift);
                alert('You can not change the shift. Please delete your member entry.');
                return false;
            }
        });


        $("#ddl_vehicle").bind("change", function () {

            var vehicle = $("#ddl_vehicle option:selected").val();
            if (!vehicle) { vehicle = 0; }
            var placeID = $("#ddl_place").val();
            var shiftTime = $("#ddl_Shift").val();
            var Zone = $('#ddl_Zone').val();
            if (!Zone) { Zone = 0; }
            var arrivalDate = $("#txt_dateofarrival").val();
            var values = {
                PlaceID: placeID,
                ArrivalDate: arrivalDate,
                ShiftTime: shiftTime,
                Zone: Zone,
                vehicleID: vehicle
            };
            if ($("#ddl_vehicle option:selected").text() != '--Select--') {
                $.ajax({
                    type: 'POST',
                    headers: {
                        __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                    },
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    url: RootURl + 'BookOnlineTicket/CheckTicketAvailabilityForVIPSeatsOnlineBooking',
                    success: function (data) {
                        var d = data.strStatus.split('#');


                        if (d[0] != '0') {

                            if (d[3] > 0) {
                                //Uploder FIles VIp Case Only
                                $(".uploaderfiles").css("display", "block");
                            }
                            else {
                                $(".uploaderfiles").css("display", "none");
                            }
                            //END

                            $('#lbl_NumberofMembersavailable').text("Currently available seats: " + d[0]);
                            $('#lbl_Numberofvehicleavailable').text("Currently available vehicle: " + d[0] / d[5]);
                            $('#hdn_availTicket').val(d[0]);
                            //$('#hdn_availvehicle').val(d[0] / d[5]);
                            if (d[6] == "V") {
                                $('#lbl_Numberofvehicleavailable').val(d[0] / d[5]);
                                $('#lbl_Numberofvehicleavailable').css("display", "block");
                            }
                            else {
                                $('#lbl_Numberofvehicleavailable').css("display", "none");
                            }
                            //$('#lbl_FeePerMember').text("Vehicle Fees Per Member: " + d[1]);
                            //$('#lbl_ExtraAmount').text("Additional Amount: " + d[2]);


                            var openforonlineuser = d[4];

                            $('#hfMemberDetailGrid').val(openforonlineuser);
                            if (openforonlineuser == "True") {
                                $('#dvMemberInfo').html('');
                                $('#tblMemberInfo,#hdMember,#hdmessage,#hdmessageGST').hide();
                                $('#dvMemberInfo').load(RootURl + "BookOnlineTicket/_MemberDetailOnlineBooking?vehicleCatID=" + vehicle + "&placeID=" + placeID + "&ShiftType=" + shiftTime + "");
                            }
                            else {
                                var rowcount = parseInt(d[5]);
                                $('#dvMemberInfo').html('');
                                $('#dvMemberInfo').load(RootURl + "BookOnlineTicket/MemberInfoOnlineBooking?rowcount=" + rowcount +"&Is_PNR_NO=" + 0 + "&Is_Seat_NO=" +0 + "&Is_Room_No=" + 0);

                            }
                            $('.MemberName,.MemberIdNo,.MemberFees,.TotalBoardingFee,.BoardingVehicleFeeGSTPercentage').val('');
                            $('.MemberGender,.MemberNationality,.MemberIdType,.MemberCameraFees,.MemberTotalCamera').val(0);
                        }
                        else {
                            $('#lbl_NumberofMembersavailable').text("Currently available tickets: " + d[0]);
                            $('#lbl_Numberofvehicleavailable').text("Currently available vehicle:" + d[0] / d[5]);
                            $('#hdn_availTicket').val(d[0]);
                            $('#hdn_availvehicle').val(d[0] / d[5]);
                            $('#lbl_FeePerMember').text('');
                            for (var i = 0; i < 20; i++) {
                                var row = 'trRow' + i;
                                $('#' + row).hide();
                            }
                            alert('Ticket not avaliable');
                            return false;
                        }
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }
        });


        //$(".MemberNationality").bind('click focus', function () {
        //    var id = $(this).attr('id');
        //    //var idc= id.slice(-1);
        //    var idc = id.substr(17, 2);
        //    $('#' + id).bind("change", function () {
        //        var val = $(this).val();
        //        //$('#MemberCameraFees' + idc).val('');
        //        //$('#MemberTotalCamera' + idc).val('');
        //        $('#MemberCameraFees' + idc).val(0);
        //        $('#MemberTotalCamera' + idc).val(0);
        //        $('#MemberIdNo' + idc).val('');
        //        if (val == '1') {
        //            $('#MemberIdType' + idc).empty();
        //            $('#MemberIdType' + idc).append('<option value="' + 0 + '">' + "--Select--" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 1 + '">' + "Passport" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 2 + '">' + "Aadhar" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 3 + '">' + "Driving Licence" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 4 + '">' + "Voter ID" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 5 + '">' + "PAN Card" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 6 + '">' + "Office ID" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 7 + '">' + "Student ID" + '</option>');
        //            $('#MemberIdType' + idc).val('0');
        //        }
        //        else if (val == '2') {
        //            $('#MemberIdType' + idc).empty();
        //            $('#MemberIdType' + idc).append('<option value="' + 0 + '">' + "--Select--" + '</option>');
        //            $('#MemberIdType' + idc).append('<option value="' + 1 + '">' + "Passport" + '</option>');
        //            $('#MemberIdType' + idc).val('1');
        //        }
        //        FeePerMember(idc, val);
        //    });
        //});
        //$(".MemberIdNo").bind('click focus', function (e) {
        //    var id = $(this).attr('id');
        //    // var idc = id.slice(-1);
        //    var idc = id.substr(10, 2);
        //    $('#' + id).bind("change", function () {
        //        var val = $(this).val();
        //        for (var i = idc; i >= 1; i--) {

        //            if (val == $('#MemberIdNo' + (i - 1)).val()) {
        //                // alert('Id cannot same with previous member');
        //                $('#' + id).val('');
        //                $('#' + id).focus();
        //                e.preventDefault();
        //                return false;
        //            }
        //            else {
        //            }
        //        }
        //    });
        //});
        //$(".MemberTotalCamera").bind('click focus', function (e) {
        //    var id = $(this).attr('id');
        //    //var idc = id.slice(-1);
        //    var idc = id.substr(17, 2);
        //    FeePerCamera(idc, $('#MemberNationality' + idc).val());
        //    $('#' + id).bind("change", function () {
        //        var CamerafeesPerMember = $(this).val();
        //        if (CamerafeesPerMember != '') {
        //            var camfees = (parseInt($('#hdFeesCamera').val()) * parseInt(CamerafeesPerMember));
        //            $('#MemberCameraFees' + idc).val(camfees);
        //        }
        //        else {
        //            $('#MemberCameraFees' + idc).val(0);
        //        }
        //    });
        //});



        $("#ddl_Accomo").bind("change", function () {
            var values = {
                PlaceID: $("#ddl_place").val(),
                ArrivalDate: $("#txt_dateofarrival").val(),
                AccomoID: $("#ddl_Accomo").val()
            };
            if ($("#ddl_Accomo option:selected").text() != '--Select--') {

                $.ajax({
                    type: 'POST',
                    headers: {
                        __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                    },
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(values),
                    url: RootURl + 'TicketBooking/SelectAccomoFee',
                    success: function (data) {
                        $.each(data, function (i, items) {
                            $('#lbl_PerroomCharge').text("Fees per room: " + items.RoomCharge);
                            $('#lbl_roomAvail').text("No of rooms available: " + items.RoomAvailability);
                            $('#hdn_perRoomRate').val(items.RoomCharge);
                            $('#hdn_roomAvail').val(items.RoomAvailability);
                        });
                    },
                    traditional: true,
                    error: function (data) { console.log(data) }
                });
            }

        });
        $("#txt_Totalseat").change(function () {
            var tktToBook = $("#txt_NoOfTicket").val();
            var noOfSafari = $("#txt_Totalseat").val();
            var availSafari = $('#hdn_vehicleSeatAvailable').val();
            if (!noOfSafari) { noOfSafari = 0; }
            if (!availSafari) { availSafari = 0; }

            if (parseInt(noOfSafari) > parseInt(tktToBook)) {
                alert('You can book only ' + tktToBook + ' seat.')
                $("#txt_Totalseat").val(tktToBook);
                return false;
            }
            if (parseInt(availSafari) < parseInt(noOfSafari)) {
                alert('only ' + availSafari + ' seat available.')
                $("#txt_Totalseat").val('');
                return false;
            }
        });
        $("#txt_Totalroom").change(function () {
            var room = $("#txt_Totalroom").val();
            var availRoom = $('#hdn_roomAvail').val();
            if (!room) { room = 0; }
            if (!availRoom) { availRoom = 0; }
            if (availRoom < room) {
                alert('only ' + availRoom + ' room available.')
                $("#txt_Totalroom").val('');
            }
        });

        $('#ddl_Quota').change(function () {
            var text = $('#ddl_Quota option:selected').text();
            var s = text.split('(')[1].split(')')[0].split(' ')[0].trim();
            if (s == "0") {
                alert("No seats available in this quota.please select another quota.");
                $(this).val(0);
                return false;
            }

        });

        $('#btn_VerifySubmit').click(function (e) {
            if ($('#ddl_place').val() == '' || $('#ddl_place').val() == '0') {
                document.getElementById("errorPlace").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_place").offset().top }, 600);
                return false;
            }
            if (($('#ddl_Quota').val() == '' || $('#ddl_Quota').val() == '0') && placeId == 62) {
                document.getElementById("errorQuota").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Quota").offset().top }, 600);
                return false;
            }
            if (($('#ddl_Zone').val() == '' || $('#ddl_Zone').val() == '0') && $('#hdZone').val() == 'F') {
                document.getElementById("errorZone").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Zone").offset().top }, 600);
                return false;
            }
            if ($('#txt_dateofarrival').val() == '' || $('#txt_dateofarrival').val() == '0') {
                document.getElementById("errorDate").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#txt_dateofarrival").offset().top }, 600);
                return false;
            }
            if ($('#ddl_Shift').val() == '' || $('#ddl_Shift').val() == '0') {
                document.getElementById("errorShift").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Shift").offset().top }, 600);
                return false;
            }
            if (($('#ddl_vehicle').val() == '' || $('#ddl_vehicle').val() == '0') && $('#hdnSafari').val() == 'F') {
                document.getElementById("errorVehicle").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_vehicle").offset().top }, 600);
                return false;
            }
            if ($('#txt_OldRequestID').val() == null || $('#txt_OldRequestID').val() == '') {
                document.getElementById("errorOldRequestID").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#errorOldRequestID").offset().top }, 600);
                return false;
            }
            if ($('#txt_OldRequestIDSecound').val() == null || $('#txt_OldRequestIDSecound').val() == '') {
                document.getElementById("errorOldRequestIDSecound").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#errorOldRequestIDSecound").offset().top }, 600);
                return false;
            }

            if ($('#txt_OldRequestIDSecound').val().toLowerCase() == $('#txt_OldRequestID').val().toLowerCase()) {
                alert("Both request IDs must be unique.")
                return false;
            }

            if ($('#txt_OldIDProof').val() == null || $('#txt_OldIDProof').val() == '') {
                document.getElementById("errorOldIDProof").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#errorOldIDProof").offset().top }, 600);
                return false;
            }

            var values = {
                placeID: $("#ddl_place").val(),
                ArrivalDate: $("#txt_dateofarrival").val(),
                OldRequestID: $("#txt_OldRequestID").val(),
                OldRequestIDSecound: $("#txt_OldRequestIDSecound").val(),
                OldIdProof: $("#txt_OldIDProof").val()
            };
            $.ajax({
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(values),
                url: RootURl + 'BookOnlineTicket/CheckPreviousOnlineBooking',
                success: function (dataval) {
                    console.log(dataval);
                    if (dataval != null) {
                        if (dataval.status == 0) {
                            $("#btn-cont1").css("display", "none");
                            alert(dataval.msg);
                           
                        }
                        else if (dataval.Name == null) {
                            $("#btn-cont1").css("display", "none");
                            alert(dataval.msg);
                            
                        }
                        else {
                            $('#membertablerequest').html("");
                            $('#membertablerequest').append('<tr><td>' + dataval.Name + '</td><td>' + dataval.Gender + '</td><td>' + dataval.IDType + '</td><td>' + dataval.IDNo + '</td></tr>');
                            $("#btn-cont1").css("display", "block");
                        }
                    }
                },
                traditional: true,
                error: function (dataval) { console.log(dataval) }
            });
        });


        $('#btn_Submit').click(function (e) {


            if (($("#uploderVIp").val() == null || $("#uploderVIp").val() == '' || $("#uploderVIp").val() == 'undefined') && $(".uploaderfiles").attr('style') == 'display: block;') {
                $('#errordiv21').html("Upload file mandatory!" + "<i class='fa fa-times fa-fw' style='float: right;padding: 2px;'></i>");
                $('#uploderVIp').focus();
                return false;
            }

            if ($('#ddl_place').val() == '' || $('#ddl_place').val() == '0') {
                document.getElementById("errorPlace").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_place").offset().top }, 600);
                return false;
            }
            if (($('#ddl_Quota').val() == '' || $('#ddl_Quota').val() == '0') && placeId == 62) {
                document.getElementById("errorQuota").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Quota").offset().top }, 600);
                return false;
            }
            if (($('#ddl_Zone').val() == '' || $('#ddl_Zone').val() == '0') && $('#hdZone').val() == 'F') {
                document.getElementById("errorZone").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Zone").offset().top }, 600);
                return false;
            }
            if ($('#txt_dateofarrival').val() == '' || $('#txt_dateofarrival').val() == '0') {
                document.getElementById("errorDate").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#txt_dateofarrival").offset().top }, 600);
                return false;
            }
            if ($('#ddl_Shift').val() == '' || $('#ddl_Shift').val() == '0') {
                document.getElementById("errorShift").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_Shift").offset().top }, 600);
                return false;
            }
            if (($('#ddl_vehicle').val() == '' || $('#ddl_vehicle').val() == '0') && $('#hdnSafari').val() == 'F') {
                document.getElementById("errorVehicle").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#ddl_vehicle").offset().top }, 600);
                return false;
            }
            if ($('#txt_OldRequestID').val() == null || $('#txt_OldRequestID').val() == '') {
                document.getElementById("errorOldRequestID").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#errorOldRequestID").offset().top }, 600);
                return false;
            }
            if ($('#txt_OldRequestIDSecound').val() == null || $('#txt_OldRequestIDSecound').val() == '') {
                document.getElementById("errorOldRequestIDSecound").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#errorOldRequestIDSecound").offset().top }, 600);
                return false;
            }

            if ($('#txt_OldRequestIDSecound').val().toLowerCase() == $('#txt_OldRequestID').val().toLowerCase()) {
                alert("Both request IDs must be unique.")
                return false;
            }

            if ($('#txt_OldIDProof').val() == null || $('#txt_OldIDProof').val() == '') {
                document.getElementById("errorOldIDProof").style.display = 'block';
                $('html, body').animate({ scrollTop: $("#errorOldIDProof").offset().top }, 600);
                return false;
            }



            if ($("#ddl_vehicle option:selected").text() == 'Gypsy') {
                var length = 6;
            }
            else {
                var length = 20;
            }



            var MemberDetailGrid = $('#hfMemberDetailGrid').val();
            if (MemberDetailGrid == "True") {
                var validated = true;
                var recordCount = parseInt(0);
                $('#tblMemberInfoGroup tbody tr').each(function () {

                    var name = $(this).find('td').eq(2).find('input').val();
                    var totalno = $(this).find('td').eq(3).find('input').val();
                    if (name != "" && totalno != "") {
                        recordCount++;
                    }
                });
                $('#tblMemberInfoGroup tbody tr').each(function () {

                    var name = $(this).find('td').eq(2).find('input').val();
                    var totalno = $(this).find('td').eq(3).find('input').val();
                    if (totalno != "")
                        totalno = parseInt(totalno);
                    var idtype = $(this).find('td').eq(4).find('select').val();
                    var idno = $(this).find('td').eq(5).find('input').val();

                    var IdtypeId = $(this).find('td').eq(4).find('select').attr('id');
                    var NameId = $(this).find('td').eq(2).find('input').attr('id');
                    var IdNoId = $(this).find('td').eq(5).find('input').attr('id');
                    var totalNoId = $(this).find('td').eq(3).find('input').attr('id');
                    if (recordCount == 0) {
                        alert("Please enter at least one record.")
                        validated = false;
                        return false;
                    }
                    else {

                        if (name != "" && (totalno == 0 || totalno == "")) {
                            alert("Please enter no of persons");
                            $('#' + totalNoId).focus();
                            validated = false;
                            return false;
                        }

                        else if (totalno > 0 && name == "") {
                            alert("Please enter leader name");
                            $('#' + NameId).focus();
                            validated = false;
                            return false;
                        }
                        else if (totalno > 0 && idtype == "") {
                            alert("Please select Id");
                            $('#' + IdtypeId).focus();
                            validated = false;
                            return false;
                        }
                        else if (totalno > 0 && idno == "") {
                            alert("Please enter Id No");
                            $('#' + IdNoId).focus();
                            validated = false;
                            return false;
                        }
                    }
                });
                return validated;
            }
            else {
                for (var i = 0; i < length; i++) {
                    if (i == 0) {
                        if ($('#MemberName' + i).val() == '' && $('#MemberGender' + i).val() == 0 && $('#MemberNationality' + i).val() == 0 && $('#MemberIdType' + i).val() == 0 && $('#MemberIdNo' + i).val() == '') {
                            alert('Enter member details');
                            $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                            $('.MemberName,.MemberIdNo,.MemberTotalCamera').val('');
                            $('.MemberGender,.MemberNationality,.MemberIdType').val(0);
                            e.preventDefault();
                            return false;
                        }
                        else {
                            if ($('#MemberName' + i).val() == '') {
                                alert('Enter Member Name');
                                $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberGender' + i).val() == 0) {
                                alert('Select gender');
                                $('#MemberGender' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberNationality' + i).val() == 0) {
                                alert('Select Nationality');
                                $('#MemberNationality' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberIdType' + i).val() == 0) {
                                alert('select id');
                                $('#MemberIdType' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberIdNo' + i).val() == '') {
                                alert('Enter Member id');
                                $('#MemberIdNo' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            //if ($('#MemberType' + i).val() == 0) {
                            //    alert('Select member type');
                            //    $('#MemberType' + i).focus().css({ 'background-color': 'LightGray' });
                            //    e.preventDefault();
                            //    return false;
                            //}
                            //if ($('#MemberTotalCamera' + i).val() == '') {
                            //    alert('Enter Total Camera');
                            //    $('#MemberTotalCamera' + i).focus().css({ 'background-color': 'LightGray' });
                            //    e.preventDefault();
                            //    return false;
                            //}
                            $('#hdTotalMember').val($('#MemberSLNo' + i).val());
                        }
                    }
                    else {

                        if ($('#MemberName' + i).val() == '' && $('#MemberGender' + i).val() == 0 && $('#MemberNationality' + i).val() == 0 && $('#MemberIdType' + i).val() == 0 && $('#MemberIdNo' + i).val() == '' && ($('#MemberTotalCamera' + i).val() == '' || $('#MemberTotalCamera' + i).val() == '0')) {

                        }
                        else {
                            if ($('#MemberName' + i).val() == '') {
                                alert('Enter Member Name');
                                $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberGender' + i).val() == 0) {
                                alert('Select gender');
                                $('#MemberGender' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberNationality' + i).val() == 0) {
                                alert('Select Nationality');
                                $('#MemberNationality' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberIdType' + i).val() == 0) {
                                alert('select id');
                                $('#MemberIdType' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            if ($('#MemberIdNo' + i).val() == '') {
                                alert('Enter Member id');
                                $('#MemberIdNo' + i).focus().css({ 'background-color': 'LightGray' });
                                e.preventDefault();
                                return false;
                            }
                            //if ($('#MemberType' + i).val() == 0) {
                            //    alert('Select member type');
                            //    $('#MemberType' + i).focus().css({ 'background-color': 'LightGray' });
                            //    e.preventDefault();
                            //    return false;
                            //}
                            //if ($('#MemberTotalCamera' + i).val() == '') {
                            //    alert('Enter Total Camera');
                            //    $('#MemberTotalCamera' + i).focus().css({ 'background-color': 'LightGray' });
                            //    e.preventDefault();
                            //    return false;
                            //}

                            $('#hdTotalMember').val($('#MemberSLNo' + i).val());
                        }
                    }

                }
            }





            if (parseInt($('#hdTotalMember').val(), 10) > 0) {
                var length = parseInt($('#hdTotalMember').val(), 10);
                for (var i = 0; i < length; i++) {
                    if ($('#MemberName' + i).val() == '' && $('#MemberGender' + i).val() == 0 && $('#MemberNationality' + i).val() == 0 && $('#MemberIdType' + i).val() == 0 && $('#MemberIdNo' + i).val() == '' && $('#MemberTotalCamera' + i).val() == '') {
                        $('#MemberName' + i).focus().css({ 'background-color': 'LightGray' });
                        alert('Enter member details continuously');
                        return false;
                    }
                }
            }
            if (parseInt($('#hdn_availTicket').val(), 10) < parseInt($('#hdTotalMember').val(), 10)) {

                alert('You can book only ' + $('#hdn_availTicket').val() + ' ticket');
                return false;
            }
            if ($('#txtInput').val() != '') {
                var status = ValidCaptcha();
                if (status == false) {
                    alert('Invalid captcha');
                    Captcha();
                    $('#txtInput').val('');
                    $('#txtInput').focus();
                    return false;
                }
            }
            else {
                alert('Enter valid captcha');
                $('#txtInput').focus();
                return false;
            }
        });

        $('#btnReset').click(function () {

            //$('.MemberName,.MemberIdNo,.MemberTotalCamera,.MemberFees,.MemberCameraFees').val('');
            $('.MemberName,.MemberIdNo,.MemberFees,').val('');
            $('.MemberGender,.MemberNationality,.MemberIdType,.MemberTotalCamera,.MemberCameraFees').val(0);

        });

        $('#btnCancel').click(function () {

            location.reload(true);
        });

        $('.Print').click(function (e) {

            var $row = jQuery(this).closest('tr');
            var $columns = $row.find('td');
            var id = $(this).parents('tr').find('input[type="hidden"]').val();
            var ticket;
            $.ajax({
                type: 'POST',
                headers: {
                    __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
                },
                url: RootURl + 'BookOnlineTicket/PrintTicket',
                data: { ticketid: id },
                success: function (data) {

                    $("#dvContainer").html(data);

                    var contents = $("#dvContainer").html();
                    var frame1 = $('<iframe />');
                    frame1[0].name = "frame1";
                    //frame1.css({ "position": "absolute", "top": "-1000000px" });
                    $("body").append(frame1);
                    var frameDoc = frame1[0].contentWindow ? frame1[0].contentWindow : frame1[0].contentDocument.document ? frame1[0].contentDocument.document : frame1[0].contentDocument;
                    frameDoc.document.open();
                    //Create a new HTML document.
                    frameDoc.document.write('<html><head><title>E-Ticket - Forest Department Rajasthan </title>');
                    //Append the external CSS file.
                    frameDoc.document.write('<link href="../css/bootstrap.min.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/mobile.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/dashboard/main.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/dashboard/dashboard.css" rel="stylesheet" />');
                    frameDoc.document.write('<link href="../css/dashboard/font-awesome.min.css" rel="stylesheet" />');
                    frameDoc.document.write('</head><body>');
                    //Append the DIV contents.
                    frameDoc.document.write(contents);
                    frameDoc.document.write('</body></html>');
                    frameDoc.document.close();
                    setTimeout(function () {
                        window.frames["frame1"].focus();
                        window.frames["frame1"].print();
                        frame1.remove();
                    }, 500);
                },
                traditional: true,
                error: function (data) { console.log(data) }
            });

            //var aa = "<div class='wrapper'><section class='print-invoice'> <div class='row border-divider'><div class='col-sm-2'>" +
            //           "<a href='#' id='myLogo'><img src='../images/logo.png' width='100' alt='Forest Department, Government of Rajasthan' title='Logo' class=''></a></div>" +
            //          "<div class='col-sm-4 centr'><span class='pdate'>E-Ticket - Rajasthan Wildlife</span></div>" +
            //    	  "<div class='col-sm-4'><span class='pull-right pdate'>Space of QR BAR Code</span></div>" +
            //          "<div class='divider'></div></div> </section></div>";
            e.preventDefault();
        });

    });
</script>
<style>
    .capt {
        background-color: #f8f8f8;
        border-color: #e7e7e7;
        border: 1px solid #e7e7e7;
        width: 240px;
        height: 110px;
        float: left;
    }

    #mainCaptcha {
        position: relative;
        padding-left: 15px;
    }

    #refresh {
        width: 42px;
        height: 26px;
    }

    #txtInput, #Button1 {
        position: relative;
        left: 15px;
    }

    .refrs {
        left: 5px;
        position: relative;
    }

    .capt h1 {
        font-size: 14px;
        padding: 10px 0 5px 15px;
        margin: 0;
    }

    #mainCaptcha {
        margin: 0;
        text-decoration: line-through;
        color: #ccc;
        /*text-shadow: 0px 0 5px rgba(0,0,0,0.5);*/
    }
</style>
<script type="text/javascript">

    function CurrentShift() {

        var hours = new Date().getHours();
        var minutes = new Date().getMinutes();
        var ampm = hours >= 12 ? 'pm' : 'am';
        hours = hours % 12;
        hours = hours ? hours : 12; // the hour '0' should be '12'
        minutes = minutes < 1 ? '0' + minutes : minutes;
        var placeID = $("#ddl_place").val();
        var Zone = $('#ddl_Zone').val();
        if (!Zone) { Zone = 0; }
        var values = {
            PlaceID: placeID,
            Zone: Zone
        };
        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/BindShiftByPlaceZoneOnlineBooking',
            success: function (data) {

                $("#txt_dateofarrival").datepicker("destroy");
                $(".datefield").datepicker({ minDate: data.list3, maxDate: data.list3, dateFormat: 'dd/mm/yy', changeYear: true, onClose: function (dateText, inst) { $("[id$=auto]").focus(); } });
                if ($('#hdnDeptKiosk').val() != '') {
                    $("#txt_dateofarrival").datepicker("setDate", data.list3);
                }
                $("#ddl_Shift").append('<option value="' + 0 + '">' + "--Select--" + '</option>');

                for (var x = 0; x < data.list1.length; x++) {

                    if (data.list1[x].isFullDay == 'True') {
                        $('#ddl_Shift').empty();
                        $("#ddl_Shift").append('<option value="' + 3 + '">' + "Full Day" + '</option>');
                    }
                    if (data.list1[x].isMorning == 'True') {
                        $('#ddl_Shift').empty();
                        $("#ddl_Shift").append('<option value="' + 1 + '">' + "Morning" + '</option>');

                    }
                    if (data.list1[x].isEvening == 'True') {
                        $('#ddl_Shift').empty();
                        $("#ddl_Shift").append('<option value="' + 2 + '">' + "Evening" + '</option>');
                    }

                }
                $('#ddl_Accomo').empty();
                $("#ddl_Accomo").append('<option value="' + 0 + '">' + "--Select--" + '</option>');
                for (var i = 0; i < data.list2.length; i++) {
                    $("#ddl_Accomo").append('<option value="' + data.list2[i].Value + '">' + data.list2[i].Text + '</option>');
                }
                if ($('#hdnDeptKiosk').val() != '') {
                    Vichelcategory();
                }

                // });
            },
            traditional: true,
            error: function (data) { console.log(data) }
        });

    }

    function getDateDiff(date1, date2, interval) {
        var second = 1000,
            minute = second * 60,
            hour = minute * 60,
            day = hour * 24,
            week = day * 7;
        date1 = new Date(date1).getTime();
        date2 = (date2 == 'now') ? new Date().getTime() : new Date(date2).getTime();
        var timediff = date2 - date1;
        if (isNaN(timediff)) return NaN;
        switch (interval) {
            case "years":
                return date2.getFullYear() - date1.getFullYear();
            case "months":
                return ((date2.getFullYear() * 12 + date2.getMonth()) - (date1.getFullYear() * 12 + date1.getMonth()));
            case "weeks":
                return Math.floor(timediff / week);
            case "days":
                return Math.floor(timediff / day);
            case "hours":
                return Math.floor(timediff / hour);
            case "minutes":
                return Math.floor(timediff / minute);
            case "seconds":
                return Math.floor(timediff / second);
            default:
                return undefined;
        }
    }


    function AccommodationRequired() {
        if (document.getElementById('rbl_Accommodationyes').checked) {
            document.getElementById('IsAccommodation').style.display = 'block';
        }
        else document.getElementById('IsAccommodation').style.display = 'none';
    }

    function Vichelcategory() {
        var placeID = $("#ddl_place").val();
        var Zone = $('#ddl_Zone').val();
        var ShiftType = $('#ddl_Shift').val();
        if (!Zone) { Zone = 0; }
        $('#ddl_vehicle').empty();
        var values = {
            VehicleCatID: 1,
            PlaceID: placeID,
            Zone: Zone,
            ShiftType: ShiftType
        };
        $.ajax({
            type: 'POST',
            headers: {
                __RequestVerificationToken: $('[name= "__RequestVerificationToken"]').val(),
            },
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(values),
            url: RootURl + 'BookOnlineTicket/vehicleByCategoryForVIPSeatOnlineBooking',
            success: function (data) {
                $.each(data, function (i, items) {
                    $("#ddl_vehicle").append('<option value="' + items.Value + '">' + items.Text + '</option>');
                });
            },
            traditional: true,
            error: function (data) { console.log(data) }
        });
    }

    //function FeePerMember(id, Nationality) {
    //    $('#hdFeesCamera').val(0);
    //    // var districtID = $("#ddl_Districts").val();
    //    var placeID = $("#ddl_place").val();
    //    var nationality = Nationality;
    //    var vehicle = $("#ddl_vehicle").val();
    //    var ShiftType = $("#ddl_Shift").val();

    //    var values = {
    //        PlaceID: placeID,
    //        Nationality: nationality,
    //        MemberType: 2,
    //        ShiftType: ShiftType,
    //        vehicleID: vehicle
    //    };
    //    $.ajax({
    //        type: 'POST',
    //        contentType: 'application/json; charset=utf-8',
    //        data: JSON.stringify(values),
    //        url: RootURl + 'BookOnlineTicket/SelectFeeOnlineBooking',
    //        success: function (data) {
    //            $.each(data, function (i, items) {
    //                $('#MemberFees' + id).val(items.TotalPerMemberFees);
    //                $('#hdFeesCamera').val(items.TotalPerMemberCameraFees);
    //                $('#MemberCameraFees' + id).val(0);
    //                $('#MemberFees_TigerProject' + id).val(items.MemberFees_TigerProject);
    //                $('#MemberFees_Surcharge' + id).val(items.MemberFees_Surcharge);
    //                $('#CameraFees_TigerProject' + id).val(items.CameraFees_TigerProject);
    //                $('#CameraFees_Surcharge' + id).val(items.CameraFees_Surcharge);
    //                $('#TRDF' + id).val(items.TRDF);

    //                $('#BoardingVehicleFee' + id).val(items.BoardingVehicleFee);
    //                $('#BoardingGuideFee' + id).val(items.BoardingGuideFee);
    //                $('#TotalBoardingFee' + id).val(items.TotalBoardingFee);

    //                $('#BoardingVehicleFeeGSTPercentage' + id).val(items.BoardingVehicleFeeGSTPercentage);
    //                $('#BoardingVehicleFeeGSTAmount' + id).val(items.BoardingVehicleFeeGSTAmount);
    //                $('#BoardingGuideFeeGSTPercentage' + id).val(items.BoardingGuideFeeGSTPercentage);
    //                $('#BoardingGuideFeeGSTAmount' + id).val(items.BoardingGuideFeeGSTAmount);

    //                $('#hdn_memberfee').val(items.TotalPerMemberFees);
    //                $('#hdn_camerafee').val(items.TotalPerMemberCameraFees);

    //                $('#hdGSTmessage').html(items.GSTMessage);
    //                $('#Vehicle_TRDF' + id).val(items.Vehicle_TRDF);
    //                $('#GuidFee_TRDF' + id).val(items.GuidFee_TRDF);

    //            });
    //        },
    //        traditional: true,
    //        error: function (data) { console.log(data) }
    //    });
    //}

    //function FeePerCamera(id, Nationality) {
    //    // $('#hdFeesCamera').val(0);

    //    var placeID = $("#ddl_place").val();
    //    var nationality = Nationality;

    //    var vehicle = $("#ddl_vehicle").val();

    //    var values = {
    //        PlaceID: placeID,
    //        Nationality: nationality,
    //        MemberType: 2,
    //        vehicleID: vehicle
    //    };

    //    $.ajax({
    //        type: 'POST',
    //        contentType: 'application/json; charset=utf-8',
    //        data: JSON.stringify(values),
    //        url: RootURl + 'BookOnlineTicket/SelectFee',
    //        success: function (data) {
    //            $.each(data, function (i, items) {
    //                $('#MemberFees' + id).val(items.TotalPerMemberFees);
    //                $('#hdFeesCamera').val(items.TotalPerMemberCameraFees);
    //                // $('#MemberCameraFees' + id).val(0);
    //                $('#MemberFees_TigerProject' + id).val(items.MemberFees_TigerProject);
    //                $('#MemberFees_Surcharge' + id).val(items.MemberFees_Surcharge);
    //                $('#CameraFees_TigerProject' + id).val(items.CameraFees_TigerProject);
    //                $('#CameraFees_Surcharge' + id).val(items.CameraFees_Surcharge);
    //                $('#TRDF' + id).val(items.TRDF);

    //                $('#BoardingVehicleFee' + id).val(items.BoardingVehicleFee);
    //                $('#BoardingGuideFee' + id).val(items.BoardingGuideFee);
    //                $('#TotalBoardingFee' + id).val(items.TotalBoardingFee);

    //                $('#BoardingVehicleFeeGSTPercentage' + id).val(items.BoardingVehicleFeeGSTPercentage);
    //                $('#BoardingVehicleFeeGSTAmount' + id).val(items.BoardingVehicleFeeGSTAmount);
    //                $('#BoardingGuideFeeGSTPercentage' + id).val(items.BoardingGuideFeeGSTPercentage);
    //                $('#BoardingGuideFeeGSTAmount' + id).val(items.BoardingGuideFeeGSTAmount);

    //                $('#hdn_memberfee').val(items.TotalPerMemberFees);
    //                $('#hdn_camerafee').val(items.TotalPerMemberCameraFees);

    //                $('#hdGSTmessage').html(items.GSTMessage);
    //                $('#Vehicle_TRDF' + id).val(items.Vehicle_TRDF);
    //                $('#GuidFee_TRDF' + id).val(items.GuidFee_TRDF);

    //            });
    //        },
    //        traditional: true,
    //        error: function (data) { console.log(data) }
    //    });
    //}


    function Captcha() {
        var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
            'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
            '0', '1', '2', '3', '4', '5', '6', '7', '8', '9');
        var i;
        for (i = 0; i < 6; i++) {
            var a = alpha[Math.floor(Math.random() * alpha.length)];
            var b = alpha[Math.floor(Math.random() * alpha.length)];
            var c = alpha[Math.floor(Math.random() * alpha.length)];
            var d = alpha[Math.floor(Math.random() * alpha.length)];
            var e = alpha[Math.floor(Math.random() * alpha.length)];
            var f = alpha[Math.floor(Math.random() * alpha.length)];
            var g = alpha[Math.floor(Math.random() * alpha.length)];
        }
        var code = a + ' ' + b + ' ' + ' ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;
        if ($("#hdnDeptKioskStatus").val() == "False") {
            document.getElementById("mainCaptcha").innerHTML = code
            document.getElementById("mainCaptcha").value = code
        }
    }
    function ValidCaptcha() {
        var string1 = removeSpaces(document.getElementById('mainCaptcha').value);
        var string2 = removeSpaces(document.getElementById('txtInput').value);
        if (string1 == string2) {
            return true;
        } else {
            return false;
        }
    }
    function removeSpaces(string) {
        return string.split(' ').join('');
    }
</script>

<script src="~/js/jquery.countdown.js"></script>
<script type="text/javascript">
    @*$(document).ready(function () {

        var CurrentDate = '@ViewBag.currentDate';
        alert(CurrentDate);
        //var CurrentDate = '2018/10/08';

        $("#getting-started")
        .countdown(CurrentDate, function (event) {
            $(this).text(
              event.strftime('Booking will start after %H:%M:%S hrs')
            );
        });
    });*@

    //Developed by Rajveer
    $(document).ready(function () {

        var CurrentDate = '@ViewBag.currentDate';
        // Set the date we're counting down to
        var countDownDate = new Date(CurrentDate + " 10:00:00").getTime();
        // Set the date we're counting down to
        //var countDownDate = new Date("Oct 8, 2018 10:00:00").getTime();

        // Update the count down every 1 second
        var x = setInterval(function () {

            // Get todays date and time
            var now = new Date().getTime();

            // Find the distance between now and the count down date
            var distance = countDownDate - now;

            // Time calculations for days, hours, minutes and seconds
            var days = Math.floor(distance / (1000 * 60 * 60 * 24));
            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            // Display the result in the element with id="demo"
            document.getElementById("getting-started").innerHTML = hours + "h "
            + minutes + "m " + seconds + "s ";

            // If the count down is finished, write some text
            if (distance < 0) {
                clearInterval(x);
                document.getElementById("getting-started").innerHTML = "EXPIRED";
            }
        }, 1000);
    });
</script>


<div style="display:none" id="dvContainer">

</div>

<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">
        <input type="hidden" id="BookingPopUpStatus" value="@ViewData["PopUpContentStatus"]" />
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4><i class="fa-fw"></i>Online Booking Information</h4>
            </div>
            <div class="modal-body" style="padding:40px 50px;">
                @if (ViewData["PopUpContent"] != null)
                {
                    @Html.Raw(ViewData["PopUpContent"])
                }

            </div>
            <div class="modal-footer">

            </div>
        </div>

    </div>
</div>


<div class="modal fade" id="myModal_TicketRefund" role="dialog">

    <div class="modal-dialog">


        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4><i class="fa-fw"></i>Ticket Refund Policy(For 18th March to 30th June 2020 Visitors)</h4>
            </div>
            <div class="modal-body">
                <ul class="a">
                    <li>As per the policy, if the booking cancelled by the guest, then the full amount of charged fees excluding emitra & bank charges will be refunded.</li>
                    <li>पॉलिसी के अनुसार, आगंतुक के द्वारा बुकिंग निरस्त करने पर पूरी जमा राशि ,ई-मित्र और बैंक शुल्क को छोड़कर वापस कर दी जाएगी।</li>
                    <li>Before proceeding please keep ready the required bank details i.e. Bank Name, Branch Name, IFSC Code, Account Type (Saving) & Account No. etc.</li>
                </ul>
            </div>
            <div class="modal-footer" style="clear:both; padding-left: 50px;">
                <div id="btn" class="col-lg-12">
                    <a class="btn btn-danger" target="_blank" id="btn_Refund" href='javascript:void(0)'>
                        Refund
                    </a>
                </div>

            </div>
        </div>

    </div>


</div>


<div class="modal fade" id="myModalRefund" role="dialog">

    <div class="modal-dialog">

        <input type="hidden" id="TicketID" />
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header" style="padding:35px 50px;">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4><i class="fa-fw"></i>Ticket Cancellation Information</h4>
            </div>
            <div class="modal-body" style="padding:40px 50px;">

                <ul class="a">
                    <li> As per the policy, if you cancel the booking then 50% amount of charged fees excluding emitra & bank charges will be refunded.</li>
                    <li>Before proceeding please keep ready the required bank details i.e. Bank Name, Branch Name, IFSC Code, Account Type (Saving) & Account No. etc.</li>

                </ul>
            </div>
            <div class="modal-footer" style="clear:both">
                <div id="btn" class="col-lg-12">
                    <button type="submit" class="btn btn-success" value="Save" id="btn_submit1">
                        Confirm
                    </button>
                    <button type="button" id="btn_cancel" name="Command" value="Cancel" class="btn btn-danger" data-dismiss="modal">
                        Exit
                    </button>
                </div>
            </div>
        </div>

    </div>


</div>






@if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"]) == "False")
{
    <input type="hidden" value="" id="hdnDeptKiosk" />

}
else
{
    <input type="hidden" value="@Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"])" id="hdnDeptKiosk" />

}

<input type="hidden" value="@Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"])" id="hdnDeptKioskStatus" />
<input type="hidden" id="hdTotalMember" />
<input type="hidden" id="hdZone" />
<input type="hidden" id="hdFeesCamera" />
@*<input type="hidden" id="NEWDATEOPEN"  value="@ViewBag.NEWDATEOPEN"/>
    <input type="hidden" id="CurrentDate" value="@ViewBag.CurrentDate" />*@

<div id="page-wrapper-inn">
    @if (TempData["datevalidation"] != null)
    {
        <script type="text/javascript" language="javascript">
            alert('@TempData["datevalidation"]');
        </script>
    }
    @if (TempData["RowCheck"] != null)
    {
        <script type="text/javascript" language="javascript">
            alert('@TempData["RowCheck"]');
        </script>
    }
    <div class="col-lg-12 pad">
        <h1 class="page-header">@Session["PlaceLbl"]  Wildlife Ticket Booking (Half Day / Full Day)</h1>


        <div style="color: #337ab7; float: right; margin-right: 30px; display: none; " id="getting-started"></div>
        @*<span style="color: #337ab7; float: right; margin-right: 3px; " id="PlaceAndTime"></span>*@
        <input type="hidden" id="hfMemberDetailGrid" />
        <div class="panel-heading">
            <span style="color:red;">
                <i class="bg-light-blue" style="color:ButtonText">Your page Session will be Expired in 10 minutes.</i>
            </span>
        </div>
    </div>

    <div class="panel-heading">
        @*<marquee id="test" style="behavior=" scroll" direction="left" scrolldelay="100" scrollamount="10" onmouseover="this.stop();" onmouseout="this.start();"> *Guest may book online tickets for Keoladeo National Park, Bharatpur even for current date.</marquee>*@
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading"> <span style="color:red;">* Mandatory field(s) to fill.</span> <span style="float:right" title="Help doc for onlinebooking"><i class="bg-light-blue" style="color:ButtonText"><a href="~/Help/User_Manual_Online%20_Ticket_Booking.pdf" target="_blank">Help doc for onlinebooking</a> </i>     </span> </div>
                @using (Html.BeginForm("FinalSubmitForOnlineBookingFD", "BookOnlineTicket", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="panel-body">


                        @Html.AntiForgeryToken()

                        <div class="col-lg-6">
                            <div class="form-group un-bold">
                                <label>Select Protected Area: <span class="mandatory">*</span></label>
                                @Html.DropDownList("ddl_place", (IEnumerable<SelectListItem>)ViewBag.Place, "--Select--", new { id = "ddl_place", name = "ddl_place", @class = "form-control" })
                                <span id="errorPlace" style="color: Red; display: none" class="alert-danger1">* Please Select Protected Area.</span>
                            </div>
                        </div>
                        <div class="col-lg-6 ddl_Quota_me" style="display:none">
                            <div class="form-group un-bold">
                                <label>Select Quota: <span class="mandatory">*</span></label>
                                @Html.DropDownList("ddlQuota", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { id = "ddl_Quota", name = "ddl_Quota", @class = "form-control" })
                                <span id="errorQuota" style="color: Red; display: none" class="alert-danger1">* Please Select Quota.</span>
                            </div>
                        </div>
                        <div class="col-lg-6 zone">
                            <div class="form-group un-bold">
                                <label>Select Zone: <span class="mandatory">*</span></label>
                                @Html.DropDownList("ddl_Zone", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @id = "ddl_Zone", @name = "ddl_Zone", @class = "form-control" })
                                <span id="errorZone" style="color: Red; display: none" class="alert-danger1">* Please Select Zone.</span>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group un-bold">
                                <label>Date of Visit:<span class="mandatory">*</span></label>
                                <input type="text" class="form-control datefield" id="txt_dateofarrival" name="ArrivalDate" title="Enter the date of visit" readonly="readonly" />
                                <span id="errorDate" style="color: Red; display: none" class="alert-danger1">* Please Select Date.</span>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <div class="form-group un-bold">
                                <label>Choose Shift: <span class="mandatory">*</span></label>
                                <select class="form-control" id="ddl_Shift" name="ddl_Shift"></select>
                                <span id="errorShift" style="color: Red; display: none" class="alert-danger1">* Please Select Shift.</span>
                            </div>
                        </div>
                        <div id="IsSafari" style="display:none" class="col-lg-6 un-bold">
                            <input type="hidden" id="hdnSafari" name="hdnSafari" />
                            <div class="form-group">
                                <label>Select Vehicle:</label>
                                @Html.DropDownList("ddl_vehicle", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control" })
                                <span id="errorVehicle" style="color: Red; display: none" class="alert-danger1">* Please Select Vehicle.</span>
                                <label id="lbl_feePerVehicle" for="email"></label>
                                <input type="hidden" id="hdn_vehiclefee" />
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group un-bold">
                                <label>Previous Request ID:<span class="mandatory">*</span></label>
                                <input type="text" class="form-control" id="txt_OldRequestID" name="OldRequestID" title="Enter the Previous Request ID" />
                                <span id="errorOldRequestID" style="color: Red; display: none" class="alert-danger1">* Please Fill Previous Request ID.</span>
                            </div>
                        </div>


                        <div class="col-lg-12">
                            <div class="col-lg-6">
                                <div class="form-group un-bold">
                                    <label>Previous Request ID:<span class="mandatory">*</span></label>
                                    <input type="text" class="form-control" id="txt_OldRequestIDSecound" name="OldRequestIDSecound" title="Enter the Previous Request ID" />
                                    <span id="errorOldRequestIDSecound" style="color: Red; display: none" class="alert-danger1">* Please Fill Previous Request ID.</span>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="form-group un-bold">
                                    <label>Previous ID Proof:<span class="mandatory">*</span></label>
                                    <input type="text" class="form-control" id="txt_OldIDProof" name="OldIDProof" title="Enter the Previous Request ID" />
                                    <span id="errorOldIDProof" style="color: Red; display: none" class="alert-danger1">* Please Fill Previous ID Proof.</span>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <div class="form-group un-bold">
                                    <label></label>
                                    <button type="button" class="btn btn-success" name="Command" id="btn_VerifySubmit">
                                        Verify
                                    </button>
                                </div>
                            </div>

                        </div>

                        <div class="col-lg-12">

                            <div class="col-lg-6 uploaderfiles" style="display:none">
                                <input type="file" class="form-control common fileToUpload" multiple="multiple" title="Upload Documents" id="uploderVIp" name="fileUpload">
                                <label><span class="spanmark">* Only .jpg /.pdf /.png /.gif file formats are allowed with  max size: 2Mb.</span></label>
                                <div id="errordiv21" style="display:none" class="alert-danger1">Please Upload File</div>

                            </div>
                            <div class="col-lg-6">
                                <div class="form-group un-bold" style="margin-top: 30px;">
                                    <label id="lbl_NumberofMembersavailable" for="email"></label>
                                    <input type="hidden" id="hdn_availTicket" />
                                    <label id="lbl_Numberofvehicleavailable" for="email"></label>
                                    <input type="hidden" id="hdn_availvehicle" />
                                    <label id="lbl_FeePerMember" for="email"></label>
                                    <label id="lbl_ExtraAmount" for="email"></label>
                                    <input type="hidden" id="hdn_FeeTigerProject" />
                                    <input type="hidden" id="hdn_FeeSurcharge" />
                                </div>
                            </div>


                        </div>
                        <div class="col-lg-12">
                            <div>
                                <table id="tblpreviousmember" class="table table-striped table-bordered table-hover">
                                    <thead>
                                        <tr>
                                           
                                            <th>Name</th>
                                            <th>Gender</th>
                                            <th>IDType</th>
                                            <th>IDNo</th>
                                        </tr>
                                    </thead>
                                    <tbody id="membertablerequest">

                                    </tbody>
                                </table>
                            </div>

                        </div>
                        <div class="col-lg-12">

                            <div id="dvMemberInfo">
                            </div>
                            @*@Html.Partial("MemberInfo")*@
                        </div>
                        <div class="col-lg-12" style="display:none" id="divAccomoHead">
                            <label>Accommodation Details</label>
                            <div class="divider"></div>
                        </div>
                        <div class="col-lg-12  un-bold" style="display:none">
                            <label>Is Accommodation Required</label>
                            <form>
                                <input type="radio" id="rbl_Accommodationyes" name="Accommodation" value="Yes" onclick="AccommodationRequired();">Yes
                                <input type="radio" id="rbl_Accommodationno" name="Accommodation" value="No" checked onclick="AccommodationRequired();">No
                            </form>
                        </div>
                        <div id="IsAccommodation" style="display:none">
                            <div class="col-lg-6 un-bold">
                                <div class="form-group">
                                    <label>Select Accommodation Type:</label>
                                    @Html.DropDownList("ddl_Accomo", new SelectList(string.Empty, "Value", "Text"), "--Select--", new { @class = "form-control" })
                                    <label id="lbl_roomAvail" for="email"></label>
                                    <input type="hidden" id="hdn_roomAvail" />
                                </div>

                            </div>
                            <div class="col-lg-6">
                                <div class="form-group un-bold" style="clear:both">
                                    <label>Total Rooms:</label>
                                    <input type="text" class="form-control" id="txt_Totalroom" name="TotalRoom" title="Enter the total number of rooms required for stay"
                                           onkeypress="return isNumberKey(event);" />
                                    <span id="error4" style="color: Red; display: none" class="alert-danger1">* Input digits (0 - 9)</span>
                                    <label id="lbl_PerroomCharge" for="email"></label>
                                    <input type="hidden" id="hdn_perRoomRate" name="RoomCharge" />
                                </div>
                            </div>
                        </div>

                        @if (Convert.ToString(HttpContext.Current.Session["IsDepartmentalKioskUser"]) == "False")
                        {



                            @*<div class="col-lg-12 un-bold" style="clear:both">
                                    <div class="capt">
                                        <h1>Captcha is case sensative</h1>
                                        <h2 id="mainCaptcha">Captcha is case sensative</h2>
                                        <p>
                                            <input type="text" id="txtInput" />
                                            <button type="button" id="refresh" onclick="Captcha();" /><i class="fa fa-refresh fa-spin fa-fw refrs"></i>
                                        </p>


                                    </div>
                                </div>*@
                            <div class="col-lg-12 un-bold" style="clear:both">
                                <div class="capt">
                                    <p>   @Html.MathCaptcha()  <span style="color:red">@TempData["ErrorMessage"]</span> <br /></p>



                                </div>
                            </div>
                            <br /><br />
                        }

                        <div class="col-lg-12"></div>
                        <div class="col-lg-12 un-bold" style="clear:both;margin-top: 115px">
                            <div class="form-group" id="btn-cont1" style="display:none">
                                <label> &nbsp;</label>
                                <button type="submit" class="btn btn-success" name="Command" value="Submit" id="btn_Submit">
                                    Submit
                                </button>
                                <button type="button" id="btnReset" class="btn btn-success">Reset</button>
                                <button type="button" id="btnCancel" class="btn btn-danger">Cancel</button>
                            </div>
                        </div>
                        <div id="tbl" class="table-responsive">
                            <table class="table table-striped table-bordered table-hover" id="tbl_allTicket">
                                <thead>
                                    <tr>

                                        <th>
                                            Booking No.
                                        </th>
                                        <th>
                                            Place Name
                                        </th>
                                        <th>
                                            Total Member
                                        </th>
                                        <th>
                                            Arrival Date
                                        </th>
                                        <th>
                                            Paid Amount
                                        </th>


                                        <th>
                                            Action
                                        </th>

                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in ViewData["ticketlist"] as IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(model => item.EmitraTransactionId)
                                                @Html.HiddenFor(model => item.TicketID)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.PlaceName)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.TotalMember)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.DateOfArrival)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(model => item.TotalAmount)
                                            </td>
                                            @*<td>
                                                    <a href="" class="Print">Print Ticket</a>
                                                </td>*@
                                            <td>
                                                @*@if (item.CancleTicketStatus == 1)
        {

            <a href='@Url.Action("RefundRequestMemberWise", "BookOnlineTicket", new { ticketid = Encryption.encrypt(Convert.ToString(item.TicketID)) })'>
                Member Not Come
            </a>
            <br />
            <a href='@Url.Action("RefundRequest", "BookOnlineTicket", new { ticketid = Encryption.encrypt(Convert.ToString(item.TicketID)) })'>
                Cancel Ticket
            </a>

            <br />


        }
        else if (item.CancleTicketStatus != 1 && item.CancleTicketStatus != 0)
        {

            <span style="color: #337ab7">@item.CancleTicketStatusName </span>

        }

        <span style="color: #337ab7">&nbsp; &nbsp;  </span>*@

                                                @if (item.CancleTicketStatus == 1 || item.CancleTicketStatus == 0)
                                                {
                                                    <a href='@Url.Action("PrintWildLifeTicket", "BookOnlineTicket", new { ticketid = Encryption.encrypt(Convert.ToString(item.TicketID)) })' target="_blank">
                                                        Download
                                                    </a>
                                                }
                                                @if (item.COVIDStatus == 1 && item.TicketMemberBordingStatus == 0)
                                                {
                                                    if (item.isDFOApproved == 0)
                                                    {
                                                        <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                        <span style="color: #337ab7">Pending For Approval</span>
                                                    }
                                                    else
                                                    {
                                                        if (item.RefundStatus == 0)
                                                        {
                                                            <a href='@Url.Action("CovidBookingHDFD", "BookOnlineTicket", new { ticketid = Encryption.encrypt(Convert.ToString(item.TicketID)) })'>
                                                                <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                                <span style="color: #337ab7"> CovidBooking</span>
                                                            </a>

                                                            <span style="color: #337ab7">&nbsp; | &nbsp;  </span>
                                                            <a onclick="TicketRefund('@Encryption.encrypt(Convert.ToString(item.TicketID))')" style="cursor:pointer;">
                                                                Refund
                                                            </a>
                                                        }

                                                    }
                                                }
                                            </td>


                                        </tr>

                                    }


                                </tbody>
                            </table>

                            @*new added ( WildLife Ticket History ) arvind k sharma on 05/10/2017*@
                            <div class="col-lg-12" style="text-align:right">



                                @if ((ViewData["ticketlist"] as IEnumerable<FMDSS.Models.BookOnlineTicket.BookOnTicket>).Count() > 0)
                                {
                                    <a href='@Url.Action("WildLifeTicketHistoryForVIP", "BookOnlineTicket", new { ActionValues = "HALFDAYFULLDAYBOOKING", row = 0 })' target="_blank">
                                        View More Tickets
                                    </a>
                                }

                            </div>
                            @*new added ( WildLife Ticket History )  arvind k sharma on 05/10/2017*@
                            <table id="tbl_tkt">
                                <tbody></tbody>
                            </table>

                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var PopUpStatus = $('#BookingPopUpStatus').val();
        if (PopUpStatus == 1) {
            $("#myModal").modal();
        }
    });
</script>

<script>

    function RefundMsg(id) {

        $('#TicketID').val(id);
        $("#myModalRefund").modal('show');

    };

</script>


@*<script>
        var RootUrl = '@Url.Content("~/")';


        jQuery(document).ready(function () {
            $.noConflict(true);
        });

        setInterval(function () {

            $.ajax({
                type: 'POST',
                url: RootUrl + 'BookOnlineTicket/CurentTime',
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.status == "1")
                    {
                        location.href = data.Action
                    }

                }
            });

        }, 2000);


    </script>*@
