@model FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.View_Mst_BudgetHead

@{
    ViewBag.Title = "InsertBudgetHead";
    Layout = "~/Views/Shared/Forestlayout.cshtml";
}

<script src="~/js/jquery.min.js"></script>
 

<div id="page-wrapper-inn">
    @if (TempData["Message"] != null)
    {
        <script type="text/javascript" language="javascript">
            alert('@TempData["Message"]');          
        </script>
    }
    @Html.Partial("_PartialBudgetLink")
    <div class="col-lg-12 pad">
        <div class="col-lg-10">
            <h1 class="page-header">Budget Head (@Session["User"].ToString())</h1>
        </div>
        <div class="col-lg-2">
            <button type="button" class="btn btn-success confirm-toggle" name="Command" value="0" id="AddMaster">
                <i class="fa fa-check"></i> Show Master
            </button>
        </div>
    </div>
   
    @*@Html.Partial("_PartialBudgetLink")*@
    <div class="row">
        <div class="col-lg-12">
            <div class="table-responsive request-id">
                <table class="table table-striped table-bordered table-hover gridtable">
                    <thead>
                        <tr>
                            <th width="10%">S.No</th>
                            <th width="20%">BudgetHead</th>
                            @*<th width="10%"> HaveSubBudgetHead Type</th>*@
                            <th width="10%">Type Of Head</th> 
                            <th width="10%">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{int i=0;}
                        @foreach (var item in ViewData["BudgetHeadlst"] as IEnumerable<FMDSS.Models.ForesterDevelopment.BudgetAllocation.ViewModel.View_Mst_BudgetHead>)
                        {

                            <tr>
                                <td width="10%">
                                    @{i++;}
                                   @i
                                </td>
                                <td width="20%">
                                    @Html.DisplayFor(model => item.BudgetHead)
                                </td>
                                @*<td width="10%">
                                    @if (item.HaveSubBudgetHead == true)
                                    {
                                        <p>Yes</p>
                                    }
                                    else
                                    {
                                        <p>No</p>
                                    }

                                </td>*@
                                <td width="10%">
                                    @Html.DisplayFor(model => item.TypeOfHead)
                                </td>

                                <td width="10%">
                                    <button type="button" class="btn btn-warning btn-circle" id="btnedit" title="Edit" onclick="EditBudgetHead('@item.ID')">
                                        <i class="fa fa-edit"></i>
                                    </button>


                                </td>


                            </tr>
                        }


                    </tbody>
                </table>

            </div>
            <div class="panel panel-default">
                <input id="HdnID" name="HdnID" type="hidden">
                @using (Html.BeginForm("Submit", "BudgetHead", FormMethod.Post, new { data_behavior = "confirm", enctype = "multipart/form-data", id = "IdFor" }))
                {
                     @Html.HiddenFor(x => x.ID, new { id = "ID", name = "ID" })
                    <div class="panel-body">
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Type Of Head: <span class="mandatory">*</span></label>
                                @Html.DropDownListFor(x => x.TypeOfHead, new List<SelectListItem>
                                    {
                                        new SelectListItem { Text = "--Select--", Value = ""},
                                        new SelectListItem { Text = "Forest Head", Value = "Forest Head"},
                                        new SelectListItem { Text = "Wildlife Head", Value = "Wildlife Head"},

                                    }, new { id = "TypeOfHead", @class = "form-control" })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.TypeOfHead)</div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="form-group">
                                <label>Budget Head: <span class="mandatory">*</span></label>
                                @Html.TextBoxFor(x => x.BudgetHead, new { @class = "form-control", @id = "BudgetHead", name = "BudgetHead", @maxlength = 17 })
                                <div id="errJFMC" class="alert-danger1">@Html.ValidationMessageFor(x => x.BudgetHead)</div>
                            </div>
                        </div>
                     
                        <div class="col-lg-6" style="display:none">
                            <div class="radio">
                                <label>Have Sub Budget Head: <span class="mandatory">*</span></label>
                              
                                <label>
                                    @Html.RadioButtonFor(e => e.HaveSubBudgetHead, true, new {id="HaveSubBudgetHead", @checked = "checked" })
                                    Yes
                                </label>
                                <label>
                                    @Html.RadioButtonFor(e => e.HaveSubBudgetHead, false, new { id = "NoSubBudgetHead" })
                                    No
                                </label>
                            </div>
                        </div>
                    </div>
                    <div id="BudgetCir"></div>
                    <div class="btn-padd">
                        <div id="btn" class="col-lg-12">
                            <button type="Submit" class="btn btn-success confirm-toggle" name="Command" value="submit" id="Save" >
                                <i class="fa fa-check"></i> Submit
                            </button>
                            @*<button style="display:none;"  class="btn btn-success confirm-toggle" name="Command" value="Update" id="Update" onclick="UpdateBudgetHead()">
                                <i class="fa fa-check"></i> Update
                            </button>*@
                            <button type="reset" class="btn btn-warning" onclick="reload(); return false;">
                                <i class="fa fa-circle-o-notch fa-fw"></i> Reset
                            </button>
                            <button type="submit" name="Command" value="Cancel" class="btn btn-danger" onclick="reload(); return false;">
                                <i class="fa fa-times fa-fw"></i> Cancel
                            </button>

                        </div>
                    </div>

                }
            </div>
        </div>
        

    </div>
</div>
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    var RootUrl = '@Url.Content("~/")';
</script>
<script>

    $(function () {
       
        $('.gridtable').DataTable({
            responsive: true,
            "bSort": true
        });

        //$("#BudgetHead").mask("9999-99-999-99-99");
    });


    function EditBudgetHead(Id) {
        //$('#Update').show();
        //$('#Save').hide();
        $('#ID').val(Id);
        var Id = { Id: Id }
        $.ajax({
            type: 'POST',
            url: RootUrl + 'BudgetHead/EditBudgetHead', // we are calling json method
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(Id),
            success: function (data) {
                $.each(data, function (i, item) {                                      
                    $('#BudgetHead').val(item.BudgetHead);
                    $('#TypeOfHead').val(item.TypeOfHead);                  
                    if(item.HaveSubBudgetHead==true)
                     {                  
                        $('#HaveSubBudgetHead').prop('checked', true);                     
                    }
                    else {                        
                        $('#NoSubBudgetHead').prop('checked', true);
                    }
                });
                

            }
        });
    }


    function UpdateBudgetHead() {
        
        var objBudgetHead = {
            Id: $('#HdnID').val(),
            BudgetHead: $('#BudgetHead').val(),
            TypeOfHead: $('#TypeOfHead').val(),
            HaveSubBudgetHead: $('#HaveSubBudgetHead').val()
        }
        $.ajax({
            type: 'POST',
            url: RootUrl + 'BudgetHead/UpdateBudgetHead', // we are calling json method
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(objBudgetHead),
            success: function (data) {
                $.each(data, function (i, item) {

                   
                    
                });


            }
        });
    }
    //    $('#BudgetHeadID').change(function (e) {

    //        $("#SubBudgetHeadID").empty();
    //        var option = $("<option />");
    //        option.attr("value", '0').text('--Select--');
    //        $('#SubBudgetHeadID').append(option);
    //        var budgetHead = $('#BudgetHeadID').val();
    //        $.ajax({
    //            type: 'POST',
    //            url: RootURl + 'BudgetAllocationCircle/GetBudgetSubHead',
    //            dataType: 'json',
    //            data: { budgetHead: budgetHead },
    //            success: function (data) {
    //                $.each(data, function (i, items) {

    //                    $("#SubBudgetHeadID").append('<option value="' + items.Value + '">' +
    //                     items.Text + '</option>');

    //                });
    //            },

    //        });

    //    });



    //    $('#SchemeID').change(function (e) {

    //        $("#ActivityID").empty();
    //        var option = $("<option />");
    //        option.attr("value", '0').text('--Select--');
    //        $('#ActivityID').append(option);
    //        var SchemeID = $('#SchemeID').val();
    //        $.ajax({
    //            type: 'POST',
    //            url: RootURl + 'BudgetAllocationCircle/GetActivity',
    //            dataType: 'json',
    //            data: { SchemeID: SchemeID },
    //            success: function (data) {
    //                $.each(data, function (i, items) {

    //                    $("#ActivityID").append('<option value="' + items.Value + '">' +
    //                     items.Text + '</option>');

    //                });
    //            },

    //        });

    //    });

    //    $('#ActivityID').change(function (e) {

    //        $("#SubActivityID").empty();
    //        var option = $("<option />");
    //        option.attr("value", '0').text('--Select--');
    //        $('#SubActivityID').append(option);

    //        var ActivityID = $('#ActivityID').val();

    //        $.ajax({
    //            type: 'POST',
    //            url: RootURl + 'BudgetAllocationCircle/GetSubActivity',
    //            dataType: 'json',
    //            data: { ActivityID: ActivityID },
    //            success: function (data) {
    //                $.each(data, function (i, items) {

    //                    $("#SubActivityID").append('<option value="' + items.Value + '">' +
    //                     items.Text + '</option>');

    //                });
    //            },

    //        });

    //    });
    //    $('#SubActivityID').change(function (e) {


    //        var values = {
    //            FY_ID: $('#FY_ID').val(),
    //            BudgetHeadID: $('#BudgetHeadID').val(),
    //            SubBudgetHeadID: $('#SubBudgetHeadID').val(),

    //            SchemeID: $('#SchemeID').val(),
    //            ActivityID: $('#ActivityID').val(),
    //            SubActivityID: $('#SubActivityID').val()

    //        }
    //        $.ajax({
    //            type: 'POST',
    //            url: RootURl + 'BudgetAllocationCircle/GetAllocatedAmtDetails',
    //            contentType: 'application/json; charset=utf-8',
    //            data: JSON.stringify(values),
    //            success: function (data) {

    //                $('#AvailableAmount').val(data.totalAvaliableAmount);
    //            },

    //        });

    //    });



    //    $('#btnDetails').click(function () {

    //        if ($('#SchemeID').val() == '') {

    //            $('#SchemeID').focus();
    //            return false;
    //        }
    //        if ($('#ActivityID').val() == '') {

    //            $('#ActivityID').focus();
    //            return false;
    //        }
    //        if ($('#SubActivityID').val() == '') {

    //            $('#SubActivityID').focus();
    //            return false;
    //        }
    //        if ($('#AllocatedAmount').val() == '') {

    //            $('#AllocatedAmount').focus();
    //            return false;
    //        }
    //        if ($('#AllocatedAmount').val() == '') {

    //            $('#AllocatedAmount').focus();
    //            return false;
    //        }
    //        else {
    //            var values = {
    //                SchemeID: $('#SchemeID').val(),
    //                SchemeName: $('#SchemeID option:selected').text(),
    //                ActivityID: $('#ActivityID').val(),
    //                ActivityName: $('#ActivityID option:selected').text(),
    //                SubActivityID: $('#SubActivityID').val(),
    //                SubActivityName: $('#SubActivityID option:selected').text(),
    //                AllocatedAmount: $('#AllocatedAmount').val(),
    //                FY_ID: $('#FY_ID').val(),
    //                BudgetHeadID: $('#BudgetHeadID').val(),
    //                SubBudgetHeadID: $('#SubBudgetHeadID').val(),
    //                CIRCLE_CODE: $('#CIRCLE_CODE').val(),

    //            };
    //            $.ajax({
    //                type: 'POST',
    //                url: RootURl + 'BudgetAllocationCircle/AdddCircleDetails',
    //                contentType: 'application/json; charset=utf-8',
    //                data: JSON.stringify(values),
    //                success: function (data) {

    //                    if (data.rowid != "D") {
    //                        var id = "'" + data.rowid + "'";
    //                        var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName + "</td><td>" + data.SubActivityName + "</td><td>" + data.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteCircle(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
    //                        $("#tblDetails").append(rowdata);
    //                    }
    //                    else {

    //                        alert("Records already added!!");
    //                    }

    //                }
    //            });
    //        }

    //    });



    //});


    //function DeleteCircle(ID) {
    //    $("#tblDetails").empty();
    //    $.ajax({
    //        type: 'POST',
    //        url: RootURl + 'BudgetAllocationDivision/DeleteDivisionDetails',
    //        dataType: 'json',
    //        data: { Id: ID },
    //        success: function (data) {
    //            $.each(data, function (i, items) {
    //                var id = "'" + items.rowid + "'";
    //                var rowdata = "<tr><td style=display:none;>" + data.rowid + "</td><td>" + data.SchemeName + "</td><td>" + data.ActivityName + "</td><td>" + data.SubActivityName + "</td><td>" + data.AllocatedAmount + "</td><td>" + "<button type=button class='btn btn-danger btn-circle' style=cursor:pointer onclick=DeleteDivision(" + id + ")><i class='fa fa-times'></i></button>" + "</td></tr>";
    //                $("#tblDetails").append(rowdata);
    //            });
    //        },
    //        traditional: true,
    //        error: function (data) { console.log(data) }
    //    });
    //}


    function reload() {
        location.reload(true);
    }
</script>